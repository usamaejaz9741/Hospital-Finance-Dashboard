{"version":3,"file":"RevenueChart-BbB-I8rM.js","sources":["../../src/components/RevenueChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { RevenueData } from '../types/finance';\r\nimport { formatCurrency } from '../utils/formatters';\r\nimport { useChartTheme } from '../hooks/useChartTheme';\r\nimport ChartNoData from './ChartNoData';\r\nimport Dropdown from './Dropdown';\r\n\r\ninterface RevenueChartProps {\r\n  data: RevenueData[];\r\n  availableYears?: number[];\r\n}\r\n\r\n/**\r\n * Renders a modern line chart with glassmorphism styling displaying revenue and expenses trends.\r\n */\r\nconst RevenueChart: React.FC<RevenueChartProps> = ({ availableYears = [2021, 2022, 2023, 2024] }) => {\r\n  const { chartTheme } = useChartTheme();\r\n  const [startYear, setStartYear] = useState(availableYears[0] || 2021);\r\n  const [endYear, setEndYear] = useState(availableYears[availableYears.length - 1] || 2024);\r\n\r\n  // Generate year options from available years\r\n  const yearOptions = useMemo(() => {\r\n    return availableYears.map(year => ({\r\n      value: year.toString(),\r\n      label: year.toString()\r\n    }));\r\n  }, [availableYears]);\r\n\r\n  // Generate dynamic data based on selected range\r\n  const chartData = useMemo(() => {\r\n    if (startYear === endYear) {\r\n      // Same year selected - show months\r\n      const months = [\r\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n      ];\r\n      \r\n      return months.map((month) => {\r\n        const baseRevenue = 8000000 + Math.random() * 4000000;\r\n        const baseExpenses = 6000000 + Math.random() * 3000000;\r\n        \r\n        return {\r\n          date: month,\r\n          revenue: Math.round(baseRevenue),\r\n          expenses: Math.round(baseExpenses),\r\n          netIncome: Math.round(baseRevenue - baseExpenses)\r\n        };\r\n      });\r\n    } else {\r\n      // Different years selected - show years\r\n      const years = [];\r\n      const start = startYear || 2021;\r\n      const end = endYear || 2024;\r\n      for (let year = start; year <= end; year++) {\r\n        const baseRevenue = 95000000 + Math.random() * 20000000;\r\n        const baseExpenses = 75000000 + Math.random() * 15000000;\r\n        \r\n        years.push({\r\n          date: year.toString(),\r\n          revenue: Math.round(baseRevenue),\r\n          expenses: Math.round(baseExpenses),\r\n          netIncome: Math.round(baseRevenue - baseExpenses)\r\n        });\r\n      }\r\n      return years;\r\n    }\r\n  }, [startYear, endYear]);\r\n\r\n  if (!chartData || chartData.length === 0) {\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-2xl font-bold gradient-text\">Revenue & Expenses Trend</h2>\r\n        </div>\r\n        <ChartNoData\r\n          title=\"No Data Available\"\r\n          message=\"There is no revenue data to display for the selected period.\"\r\n          icon={\r\n            <svg className=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n            </svg>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  interface TooltipPayload {\r\n    name: string;\r\n    value: number;\r\n    color: string;\r\n  }\r\n\r\n  interface CustomTooltipProps {\r\n    active?: boolean;\r\n    payload?: TooltipPayload[];\r\n    label?: string;\r\n  }\r\n\r\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"gradient-bg-primary rounded-xl p-4 border border-white/30 backdrop-blur-sm shadow-2xl\">\r\n          <p className=\"font-semibold mb-3 text-white text-center\">\r\n            {(startYear || 2021) === (endYear || 2024) ? `${label} ${startYear || 2021}` : label}\r\n          </p>\r\n          <div className=\"space-y-2\">\r\n            {payload.map((entry, index: number) => (\r\n              <div key={index} className=\"flex items-center justify-between space-x-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div \r\n                    className=\"w-3 h-3 rounded-full\" \r\n                    style={{ backgroundColor: entry.color }}\r\n                  />\r\n                  <span className=\"text-sm text-white/80\">{entry.name}:</span>\r\n                </div>\r\n                <span className=\"font-semibold text-white\">\r\n                  {formatCurrency(entry.value)}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container group\">\r\n      {/* Title and Dropdowns in Same Row */}\r\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 lg:gap-6 mb-6 sm:mb-8\">\r\n        <div className=\"flex-shrink-0\">\r\n          <h2 className=\"mobile-heading-scale font-bold gradient-text\">\r\n            Operating Margin Trend\r\n          </h2>\r\n        </div>\r\n        \r\n        {/* Year Range Dropdowns */}\r\n        <div className=\"flex flex-row items-center gap-3 lg:flex-shrink-0\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <span className=\"text-white/80 font-medium text-sm whitespace-nowrap\">Start:</span>\r\n            <div className=\"min-w-[100px]\">\r\n              <Dropdown\r\n                options={yearOptions}\r\n                value={(startYear || 2021).toString()}\r\n                onChange={(value) => {\r\n                  const newStartYear = parseInt(value);\r\n                  setStartYear(newStartYear);\r\n                  // Ensure end year is not before start year\r\n                  if (newStartYear > (endYear || 2024)) {\r\n                    setEndYear(newStartYear);\r\n                  }\r\n                }}\r\n                placeholder=\"Start Year\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-3\">\r\n            <span className=\"text-white/80 font-medium text-sm whitespace-nowrap\">End:</span>\r\n            <div className=\"min-w-[100px]\">\r\n              <Dropdown\r\n                options={yearOptions.filter(year => parseInt(year.value) >= (startYear || 2021))}\r\n                value={(endYear || 2024).toString()}\r\n                onChange={(value) => setEndYear(parseInt(value))}\r\n                placeholder=\"End Year\"\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Revenue, Expenses, and Net Income Area Chart */}\r\n      <div className=\"h-64 sm:h-80 lg:h-96 group-hover:scale-[1.01] transition-transform duration-300 w-full min-w-0\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <AreaChart data={chartData} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n            <defs>\r\n              {/* Gradient definitions for lines */}\r\n              <linearGradient id=\"revenueGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#10b981\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#10b981\" stopOpacity={0.1}/>\r\n              </linearGradient>\r\n              <linearGradient id=\"expenseGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#ef4444\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#ef4444\" stopOpacity={0.1}/>\r\n              </linearGradient>\r\n              <linearGradient id=\"netIncomeGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#3b82f6\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0.1}/>\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            <CartesianGrid strokeDasharray=\"3 3\" stroke={chartTheme.grid.stroke} />\r\n            <XAxis \r\n              dataKey=\"date\" \r\n              stroke={chartTheme.axis.stroke}\r\n              fontSize={12}\r\n              fontWeight={500}\r\n              axisLine={true}\r\n              tickLine={true}\r\n              tick={{ fill: chartTheme.axis.stroke, fontSize: 12 }}\r\n              height={60}\r\n              padding={{ left: 0, right: 12 }}\r\n            />\r\n            <YAxis \r\n              stroke={chartTheme.axis.stroke}\r\n              fontSize={12}\r\n              fontWeight={500}\r\n              axisLine={true}\r\n              tickLine={true}\r\n              tick={{ fill: chartTheme.axis.stroke, fontSize: 12 }}\r\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\r\n              // width={0}\r\n              tickCount={6}\r\n              domain={[0, 'dataMax + 2000000']}\r\n            />\r\n            <Tooltip \r\n              content={<CustomTooltip />}\r\n              cursor={{\r\n                fill: chartTheme.cursor.fill,\r\n                stroke: chartTheme.cursor.stroke,\r\n                strokeWidth: 1\r\n              }}\r\n            />\r\n            <Legend \r\n              wrapperStyle={{\r\n                position: 'absolute',\r\n                bottom: '15px',\r\n                left: '0',\r\n                right: '0',\r\n                width: '100%',\r\n                height: 'auto',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n              }}\r\n              content={({ payload }) => (\r\n                <div className=\"w-full flex justify-center\">\r\n                  <div className=\"chart-legend-container\">\r\n                    <div className=\"flex flex-wrap items-center justify-center gap-x-6 gap-y-3\">\r\n                      {payload?.map((entry, index: number) => (\r\n                        <div key={index} className=\"flex items-center space-x-2\">\r\n                          <div \r\n                            className=\"w-3 h-3 rounded-full flex-shrink-0\" \r\n                            style={{ backgroundColor: entry.color }}\r\n                          />\r\n                          <span className=\"legend-text text-sm font-medium whitespace-nowrap\">\r\n                            {entry.value}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n            \r\n            {/* Revenue Area with enhanced styling */}\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"revenue\" \r\n              stroke=\"#10b981\"\r\n              strokeWidth={3}\r\n              fill=\"url(#revenueGradient)\"\r\n              name=\"Revenue\"\r\n              dot={{ \r\n                fill: '#10b981', \r\n                strokeWidth: 0, \r\n                r: 5,\r\n                filter: 'drop-shadow(0px 2px 4px rgba(16, 185, 129, 0.3))'\r\n              }}\r\n              activeDot={{ \r\n                r: 8, \r\n                fill: '#10b981', \r\n                stroke: 'rgba(255, 255, 255, 0.8)', \r\n                strokeWidth: 3,\r\n                filter: 'drop-shadow(0px 4px 8px rgba(16, 185, 129, 0.5))'\r\n              }}\r\n            />\r\n            \r\n            {/* Expenses Area */}\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"expenses\" \r\n              stroke=\"#ef4444\"\r\n              strokeWidth={3}\r\n              fill=\"url(#expenseGradient)\"\r\n              name=\"Expenses\"\r\n              dot={{ \r\n                fill: '#ef4444', \r\n                strokeWidth: 0, \r\n                r: 5,\r\n                filter: 'drop-shadow(0px 2px 4px rgba(239, 68, 68, 0.3))'\r\n              }}\r\n              activeDot={{ \r\n                r: 8, \r\n                fill: '#ef4444', \r\n                stroke: 'rgba(255, 255, 255, 0.8)', \r\n                strokeWidth: 3,\r\n                filter: 'drop-shadow(0px 4px 8px rgba(239, 68, 68, 0.5))'\r\n              }}\r\n            />\r\n            \r\n            {/* Net Income Area */}\r\n            <Area \r\n              type=\"monotone\" \r\n              dataKey=\"netIncome\" \r\n              stroke=\"#3b82f6\"\r\n              strokeWidth={3}\r\n              fill=\"url(#netIncomeGradient)\"\r\n              name=\"Net Income\"\r\n              dot={{ \r\n                fill: '#3b82f6', \r\n                strokeWidth: 0, \r\n                r: 5,\r\n                filter: 'drop-shadow(0px 2px 4px rgba(59, 130, 246, 0.3))'\r\n              }}\r\n              activeDot={{ \r\n                r: 8, \r\n                fill: '#3b82f6', \r\n                stroke: 'rgba(255, 255, 255, 0.8)', \r\n                strokeWidth: 3,\r\n                filter: 'drop-shadow(0px 4px 8px rgba(59, 130, 246, 0.5))'\r\n              }}\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      \r\n      {/* Redesigned Performance Insight Section - Card Style */}\r\n      <div className=\"mt-6\">\r\n        <div className=\"glass-card rounded-xl mobile-card-padding bg-gradient-to-r from-green-500/5 to-blue-500/5 border border-green-500/30\">\r\n          <div className=\"performance-insight-container\">\r\n            <div className=\"performance-insight-header\">\r\n              <div style={{ \r\n                width: '2rem',\r\n                height: '2rem',\r\n                borderRadius: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                background: 'linear-gradient(135deg, #3b82f6, #2563eb)'\r\n              }}>\r\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n              </div>\r\n              <span className=\"performance-insight-title\">Performance Insights</span>\r\n              {/* AI Indicator - Button Style */}\r\n              <button className=\"ml-2 btn-base btn-primary btn-sm\" style={{ padding: '4px 8px', fontSize: 'var(--font-size-xs)', borderRadius: '4px', height: 'auto', minHeight: 'unset' }} aria-label=\"AI-powered insights\">\r\n                <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\r\n                </svg>\r\n                <span className=\"ml-1 text-xs font-medium\">AI</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"performance-insight-grid\">\r\n              <div className=\"performance-insight-card amber\">\r\n                <div className=\"performance-insight-card-value\">$125.2M</div>\r\n                <div className=\"performance-insight-card-label\">Peak Revenue</div>\r\n                <div className=\"performance-insight-card-context\">June 2023</div>\r\n              </div>\r\n              <div className=\"performance-insight-card blue\">\r\n                <div className=\"performance-insight-card-value\">+15.8%</div>\r\n                <div className=\"performance-insight-card-label\">Growth Rate</div>\r\n                <div className=\"performance-insight-card-context\">Year over Year</div>\r\n              </div>\r\n              <div className=\"performance-insight-card green\">\r\n                <div className=\"performance-insight-card-value\">18.3%</div>\r\n                <div className=\"performance-insight-card-label\">Profit Margin</div>\r\n                <div className=\"performance-insight-card-context\">Current Period</div>\r\n              </div>\r\n              <div className=\"performance-insight-card cyan\">\r\n                <div className=\"performance-insight-card-value\">92.1%</div>\r\n                <div className=\"performance-insight-card-label\">Efficiency</div>\r\n                <div className=\"performance-insight-card-context\">Overall Score</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevenueChart;\r\n"],"names":["RevenueChart","availableYears","chartTheme","useChartTheme","startYear","setStartYear","useState","endYear","setEndYear","length","yearOptions","useMemo","map","year","value","toString","label","chartData","month","baseRevenue","Math","random","baseExpenses","date","revenue","round","expenses","netIncome","years","end","push","jsxs","className","children","jsx","ChartNoData","title","message","icon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","CustomTooltip","active","payload","entry","index","style","backgroundColor","color","name","formatCurrency","Dropdown","options","onChange","newStartYear","parseInt","placeholder","filter","ResponsiveContainer","width","height","AreaChart","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","grid","XAxis","dataKey","axis","fontSize","fontWeight","axisLine","tickLine","tick","padding","YAxis","tickFormatter","toFixed","tickCount","domain","Tooltip","content","cursor","Legend","wrapperStyle","position","display","alignItems","justifyContent","Area","type","dot","r","activeDot","borderRadius","background","minHeight"],"mappings":"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"}