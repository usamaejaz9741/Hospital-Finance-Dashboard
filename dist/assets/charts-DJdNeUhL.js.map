{"version":3,"file":"charts-DJdNeUhL.js","sources":["../../src/components/RevenueChart.tsx","../../src/components/ExpensePieChart.tsx","../../src/components/CashFlowChart.tsx"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { RevenueData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\n\ninterface RevenueChartProps {\n  data: RevenueData[];\n}\n\nconst RevenueChart: React.FC<RevenueChartProps> = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">No Data Available</p>\n            <p className=\"text-sm\">There is no revenue data to display for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-4 border border-gray-200 rounded-lg shadow-lg\">\n          <p className=\"font-medium text-gray-900 mb-2\">{`${label} 2024`}</p>\n          {payload.map((entry, index: number) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n        <div className=\"flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-300\">\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-primary-500 rounded-full mr-2\"></div>\n            <span>Revenue</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-danger-500 rounded-full mr-2\"></div>\n            <span>Expenses</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-success-500 rounded-full mr-2\"></div>\n            <span>Net Income</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"h-80\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f1f5f9\" />\n            <XAxis \n              dataKey=\"month\" \n              stroke=\"#64748b\"\n              fontSize={12}\n            />\n            <YAxis \n              stroke=\"#64748b\"\n              fontSize={12}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend />\n            <Line \n              type=\"monotone\" \n              dataKey=\"revenue\" \n              stroke=\"#3b82f6\" \n              strokeWidth={3}\n              name=\"Revenue\"\n              dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"expenses\" \n              stroke=\"#ef4444\" \n              strokeWidth={3}\n              name=\"Expenses\"\n              dot={{ fill: '#ef4444', strokeWidth: 2, r: 4 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"netIncome\" \n              stroke=\"#22c55e\" \n              strokeWidth={3}\n              name=\"Net Income\"\n              dot={{ fill: '#22c55e', strokeWidth: 2, r: 4 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueChart;\n","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport { ExpenseBreakdown } from '../types/finance';\nimport { formatCurrency, formatPercentage } from '../utils/formatters';\n\ninterface ExpensePieChartProps {\n  data: ExpenseBreakdown[];\n}\n\nconst ExpensePieChart: React.FC<ExpensePieChartProps> = ({ data }) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">No Data Available</p>\n            <p className=\"text-sm\">There is no expense data to display for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (data.reduce((sum, item) => sum + item.amount, 0) === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">Zero Expenses</p>\n            <p className=\"text-sm\">No expenses have been recorded for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    payload: ExpenseBreakdown;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n  }\n\n  interface LegendPayload {\n    value: string;\n    color: string;\n  }\n\n  interface CustomLegendProps {\n    payload?: LegendPayload[];\n  }\n\n  const CustomTooltip = ({ active, payload }: CustomTooltipProps) => {\n    if (active && payload?.[0]?.payload) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-200 rounded-lg shadow-lg\">\n          <p className=\"font-medium text-gray-900 mb-1\">{data.category}</p>\n          <p className=\"text-sm text-gray-600\">\n            Amount: {formatCurrency(data.amount)}\n          </p>\n          <p className=\"text-sm text-gray-600\">\n            Percentage: {formatPercentage(data.percentage)}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLegend = ({ payload }: CustomLegendProps) => {\n    if (!payload) return null;\n    \n    return (\n      <div className=\"mt-4\">\n        <div className=\"grid grid-cols-2 gap-2 text-sm\">\n          {payload.map((entry, index: number) => (\n            <div key={index} className=\"flex items-center\">\n              <div \n                className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\"\n                style={{ backgroundColor: entry.color }}\n              ></div>\n              <span className=\"text-gray-700 dark:text-gray-300 truncate\">{entry.value}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n          Total: {formatCurrency(data.reduce((sum, item) => sum + item.amount, 0))}\n        </div>\n      </div>\n      \n      <div className=\"h-80\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart>\n            <Pie\n              data={data}\n              cx=\"50%\"\n              cy=\"45%\"\n              outerRadius={80}\n              innerRadius={40}\n              paddingAngle={2}\n              dataKey=\"amount\"\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            <Legend content={<CustomLegend />} />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensePieChart;\n","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { CashFlowData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\n\ninterface CashFlowChartProps {\n  data: CashFlowData[];\n}\n\nconst CashFlowChart: React.FC<CashFlowChartProps> = ({ data }) => {\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-4 border border-gray-200 rounded-lg shadow-lg\">\n          <p className=\"font-medium text-gray-900 mb-2\">{label}</p>\n          {payload.map((entry, index: number) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Cash Flow Analysis</h2>\n        <div className=\"flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-300\">\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-primary-500 rounded-full mr-2\"></div>\n            <span>Operating</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-warning-500 rounded-full mr-2\"></div>\n            <span>Investing</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-purple-500 rounded-full mr-2\"></div>\n            <span>Financing</span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"w-3 h-3 bg-success-500 rounded-full mr-2\"></div>\n            <span>Net Cash Flow</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"h-80\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f1f5f9\" />\n            <XAxis \n              dataKey=\"date\" \n              stroke=\"#64748b\"\n              fontSize={12}\n            />\n            <YAxis \n              stroke=\"#64748b\"\n              fontSize={12}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend />\n            <Bar \n              dataKey=\"operatingCashFlow\" \n              fill=\"#3b82f6\" \n              name=\"Operating Cash Flow\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"investingCashFlow\" \n              fill=\"#f59e0b\" \n              name=\"Investing Cash Flow\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"financingCashFlow\" \n              fill=\"#8b5cf6\" \n              name=\"Financing Cash Flow\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"netCashFlow\" \n              fill=\"#22c55e\" \n              name=\"Net Cash Flow\"\n              radius={[2, 2, 0, 0]}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default CashFlowChart;\n"],"names":["RevenueChart","data","length","jsxs","className","children","jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","CustomTooltip","active","payload","label","map","entry","index","style","color","name","formatCurrency","value","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","fontSize","YAxis","tickFormatter","toFixed","Tooltip","content","Legend","Line","type","dot","r","ExpensePieChart","reduce","sum","item","amount","category","formatPercentage","percentage","CustomLegend","backgroundColor","PieChart","Pie","cx","cy","outerRadius","innerRadius","paddingAngle","Cell","CashFlowChart","BarChart","Bar","radius"],"mappings":"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"}