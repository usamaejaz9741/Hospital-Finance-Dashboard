{"version":3,"file":"charts-CaFSdy87.js","sources":["../../node_modules/tailwindcss/resolveConfig.js","../../src/hooks/useChartTheme.ts","../../tailwind.config.js","../../src/components/RevenueChart.tsx","../../src/components/ExpensePieChart.tsx","../../src/components/CashFlowChart.tsx"],"sourcesContent":["let resolveConfig = require('./lib/public/resolve-config')\nmodule.exports = (resolveConfig.__esModule ? resolveConfig : { default: resolveConfig }).default\n","import { useTheme } from './useTheme';\nimport resolveConfig from 'tailwindcss/resolveConfig';\nimport tailwindConfig from '../../tailwind.config.js';\n\nconst fullConfig = resolveConfig(tailwindConfig);\n\nexport const useChartTheme = () => {\n  const { resolvedTheme } = useTheme();\n  \n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const themeColors: any = fullConfig.theme.colors;\n\n  const colors = {\n    primary: resolvedTheme === 'dark' ? themeColors.primary[400] : themeColors.primary[500],\n    secondary: resolvedTheme === 'dark' ? themeColors.purple[400] : themeColors.purple[500],\n    success: resolvedTheme === 'dark' ? themeColors.success[400] : themeColors.success[500],\n    danger: resolvedTheme === 'dark' ? themeColors.danger[400] : themeColors.danger[500],\n    warning: resolvedTheme === 'dark' ? themeColors.warning[400] : themeColors.warning[500],\n    info: resolvedTheme === 'dark' ? themeColors.indigo[400] : themeColors.indigo[500],\n  };\n\n  const chartTheme = {\n    colors,\n    grid: {\n      stroke: resolvedTheme === 'dark' ? themeColors.dark.border : '#f1f5f9',\n    },\n    axis: {\n      stroke: resolvedTheme === 'dark' ? themeColors.dark.text.muted : '#64748b',\n    },\n    tooltip: {\n      backgroundColor: resolvedTheme === 'dark' ? themeColors.dark.surface : '#ffffff',\n      border: resolvedTheme === 'dark' ? themeColors.dark.border : '#e5e7eb',\n      textColor: resolvedTheme === 'dark' ? themeColors.dark.text.primary : '#111827',\n      shadowColor: resolvedTheme === 'dark' ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.1)',\n    },\n    legend: {\n      color: resolvedTheme === 'dark' ? themeColors.dark.text.secondary : '#6b7280',\n    },\n  };\n\n  return { chartTheme, resolvedTheme };\n};\n","/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  darkMode: 'class',\n  theme: {\n    screens: {\n      'xs': '475px',\n      'sm': '640px',\n      'md': '768px',\n      'lg': '1024px',\n      'xl': '1280px',\n      '2xl': '1536px',\n    },\n    extend: {\n      colors: {\n        primary: {\n          50: '#eff6ff',\n          100: '#dbeafe',\n          200: '#bfdbfe',\n          300: '#93c5fd',\n          400: '#60a5fa',\n          500: '#3b82f6',\n          600: '#2563eb',\n          700: '#1d4ed8',\n          800: '#1e40af',\n          900: '#1e3a8a',\n        },\n        success: {\n          50: '#f0fdf4',\n          100: '#dcfce7',\n          200: '#bbf7d0',\n          300: '#86efac',\n          400: '#4ade80',\n          500: '#22c55e',\n          600: '#16a34a',\n          700: '#15803d',\n          800: '#166534',\n          900: '#14532d',\n        },\n        warning: {\n          50: '#fffbeb',\n          100: '#fef3c7',\n          200: '#fed7aa',\n          300: '#fdba74',\n          400: '#fb923c',\n          500: '#f59e0b',\n          600: '#d97706',\n          700: '#b45309',\n          800: '#92400e',\n          900: '#78350f',\n        },\n        danger: {\n          50: '#fef2f2',\n          100: '#fee2e2',\n          200: '#fecaca',\n          300: '#fca5a5',\n          400: '#f87171',\n          500: '#ef4444',\n          600: '#dc2626',\n          700: '#b91c1c',\n          800: '#991b1b',\n          900: '#7f1d1d',\n        },\n        purple: {\n          50: '#faf5ff',\n          100: '#f3e8ff',\n          200: '#e9d5ff',\n          300: '#d8b4fe',\n          400: '#c084fc',\n          500: '#a855f7',\n          600: '#9333ea',\n          700: '#7c3aed',\n          800: '#6b21a8',\n          900: '#581c87',\n        },\n        indigo: {\n          50: '#eef2ff',\n          100: '#e0e7ff',\n          200: '#c7d2fe',\n          300: '#a5b4fc',\n          400: '#818cf8',\n          500: '#6366f1',\n          600: '#4f46e5',\n          700: '#4338ca',\n          800: '#3730a3',\n          900: '#312e81',\n        },\n        // Dark mode specific colors - optimized for better contrast\n        dark: {\n          background: '#0f172a',\n          surface: '#1e293b',\n          card: '#334155',\n          border: '#475569',\n          text: {\n            primary: '#f8fafc',\n            secondary: '#e2e8f0',\n            muted: '#94a3b8',\n          },\n          hover: {\n            surface: '#374151',\n            card: '#475569',\n          }\n        }\n      },\n      backgroundColor: {\n        'dark-bg': '#0f172a',\n        'dark-surface': '#1e293b',\n        'dark-card': '#334155',\n      },\n      textColor: {\n        'dark-primary': '#f1f5f9',\n        'dark-secondary': '#cbd5e1',\n        'dark-muted': '#94a3b8',\n      },\n      borderColor: {\n        'dark-border': '#475569',\n      }\n    },\n  },\n  plugins: [],\n}\n\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { RevenueData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\n\ninterface RevenueChartProps {\n  data: RevenueData[];\n}\n\nconst RevenueChart: React.FC<RevenueChartProps> = ({ data }) => {\n  const { chartTheme } = useChartTheme();\n  \n  if (!data || data.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">No Data Available</p>\n            <p className=\"text-sm\">There is no revenue data to display for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div \n          className=\"p-4 rounded-lg shadow-lg border backdrop-blur-sm\"\n          style={{ \n            backgroundColor: chartTheme.tooltip.backgroundColor,\n            borderColor: chartTheme.tooltip.border,\n            color: chartTheme.tooltip.textColor,\n            boxShadow: `0 10px 15px -3px ${chartTheme.tooltip.shadowColor}`\n          }}\n        >\n          <p className=\"font-medium mb-2\" style={{ color: chartTheme.tooltip.textColor }}>\n            {`${label} 2024`}\n          </p>\n          {payload.map((entry, index: number) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n      </div>\n      \n      <div className=\"h-64 sm:h-80 lg:h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke={chartTheme.grid.stroke} />\n            <XAxis \n              dataKey=\"month\" \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n            />\n            <YAxis \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend \n              wrapperStyle={{ color: chartTheme.legend.color }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"revenue\" \n              stroke={chartTheme.colors.primary} \n              strokeWidth={3}\n              name=\"Revenue\"\n              dot={{ fill: chartTheme.colors.primary, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.primary, stroke: 'white', strokeWidth: 2 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"expenses\" \n              stroke={chartTheme.colors.danger} \n              strokeWidth={3}\n              name=\"Expenses\"\n              dot={{ fill: chartTheme.colors.danger, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.danger, stroke: 'white', strokeWidth: 2 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"netIncome\" \n              stroke={chartTheme.colors.success} \n              strokeWidth={3}\n              name=\"Net Income\"\n              dot={{ fill: chartTheme.colors.success, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.success, stroke: 'white', strokeWidth: 2 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueChart;\n","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport { ExpenseBreakdown } from '../types/finance';\nimport { formatCurrency, formatPercentage } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\n\ninterface ExpensePieChartProps {\n  data: ExpenseBreakdown[];\n}\n\nconst ExpensePieChart: React.FC<ExpensePieChartProps> = ({ data }) => {\n  const { chartTheme } = useChartTheme();\n  \n  if (!data || data.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">No Data Available</p>\n            <p className=\"text-sm\">There is no expense data to display for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (data.reduce((sum, item) => sum + item.amount, 0) === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p className=\"text-lg font-medium mb-2\">Zero Expenses</p>\n            <p className=\"text-sm\">No expenses have been recorded for the selected period.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    payload: ExpenseBreakdown;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n  }\n\n  interface LegendPayload {\n    value: string;\n    color: string;\n  }\n\n  interface CustomLegendProps {\n    payload?: LegendPayload[];\n  }\n\n  const CustomTooltip = ({ active, payload }: CustomTooltipProps) => {\n    if (active && payload?.[0]?.payload) {\n      const data = payload[0].payload;\n      return (\n        <div \n          className=\"p-4 rounded-lg shadow-lg border backdrop-blur-sm\"\n          style={{ \n            backgroundColor: chartTheme.tooltip.backgroundColor,\n            borderColor: chartTheme.tooltip.border,\n            color: chartTheme.tooltip.textColor,\n            boxShadow: `0 10px 15px -3px ${chartTheme.tooltip.shadowColor}`\n          }}\n        >\n          <p className=\"font-medium mb-1\" style={{ color: chartTheme.tooltip.textColor }}>\n            {data.category}\n          </p>\n          <p className=\"text-sm\" style={{ color: chartTheme.tooltip.textColor }}>\n            Amount: {formatCurrency(data.amount)}\n          </p>\n          <p className=\"text-sm\" style={{ color: chartTheme.tooltip.textColor }}>\n            Percentage: {formatPercentage(data.percentage)}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLegend = ({ payload }: CustomLegendProps) => {\n    if (!payload) return null;\n    \n    return (\n      <div className=\"mt-4\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 text-sm\">\n          {data.map((item, index: number) => (\n            <div key={index} className=\"flex items-center\">\n              <div \n                className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\"\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <span className=\"text-gray-700 dark:text-gray-300 truncate\">{item.category}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n          Total: {formatCurrency(data.reduce((sum, item) => sum + item.amount, 0))}\n        </div>\n      </div>\n      \n      <div className=\"h-80 sm:h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart margin={{ top: 5, right: 0, bottom: 5, left: 0 }}>\n            <Pie\n              data={data}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius=\"95%\"\n              innerRadius=\"47%\"\n              paddingAngle={2}\n              dataKey=\"amount\"\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            <Legend content={<CustomLegend />} />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensePieChart;\n","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { CashFlowData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\n\ninterface CashFlowChartProps {\n  data: CashFlowData[];\n}\n\nconst CashFlowChart: React.FC<CashFlowChartProps> = ({ data }) => {\n  const { chartTheme } = useChartTheme();\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div \n          className=\"p-4 rounded-lg shadow-lg border backdrop-blur-sm\"\n          style={{ \n            backgroundColor: chartTheme.tooltip.backgroundColor,\n            borderColor: chartTheme.tooltip.border,\n            color: chartTheme.tooltip.textColor,\n            boxShadow: `0 10px 15px -3px ${chartTheme.tooltip.shadowColor}`\n          }}\n        >\n          <p className=\"font-medium mb-2\" style={{ color: chartTheme.tooltip.textColor }}>{label}</p>\n          {payload.map((entry, index: number) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Cash Flow Analysis</h2>\n      </div>\n      \n      <div className=\"h-64 sm:h-80\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke={chartTheme.grid.stroke} />\n            <XAxis \n              dataKey=\"date\" \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n            />\n            <YAxis \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend \n              wrapperStyle={{ color: chartTheme.legend.color }}\n            />\n            <Bar \n              dataKey=\"operatingCashFlow\" \n              fill={chartTheme.colors.primary} \n              name=\"Operating\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"investingCashFlow\" \n              fill={chartTheme.colors.warning} \n              name=\"Investing\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"financingCashFlow\" \n              fill={chartTheme.colors.secondary} \n              name=\"Financing\"\n              radius={[2, 2, 0, 0]}\n            />\n            <Bar \n              dataKey=\"netCashFlow\" \n              fill={chartTheme.colors.success} \n              name=\"Net Cash Flow\"\n              radius={[2, 2, 0, 0]}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default CashFlowChart;\n"],"names":["resolveConfig","require$$0","fullConfig","__esModule","default","content","darkMode","theme","screens","xs","sm","md","lg","xl","extend","colors","primary","success","warning","danger","purple","indigo","dark","background","surface","card","border","text","secondary","muted","hover","backgroundColor","textColor","borderColor","plugins","useChartTheme","resolvedTheme","useTheme","themeColors","chartTheme","info","grid","stroke","axis","tooltip","shadowColor","legend","color","RevenueChart","data","length","jsxs","className","children","jsx","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","CustomTooltip","active","payload","label","style","boxShadow","map","entry","index","name","formatCurrency","value","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","fontSize","YAxis","tickFormatter","toFixed","Tooltip","Legend","wrapperStyle","Line","type","dot","r","activeDot","ExpensePieChart","reduce","sum","item","amount","category","formatPercentage","percentage","CustomLegend","PieChart","Pie","cx","cy","outerRadius","innerRadius","paddingAngle","Cell","CashFlowChart","BarChart","Bar","radius"],"mappings":"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","x_google_ignoreList":[0]}