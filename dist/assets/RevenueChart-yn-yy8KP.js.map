{"version":3,"file":"RevenueChart-yn-yy8KP.js","sources":["../../src/components/RevenueChart.tsx"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { RevenueData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\nimport ChartNoData from './ChartNoData';\n\ninterface RevenueChartProps {\n  data: RevenueData[];\n}\n\n/**\n * Renders a line chart displaying revenue and expenses trends.\n *\n * @param {RevenueChartProps} props The component props.\n * @param {RevenueData[]} props.data The data to display in the chart.\n * @returns {React.ReactElement} The rendered line chart.\n */\nconst RevenueChart: React.FC<RevenueChartProps> = ({ data }) => {\n  const { chartTheme } = useChartTheme();\n  \n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white dark:bg-dark-surface p-4 sm:p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-200 dark:border-dark-border\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n        </div>\n        <ChartNoData\n          title=\"No Data Available\"\n          message=\"There is no revenue data to display for the selected period.\"\n          icon={\n            <svg className=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n          }\n        />\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div \n          className=\"p-4 rounded-lg shadow-lg border backdrop-blur-sm\"\n          style={{ \n            backgroundColor: chartTheme.tooltip.backgroundColor,\n            borderColor: chartTheme.tooltip.border,\n            color: chartTheme.tooltip.textColor,\n            boxShadow: `0 10px 15px -3px ${chartTheme.tooltip.shadowColor}`\n          }}\n        >\n          <p className=\"font-medium mb-2\" style={{ color: chartTheme.tooltip.textColor }}>\n            {`${label} 2024`}\n          </p>\n          {payload.map((entry, index: number) => (\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\n              {`${entry.name}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-dark-surface p-4 sm:p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-200 dark:border-dark-border\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Revenue & Expenses Trend</h2>\n      </div>\n      \n      <div className=\"h-64 sm:h-80 lg:h-96 -ml-4\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke={chartTheme.grid.stroke} />\n            <XAxis \n              dataKey=\"month\" \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n            />\n            <YAxis \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Legend \n              wrapperStyle={{ color: chartTheme.legend.color }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"revenue\" \n              stroke={chartTheme.colors.primary} \n              strokeWidth={3}\n              name=\"Revenue\"\n              dot={{ fill: chartTheme.colors.primary, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.primary, stroke: 'white', strokeWidth: 2 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"expenses\" \n              stroke={chartTheme.colors.danger} \n              strokeWidth={3}\n              name=\"Expenses\"\n              dot={{ fill: chartTheme.colors.danger, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.danger, stroke: 'white', strokeWidth: 2 }}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"netIncome\" \n              stroke={chartTheme.colors.success} \n              strokeWidth={3}\n              name=\"Net Income\"\n              dot={{ fill: chartTheme.colors.success, strokeWidth: 0, r: 4 }}\n              activeDot={{ r: 6, fill: chartTheme.colors.success, stroke: 'white', strokeWidth: 2 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueChart;\n"],"names":["RevenueChart","data","chartTheme","useChartTheme","length","jsxs","className","children","jsx","ChartNoData","title","message","icon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","CustomTooltip","active","payload","label","style","backgroundColor","tooltip","borderColor","border","color","textColor","boxShadow","shadowColor","map","entry","index","name","formatCurrency","value","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","grid","XAxis","dataKey","axis","fontSize","YAxis","tickFormatter","toFixed","Tooltip","content","Legend","wrapperStyle","legend","Line","type","colors","primary","dot","r","activeDot","danger","success"],"mappings":"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"}