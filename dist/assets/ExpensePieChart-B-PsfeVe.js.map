{"version":3,"file":"ExpensePieChart-B-PsfeVe.js","sources":["../../src/components/ExpensePieChart.tsx"],"sourcesContent":["import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport { ExpenseBreakdown } from '../types/finance';\nimport { formatCurrency, formatPercentage } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\nimport ChartNoData from './ChartNoData';\n\ninterface ExpensePieChartProps {\n  data: ExpenseBreakdown[];\n}\n\n/**\n * Renders a pie chart displaying the breakdown of expenses.\n *\n * @param {ExpensePieChartProps} props The component props.\n * @param {ExpenseBreakdown[]} props.data The data to display in the chart.\n * @returns {React.ReactElement} The rendered pie chart.\n */\nconst ExpensePieChart: React.FC<ExpensePieChartProps> = ({ data }) => {\n  const { chartTheme } = useChartTheme();\n  \n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white dark:bg-dark-surface p-4 sm:p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-200 dark:border-dark-border\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <ChartNoData\n          title=\"No Data Available\"\n          message=\"There is no expense data to display for the selected period.\"\n          icon={\n            <svg className=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" />\n            </svg>\n          }\n        />\n      </div>\n    );\n  }\n\n  if (data.reduce((sum, item) => sum + item.amount, 0) === 0) {\n    return (\n      <div className=\"bg-white dark:bg-dark-surface p-4 sm:p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-200 dark:border-dark-border\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        </div>\n        <ChartNoData\n          title=\"Zero Expenses\"\n          message=\"No expenses have been recorded for the selected period.\"\n          icon={\n            <svg className=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          }\n        />\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    payload: ExpenseBreakdown;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n  }\n\n  interface LegendPayload {\n    value: string;\n    color: string;\n  }\n\n  interface CustomLegendProps {\n    payload?: LegendPayload[];\n  }\n\n  const CustomTooltip = ({ active, payload }: CustomTooltipProps) => {\n    if (active && payload?.[0]?.payload) {\n      const data = payload[0].payload;\n      return (\n        <div \n          className=\"p-4 rounded-lg shadow-lg border backdrop-blur-sm\"\n          style={{ \n            backgroundColor: chartTheme.tooltip.backgroundColor,\n            borderColor: chartTheme.tooltip.border,\n            color: chartTheme.tooltip.textColor,\n            boxShadow: `0 10px 15px -3px ${chartTheme.tooltip.shadowColor}`\n          }}\n        >\n          <p className=\"font-medium mb-1\" style={{ color: chartTheme.tooltip.textColor }}>\n            {data.category}\n          </p>\n          <p className=\"text-sm\" style={{ color: chartTheme.tooltip.textColor }}>\n            Amount: {formatCurrency(data.amount)}\n          </p>\n          <p className=\"text-sm\" style={{ color: chartTheme.tooltip.textColor }}>\n            Percentage: {formatPercentage(data.percentage)}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLegend = ({ payload }: CustomLegendProps) => {\n    if (!payload) return null;\n    \n    return (\n      <div className=\"mt-4\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 text-sm\">\n          {data.map((item, index: number) => (\n            <div key={index} className=\"flex items-center\">\n              <div \n                className=\"w-3 h-3 rounded-full mr-2 flex-shrink-0\"\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <span className=\"text-gray-700 dark:text-gray-300 truncate\">{item.category}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-dark-surface p-4 sm:p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-200 dark:border-dark-border\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Expense Breakdown</h2>\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n          Total: {formatCurrency(data.reduce((sum, item) => sum + item.amount, 0))}\n        </div>\n      </div>\n      \n      <div className=\"h-80 sm:h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart margin={{ top: 5, right: 0, bottom: 5, left: 0 }}>\n            <Pie\n              data={data}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius=\"95%\"\n              innerRadius=\"47%\"\n              paddingAngle={2}\n              dataKey=\"amount\"\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            <Legend content={<CustomLegend />} />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensePieChart;\n"],"names":["ExpensePieChart","data","chartTheme","useChartTheme","length","jsxs","className","children","jsx","ChartNoData","title","message","icon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","reduce","sum","item","amount","CustomTooltip","active","payload","style","backgroundColor","tooltip","borderColor","border","color","textColor","boxShadow","shadowColor","category","formatCurrency","formatPercentage","percentage","CustomLegend","map","index","ResponsiveContainer","width","height","PieChart","margin","top","right","bottom","left","Pie","cx","cy","outerRadius","innerRadius","paddingAngle","dataKey","entry","Cell","Tooltip","content","Legend"],"mappings":"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"}