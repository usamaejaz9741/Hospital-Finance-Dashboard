{"version":3,"file":"dashboard-DKaJdJ2B.js","sources":["../../src/components/Dropdown.tsx","../../src/contexts/ThemeContext.tsx","../../src/hooks/useTheme.ts","../../src/components/ThemeToggle.tsx","../../src/components/Header.tsx","../../src/utils/formatters.ts","../../src/components/MetricCard.tsx","../../src/components/DepartmentTable.tsx","../../src/components/PatientMetricsCard.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface DropdownOption {\n  value: string;\n  label: string;\n  subtitle?: string;\n}\n\ninterface DropdownProps {\n  options: DropdownOption[];\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  className?: string;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ \n  options, \n  value, \n  onChange, \n  placeholder, \n  className = '' \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [zIndex, setZIndex] = useState(10);\n\n  const selectedOption = options.find(option => option.value === value);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n        setZIndex(10);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleOptionClick = (optionValue: string) => {\n    onChange(optionValue);\n    setIsOpen(false);\n    setZIndex(10);\n  };\n\n  const handleToggle = () => {\n    if (!isOpen) {\n      // Set higher z-index when opening\n      setZIndex(70);\n    } else {\n      // Reset z-index when closing\n      setZIndex(10);\n    }\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div \n      ref={dropdownRef} \n      className={`dropdown-container relative ${className}`}\n      style={{ zIndex: zIndex }}\n    >\n      <button\n        type=\"button\"\n        className=\"w-full bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-left shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 hover:border-gray-400 dark:hover:border-gray-500 transition-colors duration-200\"\n        onClick={handleToggle}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"min-w-0 flex-1\">\n            {selectedOption ? (\n              <div className=\"min-w-0\">\n                <div className=\"font-medium text-gray-900 dark:text-white truncate\">{selectedOption.label}</div>\n                {selectedOption.subtitle && (\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">{selectedOption.subtitle}</div>\n                )}\n              </div>\n            ) : (\n              <span className=\"text-gray-500 dark:text-gray-400 truncate\">{placeholder}</span>\n            )}\n          </div>\n          <div className=\"ml-2 flex-shrink-0\">\n            <svg\n              className={`w-4 h-4 text-gray-400 dark:text-gray-500 transition-transform duration-200 ${\n                isOpen ? 'transform rotate-180' : ''\n              }`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n      </button>\n\n      {isOpen && (\n        <div \n          className=\"absolute w-full mt-1 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg dark:shadow-gray-900/20 max-h-60 overflow-auto\"\n          style={{ \n            position: 'absolute',\n            top: '100%',\n            left: 0,\n            right: 0\n          }}\n        >\n          {options.map((option) => (\n            <button\n              key={option.value}\n              type=\"button\"\n              className={`w-full text-left px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 transition-colors duration-150 ${\n                option.value === value ? 'bg-primary-50 dark:bg-primary-900/20 border-r-2 border-primary-500' : ''\n              }`}\n              onClick={() => handleOptionClick(option.value)}\n            >\n              <div className=\"min-w-0\">\n                <div className=\"font-medium text-gray-900 dark:text-white truncate\">{option.label}</div>\n                {option.subtitle && (\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1 truncate\">{option.subtitle}</div>\n                )}\n              </div>\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport { Theme, ThemeContextType, ResolvedTheme } from '../types/theme';\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [theme, setThemeState] = useState<Theme>('auto');\r\n  const [resolvedTheme, setResolvedTheme] = useState<ResolvedTheme>('light');\r\n\r\n  // Get system preference\r\n  const getSystemTheme = useCallback((): ResolvedTheme => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  }, []);\r\n\r\n  // Apply theme to DOM with smooth transition\r\n  const applyTheme = useCallback((newResolvedTheme: ResolvedTheme) => {\r\n    const root = document.documentElement;\r\n    \r\n    // Add transition class for smooth theme switching\r\n    root.classList.add('transitioning');\r\n    \r\n    if (newResolvedTheme === 'dark') {\r\n      root.classList.add('dark');\r\n    } else {\r\n      root.classList.remove('dark');\r\n    }\r\n    \r\n    // Remove transition class after animation completes\r\n    setTimeout(() => {\r\n      root.classList.remove('transitioning');\r\n    }, 300);\r\n  }, []);\r\n\r\n  // Resolve the actual theme (light/dark) from the theme setting\r\n  const resolveTheme = useCallback((themeValue: Theme): ResolvedTheme => {\r\n    if (themeValue === 'auto') {\r\n      return getSystemTheme();\r\n    }\r\n    return themeValue as ResolvedTheme;\r\n  }, [getSystemTheme]);\r\n\r\n  // Initialize theme from localStorage or default to auto\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem('hospitalFinanceTheme') as Theme;\r\n    const initialTheme = storedTheme || 'auto';\r\n    const initialResolvedTheme = resolveTheme(initialTheme);\r\n    \r\n    setThemeState(initialTheme);\r\n    setResolvedTheme(initialResolvedTheme);\r\n    applyTheme(initialResolvedTheme);\r\n  }, [resolveTheme, applyTheme]);\r\n\r\n  // Listen for system theme changes\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      const systemTheme = e.matches ? 'dark' : 'light';\r\n      \r\n      // Only update if current theme is 'auto'\r\n      if (theme === 'auto') {\r\n        setResolvedTheme(systemTheme);\r\n        applyTheme(systemTheme);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme, applyTheme]);\r\n\r\n  const setTheme = useCallback((newTheme: Theme) => {\r\n    const newResolvedTheme = resolveTheme(newTheme);\r\n    \r\n    setThemeState(newTheme);\r\n    setResolvedTheme(newResolvedTheme);\r\n    localStorage.setItem('hospitalFinanceTheme', newTheme);\r\n    applyTheme(newResolvedTheme);\r\n  }, [resolveTheme, applyTheme]);\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    if (theme === 'auto') {\r\n      // If auto, switch to the opposite of current resolved theme\r\n      const newTheme = resolvedTheme === 'light' ? 'dark' : 'light';\r\n      setTheme(newTheme);\r\n    } else {\r\n      // Toggle between light and dark\r\n      const newTheme = theme === 'light' ? 'dark' : 'light';\r\n      setTheme(newTheme);\r\n    }\r\n  }, [theme, resolvedTheme, setTheme]);\r\n\r\n  const value: ThemeContextType = {\r\n    theme,\r\n    resolvedTheme,\r\n    toggleTheme,\r\n    setTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n","import { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n","import React from 'react';\r\nimport { useTheme } from '../hooks/useTheme';\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string;\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ className = '', size = 'md' }) => {\r\n  const { resolvedTheme, setTheme } = useTheme();\r\n\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-5 h-5',\r\n    lg: 'w-6 h-6'\r\n  };\r\n\r\n  const iconSize = sizeClasses[size];\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(resolvedTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const getThemeIcon = () => {\r\n    if (resolvedTheme === 'light') {\r\n      // Moon icon for light mode (clicking will switch to dark)\r\n      return (\r\n        <svg \r\n          className={iconSize} \r\n          fill=\"none\" \r\n          stroke=\"currentColor\" \r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" \r\n            strokeWidth={2} \r\n            d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" \r\n          />\r\n        </svg>\r\n      );\r\n    } else {\r\n      // Sun icon for dark mode (clicking will switch to light)\r\n      return (\r\n        <svg \r\n          className={iconSize} \r\n          fill=\"none\" \r\n          stroke=\"currentColor\" \r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" \r\n            strokeWidth={2} \r\n            d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" \r\n          />\r\n        </svg>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getTooltipText = () => {\r\n    return resolvedTheme === 'light' ? 'Switch to dark mode' : 'Switch to light mode';\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className={`\r\n        relative p-2 rounded-lg transition-all duration-200 \r\n        bg-gray-100 hover:bg-gray-200 \r\n        dark:bg-gray-700 dark:hover:bg-gray-600 \r\n        text-gray-700 dark:text-gray-300 \r\n        hover:text-gray-900 dark:hover:text-white\r\n        focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n        dark:focus:ring-offset-gray-800\r\n        hover:scale-105 active:scale-95\r\n        ${className}\r\n      `}\r\n      title={getTooltipText()}\r\n      aria-label={getTooltipText()}\r\n    >\r\n      {getThemeIcon()}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport ThemeToggle from './ThemeToggle';\nimport { Hospital } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\n\ninterface HeaderProps {\n  hospitals: Hospital[];\n  selectedHospitalId: string;\n  selectedYear: number;\n  availableYears: number[];\n  onHospitalChange: (hospitalId: string) => void;\n  onYearChange: (year: number) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  hospitals,\n  selectedHospitalId,\n  selectedYear,\n  availableYears,\n  onHospitalChange,\n  onYearChange\n}) => {\n  const { user, signOut } = useAuth();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // Handle body scroll when mobile menu is open\n  useEffect(() => {\n    if (isMobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isMobileMenuOpen]);\n  const hospitalOptions = hospitals.map(hospital => ({\n    value: hospital.id,\n    label: hospital.name,\n    subtitle: `${hospital.type} • ${hospital.location}`\n  }));\n\n  const yearOptions = availableYears.map(year => ({\n    value: year.toString(),\n    label: year.toString()\n  }));\n\n  const selectedHospital = hospitals.find(h => h.id === selectedHospitalId);\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 transition-colors duration-200 relative overflow-visible\">\n      <div className=\"px-4 sm:px-6 lg:px-8 overflow-visible\">\n        {/* Desktop Header */}\n        <div className=\"flex items-center justify-between min-h-16 py-4 relative\">\n          {/* Logo and Title */}\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-lg\">H</span>\n            </div>\n            <div className=\"hidden sm:block\">\n              <h1 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-white\">\n                Hospital Finance Dashboard\n              </h1>\n              <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\n                {selectedHospital ? `${selectedHospital.name} • ${selectedYear}` : 'Real-time financial insights and analytics'}\n              </p>\n            </div>\n            <div className=\"sm:hidden\">\n              <h1 className=\"text-lg font-bold text-gray-900 dark:text-white\">Dashboard</h1>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden xl:flex items-center space-x-6\">\n            {/* Dropdowns */}\n            <div className=\"flex items-end space-x-2 sm:space-x-4 min-w-0\">\n              <div className=\"flex flex-col space-y-1\">\n                <label className=\"text-xs font-medium text-gray-600 dark:text-gray-400 uppercase tracking-wide\">\n                  Hospital\n                </label>\n                <Dropdown\n                  options={hospitalOptions}\n                  value={selectedHospitalId}\n                  onChange={onHospitalChange}\n                  placeholder=\"Select Hospital\"\n                  className=\"w-full sm:w-64\"\n                />\n              </div>\n              \n              <div className=\"flex flex-col space-y-1\">\n                <label className=\"text-xs font-medium text-gray-600 dark:text-gray-400 uppercase tracking-wide\">\n                  Year\n                </label>\n                <Dropdown\n                  options={yearOptions}\n                  value={selectedYear.toString()}\n                  onChange={(value) => onYearChange(parseInt(value))}\n                  placeholder=\"Select Year\"\n                  className=\"w-full sm:w-40\"\n                />\n              </div>\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex items-center space-x-3\">\n              <ThemeToggle />\n              <button \n                className=\"btn-secondary text-sm hidden 2xl:inline-flex\"\n                aria-label=\"Export financial report\"\n              >\n                Export Report\n              </button>\n              <button \n                className=\"btn-primary text-sm hidden 2xl:inline-flex\"\n                aria-label=\"Generate financial analysis\"\n              >\n                Generate Analysis\n              </button>\n            </div>\n            \n            {/* User Section */}\n            <div className=\"flex items-center space-x-2 pl-4 border-l border-gray-200 dark:border-gray-700\">\n              <div className=\"w-8 h-8 bg-primary-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-medium text-sm\">\n                  {user?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                </span>\n              </div>\n              <div className=\"text-sm\">\n                <p className=\"font-medium text-gray-900 dark:text-white\">{user?.name}</p>\n                <p className=\"text-gray-500 dark:text-gray-400 capitalize\">{user?.role.replace('_', ' ')}</p>\n              </div>\n              <button\n                onClick={signOut}\n                className=\"ml-2 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors\"\n                title=\"Sign out\"\n                aria-label=\"Sign out of your account\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"xl:hidden flex items-center space-x-2\">\n            <ThemeToggle size=\"sm\" />\n            <button\n              type=\"button\"\n              className=\"p-2 rounded-md text-gray-900 dark:text-gray-100 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500 border border-gray-300 dark:border-gray-600\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              aria-controls=\"mobile-menu\"\n              aria-expanded={isMobileMenuOpen}\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {!isMobileMenuOpen ? (\n                <svg className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\n                </svg>\n              ) : (\n                <svg className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile full-screen menu */}\n        {isMobileMenuOpen && (\n          <div className=\"xl:hidden fixed inset-0 z-50\">\n            {/* Full-screen menu */}\n            <div \n              className={`fixed top-0 right-0 h-full w-full bg-white dark:bg-gray-800 shadow-xl transform transition-transform duration-300 ease-in-out ${\n                isMobileMenuOpen ? 'translate-x-0' : 'translate-x-full'\n              }`}\n            >\n              {/* Header */}\n              <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-lg\">H</span>\n                  </div>\n                  <span className=\"font-semibold text-gray-900 dark:text-white\">Menu</span>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 rounded-lg text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              {/* Content */}\n              <div className=\"flex flex-col h-full\">\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-6\">\n                  {/* User Info */}\n                  <div className=\"bg-gray-50 dark:bg-gray-700/50 rounded-lg p-3\">\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-12 h-12 bg-primary-600 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white font-medium text-lg\">\n                          {user?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                        </span>\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"font-medium text-gray-900 dark:text-white truncate\">{user?.name}</p>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400 capitalize truncate\">\n                          {user?.role.replace('_', ' ')}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {/* Sign Out Button - Close to user info */}\n                    <button\n                      onClick={signOut}\n                      className=\"w-full flex items-center justify-center px-3 py-2 text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors font-medium text-sm border border-red-200 dark:border-red-800\"\n                      aria-label=\"Sign out of your account\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                      </svg>\n                      Sign Out\n                    </button>\n                  </div>\n\n                  {/* Filters Section */}\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Filters</h3>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Hospital\n                      </label>\n                      <Dropdown\n                        options={hospitalOptions}\n                        value={selectedHospitalId}\n                        onChange={onHospitalChange}\n                        placeholder=\"Select Hospital\"\n                        className=\"w-full\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Year\n                      </label>\n                      <Dropdown\n                        options={yearOptions}\n                        value={selectedYear.toString()}\n                        onChange={(value) => onYearChange(parseInt(value))}\n                        placeholder=\"Select Year\"\n                        className=\"w-full\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Actions Section */}\n                  <div className=\"space-y-3\">\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Actions</h3>\n                    \n                    <button \n                      className=\"w-full btn-secondary text-left justify-start\"\n                      aria-label=\"Export financial report\"\n                      onClick={() => setIsMobileMenuOpen(false)}\n                    >\n                      <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      Export Report\n                    </button>\n                    \n                    <button \n                      className=\"w-full btn-primary text-left justify-start\"\n                      aria-label=\"Generate financial analysis\"\n                      onClick={() => setIsMobileMenuOpen(false)}\n                    >\n                      <svg className=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                      Generate Analysis\n                    </button>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\n","export const formatCurrency = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(value);\r\n};\r\n\r\nexport const formatPercentage = (value: number): string => {\r\n  return `${value.toFixed(1)}%`;\r\n};\r\n\r\nexport const formatNumber = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US').format(value);\r\n};\r\n\r\nexport const formatCompactCurrency = (value: number): string => {\r\n  if (value >= 1000000) {\r\n    return `$${(value / 1000000).toFixed(1)}M`;\r\n  }\r\n  if (value >= 1000) {\r\n    return `$${(value / 1000).toFixed(1)}K`;\r\n  }\r\n  return formatCurrency(value);\r\n};\r\n\r\nexport const getChangeColor = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? 'text-success-600' : 'text-danger-600';\r\n};\r\n\r\nexport const getChangeIcon = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? '↗' : '↘';\r\n};\r\n\r\n","import React from 'react';\nimport { FinancialMetric } from '../types/finance';\nimport { formatCurrency, formatPercentage, formatNumber, getChangeColor, getChangeIcon } from '../utils/formatters';\n\ninterface MetricCardProps {\n  metric: FinancialMetric;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({ metric }) => {\n  const formatValue = (value: number, format: string) => {\n    switch (format) {\n      case 'currency':\n        return formatCurrency(value);\n      case 'percentage':\n        return formatPercentage(value);\n      case 'number':\n        return formatNumber(value);\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div \n      className=\"metric-card\" \n      role=\"article\" \n      aria-labelledby={`metric-title-${metric.id}`}\n      aria-describedby={`metric-change-${metric.id}`}\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <h3 \n          id={`metric-title-${metric.id}`}\n          className=\"text-sm font-medium text-gray-600 dark:text-gray-400\"\n        >\n          {metric.title}\n        </h3>\n      </div>\n      \n      <div className=\"mb-2\">\n        <p \n          className=\"text-2xl font-bold text-gray-900 dark:text-white\"\n          aria-label={`${metric.title} value: ${formatValue(metric.value, metric.format)}`}\n        >\n          {formatValue(metric.value, metric.format)}\n        </p>\n      </div>\n      \n      <div className=\"flex items-center justify-between text-sm\">\n        <span \n          id={`metric-change-${metric.id}`}\n          className={`flex items-center ${getChangeColor(metric.changeType)}`}\n          aria-label={`${metric.changeType === 'increase' ? 'Increased' : 'Decreased'} by ${formatPercentage(metric.change)} ${metric.period}`}\n        >\n          <span className=\"mr-1\" aria-hidden=\"true\">{getChangeIcon(metric.changeType)}</span>\n          {formatPercentage(metric.change)}\n        </span>\n        <span className=\"text-gray-500 dark:text-gray-400\">{metric.period}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricCard;\n\n","import React from 'react';\nimport { DepartmentFinance } from '../types/finance';\nimport { formatCurrency, formatPercentage } from '../utils/formatters';\n\ninterface DepartmentTableProps {\n  departments: DepartmentFinance[];\n}\n\nconst DepartmentTable: React.FC<DepartmentTableProps> = ({ departments }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Department Performance</h2>\n        <button className=\"btn-secondary text-sm w-full sm:w-auto\">\n          View Details\n        </button>\n      </div>\n      \n      {/* Desktop Table View */}\n      <div className=\"hidden lg:block overflow-x-auto -mx-4 sm:mx-0\">\n        <table className=\"min-w-full\">\n          <thead>\n            <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n              <th className=\"text-left py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Department</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Revenue</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Expenses</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Profit</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Margin</th>\n            </tr>\n          </thead>\n          <tbody>\n            {departments.map((dept, index) => (\n              <tr key={dept.department} className={`${index !== departments.length - 1 ? 'border-b border-gray-100 dark:border-gray-700' : ''} hover:bg-gray-50 dark:hover:bg-gray-700/50`}>\n                <td className=\"py-3 px-4\">\n                  <div className=\"font-medium text-gray-900 dark:text-white\">{dept.department}</div>\n                </td>\n                <td className=\"py-3 px-4 text-right text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.revenue)}\n                </td>\n                <td className=\"py-3 px-4 text-right text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.expenses)}\n                </td>\n                <td className=\"py-3 px-4 text-right\">\n                  <span className={`font-medium ${dept.profit > 0 ? 'text-success-600' : 'text-danger-600'}`}>\n                    {formatCurrency(dept.profit)}\n                  </span>\n                </td>\n                <td className=\"py-3 px-4 text-right\">\n                  <span className={`font-medium ${dept.profitMargin > 20 ? 'text-success-600' : dept.profitMargin > 10 ? 'text-warning-600' : 'text-danger-600'}`}>\n                    {formatPercentage(dept.profitMargin)}\n                  </span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Mobile Card View */}\n      <div className=\"lg:hidden space-y-4\">\n        {departments.map((dept) => (\n          <div key={dept.department} className=\"bg-gray-50 dark:bg-gray-700/50 rounded-lg p-4\">\n            <div className=\"font-medium text-gray-900 dark:text-white mb-3 text-lg\">\n              {dept.department}\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Revenue</div>\n                <div className=\"font-medium text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.revenue)}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Expenses</div>\n                <div className=\"font-medium text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.expenses)}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Profit</div>\n                <div className={`font-medium ${dept.profit > 0 ? 'text-success-600' : 'text-danger-600'}`}>\n                  {formatCurrency(dept.profit)}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">Margin</div>\n                <div className={`font-medium ${dept.profitMargin > 20 ? 'text-success-600' : dept.profitMargin > 10 ? 'text-warning-600' : 'text-danger-600'}`}>\n                  {formatPercentage(dept.profitMargin)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DepartmentTable;\n\n","import React from 'react';\nimport { PatientMetrics } from '../types/finance';\nimport { formatNumber, formatPercentage } from '../utils/formatters';\n\ninterface PatientMetricsCardProps {\n  metrics: PatientMetrics;\n}\n\nconst PatientMetricsCard: React.FC<PatientMetricsCardProps> = ({ metrics }) => {\n  const metricItems = [\n    {\n      label: 'Total Patients',\n      value: formatNumber(metrics.totalPatients),\n      icon: '👥',\n      color: 'text-primary-600'\n    },\n    {\n      label: 'Inpatients',\n      value: formatNumber(metrics.inpatients),\n      icon: '🏥',\n      color: 'text-success-600'\n    },\n    {\n      label: 'Outpatients',\n      value: formatNumber(metrics.outpatients),\n      icon: '🚶',\n      color: 'text-warning-600'\n    },\n    {\n      label: 'Emergency Visits',\n      value: formatNumber(metrics.emergencyVisits),\n      icon: '🚨',\n      color: 'text-danger-600'\n    },\n    {\n      label: 'Avg Stay Duration',\n      value: `${metrics.averageStayDuration} days`,\n      icon: '📅',\n      color: 'text-purple-600'\n    },\n    {\n      label: 'Occupancy Rate',\n      value: formatPercentage(metrics.occupancyRate),\n      icon: '📊',\n      color: 'text-indigo-600'\n    }\n  ];\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Patient Metrics</h2>\n        <button \n          className=\"btn-secondary text-sm\"\n          aria-label=\"View detailed patient metrics report\"\n        >\n          View Report\n        </button>\n      </div>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4\" role=\"grid\" aria-label=\"Patient metrics overview\">\n        {metricItems.map((item, index) => (\n          <div \n            key={index} \n            className=\"text-center p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\"\n            role=\"gridcell\"\n            aria-labelledby={`metric-label-${index}`}\n            aria-describedby={`metric-value-${index}`}\n          >\n            <div className=\"text-2xl mb-2\" aria-hidden=\"true\">{item.icon}</div>\n            <div \n              id={`metric-value-${index}`}\n              className={`text-lg font-bold ${item.color}`}\n              aria-label={`${item.label}: ${item.value}`}\n            >\n              {item.value}\n            </div>\n            <div \n              id={`metric-label-${index}`}\n              className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\"\n            >\n              {item.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientMetricsCard;\n\n","import React from 'react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  subtext?: string;\r\n  className?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \r\n  size = 'md', \r\n  text = 'Loading...', \r\n  subtext,\r\n  className = '' \r\n}) => {\r\n  const sizeClasses = {\r\n    sm: 'h-6 w-6',\r\n    md: 'h-12 w-12',\r\n    lg: 'h-16 w-16'\r\n  };\r\n\r\n  const spinnerSize = sizeClasses[size];\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center p-4 ${className}`}>\r\n      <div className=\"text-center\">\r\n        <div className={`animate-spin rounded-full ${spinnerSize} border-b-2 border-primary-600 mx-auto mb-4`}></div>\r\n        {text && (\r\n          <p className=\"text-gray-600 dark:text-gray-300 font-medium text-sm sm:text-base\">{text}</p>\r\n        )}\r\n        {subtext && (\r\n          <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1 max-w-xs mx-auto\">{subtext}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport MetricCard from './MetricCard';\nimport RevenueChart from './RevenueChart';\nimport DepartmentTable from './DepartmentTable';\nimport ExpensePieChart from './ExpensePieChart';\nimport PatientMetricsCard from './PatientMetricsCard';\nimport CashFlowChart from './CashFlowChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport { logger } from '../utils/logger';\nimport {\n  hospitals,\n  availableYears,\n  getHospitalData\n} from '../data/mockData';\nimport { HospitalData } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\n\nconst Dashboard: React.FC = () => {\n  const { getAccessibleHospitals, canAccessHospital } = useAuth();\n  const accessibleHospitals = getAccessibleHospitals();\n  const filteredHospitals = hospitals.filter(h => accessibleHospitals.includes(h.id));\n  \n  const [selectedHospitalId, setSelectedHospitalId] = useState<string>(\n    accessibleHospitals[0] || ''\n  );\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\n  const [currentData, setCurrentData] = useState<HospitalData | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Update data when hospital or year changes\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    \n    if (selectedHospitalId && selectedYear) {\n      setIsLoading(true);\n      logger.info('Loading dashboard data', {\n        context: 'Dashboard',\n        data: { hospitalId: selectedHospitalId, year: selectedYear }\n      });\n      \n      // Simulate loading delay for better UX\n      timeout = setTimeout(() => {\n        const data = getHospitalData(selectedHospitalId, selectedYear);\n        if (!data) {\n          logger.warn('No data available for hospital and year', {\n            context: 'Dashboard',\n            data: { hospitalId: selectedHospitalId, year: selectedYear }\n          });\n        }\n        setCurrentData(data || null);\n        setIsLoading(false);\n      }, 500);\n    }\n\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [selectedHospitalId, selectedYear]);\n\n  const handleHospitalChange = (hospitalId: string) => {\n    // Check if user has access to the selected hospital\n    if (canAccessHospital(hospitalId)) {\n      logger.info('Hospital selection changed', {\n        context: 'Dashboard',\n        data: { hospitalId }\n      });\n      setSelectedHospitalId(hospitalId);\n    } else {\n      logger.warn('Unauthorized hospital access attempt', {\n        context: 'Dashboard',\n        data: { hospitalId }\n      });\n    }\n  };\n\n  const handleYearChange = (year: number) => {\n    logger.info('Year selection changed', {\n      context: 'Dashboard',\n      data: { year, previousYear: selectedYear }\n    });\n    setSelectedYear(year);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"text-gray-900 dark:text-gray-100\">\n        <Header\n          hospitals={filteredHospitals}\n          selectedHospitalId={selectedHospitalId}\n          selectedYear={selectedYear}\n          availableYears={availableYears}\n          onHospitalChange={handleHospitalChange}\n          onYearChange={handleYearChange}\n        />\n        \n        <main className=\"p-4 sm:p-6\">\n          <LoadingSpinner\n            size=\"md\"\n            text=\"Loading dashboard data...\"\n            subtext={`${hospitals.find(h => h.id === selectedHospitalId)?.name} • ${selectedYear}`}\n            className=\"min-h-96\"\n          />\n        </main>\n      </div>\n    );\n  }\n\n  if (!currentData) {\n    return (\n      <div className=\"text-gray-900 dark:text-gray-100\">\n        <Header\n          hospitals={filteredHospitals}\n          selectedHospitalId={selectedHospitalId}\n          selectedYear={selectedYear}\n          availableYears={availableYears}\n          onHospitalChange={handleHospitalChange}\n          onYearChange={handleYearChange}\n        />\n        \n        <main className=\"p-4 sm:p-6\">\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No Data Available</h3>\n            <p className=\"text-gray-600 dark:text-gray-300\">\n              No financial data found for the selected hospital and year combination.\n            </p>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n              Please select a different hospital or year.\n            </p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-gray-900 dark:text-gray-100 relative\">\n      <Header\n        hospitals={filteredHospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={handleHospitalChange}\n        onYearChange={handleYearChange}\n      />\n      \n      <main className=\"p-3 sm:p-4 lg:p-6 xl:p-8\">\n        {/* Key Metrics */}\n        <div className=\"mb-6 lg:mb-8\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Key Financial Metrics</h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6\">\n            {currentData.financialMetrics.map((metric) => (\n              <MetricCard key={metric.id} metric={metric} />\n            ))}\n          </div>\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"space-y-6 lg:space-y-8 mb-6 lg:mb-8\">\n          {/* Revenue Chart - Full Width */}\n          <div className=\"w-full\">\n            <RevenueChart data={currentData.revenueData} />\n          </div>\n\n          {/* Side-by-side charts on larger screens */}\n          <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6 lg:gap-8\">\n            <ExpensePieChart data={currentData.expenseBreakdown} />\n            <CashFlowChart data={currentData.cashFlowData} />\n          </div>\n        </div>\n\n        {/* Patient Metrics */}\n        <div className=\"mb-6 lg:mb-8\">\n          <PatientMetricsCard metrics={currentData.patientMetrics} />\n        </div>\n\n        {/* Department Performance */}\n        <div className=\"mb-6 lg:mb-8\">\n          <DepartmentTable departments={currentData.departmentFinances} />\n        </div>\n\n        {/* Footer */}\n        <footer className=\"text-center text-sm text-gray-500 dark:text-gray-400 mt-12 py-6 border-t border-gray-200 dark:border-gray-700\">\n          <p>© 2024 Hospital Finance Dashboard. All rights reserved.</p>\n          <p className=\"mt-1\">Last updated: {new Date().toLocaleDateString('en-US', { \n            year: 'numeric', \n            month: 'long', \n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          })}</p>\n        </footer>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"names":["Dropdown","options","value","onChange","placeholder","className","isOpen","setIsOpen","useState","dropdownRef","useRef","zIndex","setZIndex","selectedOption","find","option","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","jsxs","ref","style","children","jsx","type","onClick","label","subtitle","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","position","top","left","right","map","handleOptionClick","optionValue","ThemeContext","createContext","ThemeProvider","theme","setThemeState","resolvedTheme","setResolvedTheme","getSystemTheme","useCallback","window","matchMedia","matches","applyTheme","newResolvedTheme","root","documentElement","classList","add","remove","setTimeout","resolveTheme","themeValue","initialTheme","localStorage","getItem","initialResolvedTheme","mediaQuery","handleChange","e","systemTheme","setTheme","newTheme","setItem","toggleTheme","Provider","useTheme","context","useContext","Error","ThemeToggle","size","iconSize","sm","md","lg","getTooltipText","title","Header","hospitals","selectedHospitalId","selectedYear","availableYears","onHospitalChange","onYearChange","user","signOut","useAuth","isMobileMenuOpen","setIsMobileMenuOpen","body","overflow","hospitalOptions","hospital","id","name","location","yearOptions","year","toString","selectedHospital","h","parseInt","split","n","join","toUpperCase","role","replace","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","toFixed","formatNumber","getChangeIcon","changeType","MetricCard","metric","formatValue","change","period","DepartmentTable","departments","dept","index","length","department","revenue","expenses","profit","profitMargin","PatientMetricsCard","metrics","metricItems","totalPatients","icon","color","inpatients","outpatients","emergencyVisits","averageStayDuration","occupancyRate","item","LoadingSpinner","text","subtext","spinnerSize","Dashboard","getAccessibleHospitals","canAccessHospital","accessibleHospitals","filteredHospitals","filter","includes","setSelectedHospitalId","setSelectedYear","currentData","setCurrentData","isLoading","setIsLoading","timeout","logger","info","data","hospitalId","getHospitalData","warn","clearTimeout","handleHospitalChange","handleYearChange","previousYear","financialMetrics","RevenueChart","revenueData","ExpensePieChart","expenseBreakdown","CashFlowChart","cashFlowData","patientMetrics","departmentFinances","Date","toLocaleDateString","month","day","hour","minute"],"mappings":"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"}