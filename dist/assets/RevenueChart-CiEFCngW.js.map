{"version":3,"file":"RevenueChart-CiEFCngW.js","sources":["../../src/components/RevenueChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { RevenueData } from '../types/finance';\nimport { formatCurrency } from '../utils/formatters';\nimport { useChartTheme } from '../hooks/useChartTheme';\nimport ChartNoData from './ChartNoData';\nimport Dropdown from './Dropdown';\n\ninterface RevenueChartProps {\n  data: RevenueData[];\n  availableYears?: number[];\n}\n\n/**\n * Renders a modern line chart with glassmorphism styling displaying revenue and expenses trends.\n */\nconst RevenueChart: React.FC<RevenueChartProps> = ({ availableYears = [2021, 2022, 2023, 2024] }) => {\n  const { chartTheme } = useChartTheme();\n  const [startYear, setStartYear] = useState(availableYears[0] || 2021);\n  const [endYear, setEndYear] = useState(availableYears[availableYears.length - 1] || 2024);\n\n  // Generate year options from available years\n  const yearOptions = useMemo(() => {\n    return availableYears.map(year => ({\n      value: year.toString(),\n      label: year.toString()\n    }));\n  }, [availableYears]);\n\n  // Generate dynamic data based on selected range\n  const chartData = useMemo(() => {\n    if (startYear === endYear) {\n      // Same year selected - show months\n      const months = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n      ];\n      \n      return months.map((month) => {\n        const baseRevenue = 8000000 + Math.random() * 4000000;\n        const baseExpenses = 6000000 + Math.random() * 3000000;\n        \n        return {\n          date: month,\n          revenue: Math.round(baseRevenue),\n          expenses: Math.round(baseExpenses),\n          netIncome: Math.round(baseRevenue - baseExpenses)\n        };\n      });\n    } else {\n      // Different years selected - show years\n      const years = [];\n      const start = startYear || 2021;\n      const end = endYear || 2024;\n      for (let year = start; year <= end; year++) {\n        const baseRevenue = 95000000 + Math.random() * 20000000;\n        const baseExpenses = 75000000 + Math.random() * 15000000;\n        \n        years.push({\n          date: year.toString(),\n          revenue: Math.round(baseRevenue),\n          expenses: Math.round(baseExpenses),\n          netIncome: Math.round(baseRevenue - baseExpenses)\n        });\n      }\n      return years;\n    }\n  }, [startYear, endYear]);\n\n  if (!chartData || chartData.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-2xl font-bold gradient-text\">Revenue & Expenses Trend</h2>\n        </div>\n        <ChartNoData\n          title=\"No Data Available\"\n          message=\"There is no revenue data to display for the selected period.\"\n          icon={\n            <svg className=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n          }\n        />\n      </div>\n    );\n  }\n\n  interface TooltipPayload {\n    name: string;\n    value: number;\n    color: string;\n  }\n\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: TooltipPayload[];\n    label?: string;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"gradient-bg-primary rounded-xl p-4 border border-white/30 backdrop-blur-sm shadow-2xl\">\n          <p className=\"font-semibold mb-3 text-white text-center\">\n            {(startYear || 2021) === (endYear || 2024) ? `${label} ${startYear || 2021}` : label}\n          </p>\n          <div className=\"space-y-2\">\n            {payload.map((entry, index: number) => (\n              <div key={index} className=\"flex items-center justify-between space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-full\" \n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm text-white/80\">{entry.name}:</span>\n                </div>\n                <span className=\"font-semibold text-white\">\n                  {formatCurrency(entry.value)}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"chart-container group\">\n      {/* Title and Dropdowns in Same Row */}\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 lg:gap-6 mb-6 sm:mb-8\">\n        <div className=\"flex-shrink-0\">\n          <h2 className=\"mobile-heading-scale font-bold gradient-text\">\n            Operating Margin Trend\n          </h2>\n        </div>\n        \n        {/* Year Range Dropdowns */}\n        <div className=\"flex flex-row items-center gap-3 lg:flex-shrink-0\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"text-white/80 font-medium text-sm whitespace-nowrap\">Start:</span>\n            <div className=\"min-w-[100px]\">\n              <Dropdown\n                options={yearOptions}\n                value={(startYear || 2021).toString()}\n                onChange={(value) => {\n                  const newStartYear = parseInt(value);\n                  setStartYear(newStartYear);\n                  // Ensure end year is not before start year\n                  if (newStartYear > (endYear || 2024)) {\n                    setEndYear(newStartYear);\n                  }\n                }}\n                placeholder=\"Start Year\"\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <span className=\"text-white/80 font-medium text-sm whitespace-nowrap\">End:</span>\n            <div className=\"min-w-[100px]\">\n              <Dropdown\n                options={yearOptions.filter(year => parseInt(year.value) >= (startYear || 2021))}\n                value={(endYear || 2024).toString()}\n                onChange={(value) => setEndYear(parseInt(value))}\n                placeholder=\"End Year\"\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Revenue, Expenses, and Net Income Area Chart */}\n      <div className=\"h-64 sm:h-80 lg:h-96 group-hover:scale-[1.01] transition-transform duration-300 w-full min-w-0\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={chartData} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n            <defs>\n              {/* Gradient definitions for lines */}\n              <linearGradient id=\"revenueGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#10b981\" stopOpacity={0.8}/>\n                <stop offset=\"95%\" stopColor=\"#10b981\" stopOpacity={0.1}/>\n              </linearGradient>\n              <linearGradient id=\"expenseGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#ef4444\" stopOpacity={0.8}/>\n                <stop offset=\"95%\" stopColor=\"#ef4444\" stopOpacity={0.1}/>\n              </linearGradient>\n              <linearGradient id=\"netIncomeGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3b82f6\" stopOpacity={0.8}/>\n                <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0.1}/>\n              </linearGradient>\n            </defs>\n            \n            <CartesianGrid strokeDasharray=\"3 3\" stroke={chartTheme.grid.stroke} />\n            <XAxis \n              dataKey=\"date\" \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n              fontWeight={500}\n              axisLine={true}\n              tickLine={true}\n              tick={{ fill: chartTheme.axis.stroke, fontSize: 12 }}\n              height={60}\n              padding={{ left: 0, right: 12 }}\n            />\n            <YAxis \n              stroke={chartTheme.axis.stroke}\n              fontSize={12}\n              fontWeight={500}\n              axisLine={true}\n              tickLine={true}\n              tick={{ fill: chartTheme.axis.stroke, fontSize: 12 }}\n              tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n              // width={0}\n              tickCount={6}\n              domain={[0, 'dataMax + 2000000']}\n            />\n            <Tooltip \n              content={<CustomTooltip />}\n              cursor={{\n                fill: chartTheme.cursor.fill,\n                stroke: chartTheme.cursor.stroke,\n                strokeWidth: 1\n              }}\n            />\n            <Legend \n              wrapperStyle={{\n                position: 'absolute',\n                bottom: '15px',\n                left: '0',\n                right: '0',\n                width: '100%',\n                height: 'auto',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}\n              content={({ payload }) => (\n                <div className=\"w-full flex justify-center\">\n                  <div className=\"chart-legend-container\">\n                    <div className=\"flex flex-wrap items-center justify-center gap-x-6 gap-y-3\">\n                      {payload?.map((entry, index: number) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <div \n                            className=\"w-3 h-3 rounded-full flex-shrink-0\" \n                            style={{ backgroundColor: entry.color }}\n                          />\n                          <span className=\"legend-text text-sm font-medium whitespace-nowrap\">\n                            {entry.value}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            />\n            \n            {/* Revenue Area with enhanced styling */}\n            <Area \n              type=\"monotone\" \n              dataKey=\"revenue\" \n              stroke=\"#10b981\"\n              strokeWidth={3}\n              fill=\"url(#revenueGradient)\"\n              name=\"Revenue\"\n              dot={{ \n                fill: '#10b981', \n                strokeWidth: 0, \n                r: 5,\n                filter: 'drop-shadow(0px 2px 4px rgba(16, 185, 129, 0.3))'\n              }}\n              activeDot={{ \n                r: 8, \n                fill: '#10b981', \n                stroke: 'rgba(255, 255, 255, 0.8)', \n                strokeWidth: 3,\n                filter: 'drop-shadow(0px 4px 8px rgba(16, 185, 129, 0.5))'\n              }}\n            />\n            \n            {/* Expenses Area */}\n            <Area \n              type=\"monotone\" \n              dataKey=\"expenses\" \n              stroke=\"#ef4444\"\n              strokeWidth={3}\n              fill=\"url(#expenseGradient)\"\n              name=\"Expenses\"\n              dot={{ \n                fill: '#ef4444', \n                strokeWidth: 0, \n                r: 5,\n                filter: 'drop-shadow(0px 2px 4px rgba(239, 68, 68, 0.3))'\n              }}\n              activeDot={{ \n                r: 8, \n                fill: '#ef4444', \n                stroke: 'rgba(255, 255, 255, 0.8)', \n                strokeWidth: 3,\n                filter: 'drop-shadow(0px 4px 8px rgba(239, 68, 68, 0.5))'\n              }}\n            />\n            \n            {/* Net Income Area */}\n            <Area \n              type=\"monotone\" \n              dataKey=\"netIncome\" \n              stroke=\"#3b82f6\"\n              strokeWidth={3}\n              fill=\"url(#netIncomeGradient)\"\n              name=\"Net Income\"\n              dot={{ \n                fill: '#3b82f6', \n                strokeWidth: 0, \n                r: 5,\n                filter: 'drop-shadow(0px 2px 4px rgba(59, 130, 246, 0.3))'\n              }}\n              activeDot={{ \n                r: 8, \n                fill: '#3b82f6', \n                stroke: 'rgba(255, 255, 255, 0.8)', \n                strokeWidth: 3,\n                filter: 'drop-shadow(0px 4px 8px rgba(59, 130, 246, 0.5))'\n              }}\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n      \n      {/* Redesigned Performance Insight Section - Card Style */}\n      <div className=\"mt-6\">\n        <div className=\"glass-card rounded-xl mobile-card-padding bg-gradient-to-r from-green-500/5 to-blue-500/5 border border-green-500/30\">\n          <div className=\"performance-insight-container\">\n            <div className=\"performance-insight-header\">\n              <div style={{ \n                width: '2rem',\n                height: '2rem',\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                background: 'linear-gradient(135deg, #3b82f6, #2563eb)'\n              }}>\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <span className=\"performance-insight-title\">Performance Insights</span>\n              {/* AI Indicator - Button Style */}\n              <button className=\"ml-2 btn-base btn-primary btn-sm\" style={{ padding: '4px 8px', fontSize: 'var(--font-size-xs)', borderRadius: '4px', height: 'auto', minHeight: 'unset' }} aria-label=\"AI-powered insights\">\n                <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                  <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\n                </svg>\n                <span className=\"ml-1 text-xs font-medium\">AI</span>\n              </button>\n            </div>\n            <div className=\"performance-insight-grid\">\n              <div className=\"performance-insight-card amber\">\n                <div className=\"performance-insight-card-value\">$125.2M</div>\n                <div className=\"performance-insight-card-label\">Peak Revenue</div>\n                <div className=\"performance-insight-card-context\">June 2023</div>\n              </div>\n              <div className=\"performance-insight-card blue\">\n                <div className=\"performance-insight-card-value\">+15.8%</div>\n                <div className=\"performance-insight-card-label\">Growth Rate</div>\n                <div className=\"performance-insight-card-context\">Year over Year</div>\n              </div>\n              <div className=\"performance-insight-card green\">\n                <div className=\"performance-insight-card-value\">18.3%</div>\n                <div className=\"performance-insight-card-label\">Profit Margin</div>\n                <div className=\"performance-insight-card-context\">Current Period</div>\n              </div>\n              <div className=\"performance-insight-card cyan\">\n                <div className=\"performance-insight-card-value\">92.1%</div>\n                <div className=\"performance-insight-card-label\">Efficiency</div>\n                <div className=\"performance-insight-card-context\">Overall Score</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueChart;\n"],"names":["RevenueChart","availableYears","chartTheme","useChartTheme","startYear","setStartYear","useState","endYear","setEndYear","length","yearOptions","useMemo","map","year","value","toString","label","chartData","month","baseRevenue","Math","random","baseExpenses","date","revenue","round","expenses","netIncome","years","end","push","jsxs","className","children","jsx","ChartNoData","title","message","icon","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","CustomTooltip","active","payload","entry","index","style","backgroundColor","color","name","formatCurrency","Dropdown","options","onChange","newStartYear","parseInt","placeholder","filter","ResponsiveContainer","width","height","AreaChart","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","grid","XAxis","dataKey","axis","fontSize","fontWeight","axisLine","tickLine","tick","padding","YAxis","tickFormatter","toFixed","tickCount","domain","Tooltip","content","cursor","Legend","wrapperStyle","position","display","alignItems","justifyContent","Area","type","dot","r","activeDot","borderRadius","background","minHeight"],"mappings":"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"}