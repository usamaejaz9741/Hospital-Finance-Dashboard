{"version":3,"file":"dashboard-DD2DIP0U.js","sources":["../../src/components/Dropdown.tsx","../../src/contexts/ThemeContext.tsx","../../src/components/ThemeToggle.tsx","../../src/hooks/useTheme.ts","../../src/components/Header.tsx","../../src/utils/formatters.ts","../../src/components/MetricCard.tsx","../../src/components/DepartmentTable.tsx","../../src/components/PatientMetricsCard.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface DropdownOption {\n  value: string;\n  label: string;\n  subtitle?: string;\n}\n\ninterface DropdownProps {\n  options: DropdownOption[];\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  className?: string;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ \n  options, \n  value, \n  onChange, \n  placeholder, \n  className = '' \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const selectedOption = options.find(option => option.value === value);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleOptionClick = (optionValue: string) => {\n    onChange(optionValue);\n    setIsOpen(false);\n  };\n\n  return (\n    <div ref={dropdownRef} className={`dropdown-container relative ${className}`}>\n      <button\n        type=\"button\"\n        className=\"w-full bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-left shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 hover:border-gray-400 dark:hover:border-gray-500 transition-colors duration-200\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"min-w-0 flex-1\">\n            {selectedOption ? (\n              <div>\n                <div className=\"font-medium text-gray-900 dark:text-white\">{selectedOption.label}</div>\n                {selectedOption.subtitle && (\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">{selectedOption.subtitle}</div>\n                )}\n              </div>\n            ) : (\n              <span className=\"text-gray-500 dark:text-gray-400\">{placeholder}</span>\n            )}\n          </div>\n          <div className=\"ml-2 flex-shrink-0\">\n            <svg\n              className={`w-4 h-4 text-gray-400 dark:text-gray-500 transition-transform duration-200 ${\n                isOpen ? 'transform rotate-180' : ''\n              }`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n      </button>\n\n      {isOpen && (\n        <div \n          className=\"absolute w-full mt-1 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg dark:shadow-gray-900/20 max-h-60 overflow-auto\"\n          style={{ \n            zIndex: 99999,\n            position: 'absolute',\n            top: '100%',\n            left: 0,\n            right: 0\n          }}\n        >\n          {options.map((option) => (\n            <button\n              key={option.value}\n              type=\"button\"\n              className={`w-full text-left px-4 py-3 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:bg-gray-50 dark:focus:bg-gray-700 transition-colors duration-150 ${\n                option.value === value ? 'bg-primary-50 dark:bg-primary-900/20 border-r-2 border-primary-500' : ''\n              }`}\n              onClick={() => handleOptionClick(option.value)}\n            >\n              <div className=\"font-medium text-gray-900 dark:text-white\">{option.label}</div>\n              {option.subtitle && (\n                <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">{option.subtitle}</div>\n              )}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { Theme, ThemeContextType } from '../types/theme';\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [theme, setThemeState] = useState<Theme>('light');\r\n\r\n  // Initialize theme from localStorage or system preference\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem('hospitalFinanceTheme') as Theme;\r\n    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n    \r\n    const initialTheme = storedTheme || systemTheme;\r\n    setThemeState(initialTheme);\r\n    applyTheme(initialTheme);\r\n  }, []);\r\n\r\n  // Listen for system theme changes\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      if (!localStorage.getItem('hospitalFinanceTheme')) {\r\n        const newTheme = e.matches ? 'dark' : 'light';\r\n        setThemeState(newTheme);\r\n        applyTheme(newTheme);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, []);\r\n\r\n  const applyTheme = (newTheme: Theme) => {\r\n    const root = document.documentElement;\r\n    \r\n    if (newTheme === 'dark') {\r\n      root.classList.add('dark');\r\n    } else {\r\n      root.classList.remove('dark');\r\n    }\r\n  };\r\n\r\n  const setTheme = (newTheme: Theme) => {\r\n    setThemeState(newTheme);\r\n    localStorage.setItem('hospitalFinanceTheme', newTheme);\r\n    applyTheme(newTheme);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  const value: ThemeContextType = {\r\n    theme,\r\n    toggleTheme,\r\n    setTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { useTheme } from '../hooks/useTheme';\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string;\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ className = '', size = 'md' }) => {\r\n  const { theme, toggleTheme } = useTheme();\r\n\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-5 h-5',\r\n    lg: 'w-6 h-6'\r\n  };\r\n\r\n  const iconSize = sizeClasses[size];\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className={`\r\n        p-2 rounded-lg transition-all duration-200 \r\n        bg-gray-100 hover:bg-gray-200 \r\n        dark:bg-gray-700 dark:hover:bg-gray-600 \r\n        text-gray-700 dark:text-gray-300 \r\n        hover:text-gray-900 dark:hover:text-white\r\n        focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n        dark:focus:ring-offset-gray-800\r\n        ${className}\r\n      `}\r\n      title={theme === 'light' ? 'Switch to dark mode' : 'Switch to light mode'}\r\n      aria-label={theme === 'light' ? 'Switch to dark mode' : 'Switch to light mode'}\r\n    >\r\n      {theme === 'light' ? (\r\n        // Moon icon for light mode (clicking will switch to dark)\r\n        <svg \r\n          className={iconSize} \r\n          fill=\"none\" \r\n          stroke=\"currentColor\" \r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" \r\n            strokeWidth={2} \r\n            d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" \r\n          />\r\n        </svg>\r\n      ) : (\r\n        // Sun icon for dark mode (clicking will switch to light)\r\n        <svg \r\n          className={iconSize} \r\n          fill=\"none\" \r\n          stroke=\"currentColor\" \r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" \r\n            strokeWidth={2} \r\n            d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" \r\n          />\r\n        </svg>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n\r\n","import { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n","import React, { useState } from 'react';\nimport Dropdown from './Dropdown';\nimport ThemeToggle from './ThemeToggle';\nimport { Hospital } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\n\ninterface HeaderProps {\n  hospitals: Hospital[];\n  selectedHospitalId: string;\n  selectedYear: number;\n  availableYears: number[];\n  onHospitalChange: (hospitalId: string) => void;\n  onYearChange: (year: number) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  hospitals,\n  selectedHospitalId,\n  selectedYear,\n  availableYears,\n  onHospitalChange,\n  onYearChange\n}) => {\n  const { user, signOut } = useAuth();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const hospitalOptions = hospitals.map(hospital => ({\n    value: hospital.id,\n    label: hospital.name,\n    subtitle: `${hospital.type} • ${hospital.location}`\n  }));\n\n  const yearOptions = availableYears.map(year => ({\n    value: year.toString(),\n    label: year.toString()\n  }));\n\n  const selectedHospital = hospitals.find(h => h.id === selectedHospitalId);\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 transition-colors duration-200 relative overflow-visible\">\n      <div className=\"px-4 sm:px-6 lg:px-8 overflow-visible\">\n        {/* Desktop Header */}\n        <div className=\"flex items-center justify-between min-h-16 py-4 relative\">\n          {/* Logo and Title */}\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-lg\">H</span>\n            </div>\n            <div className=\"hidden sm:block\">\n              <h1 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-white\">\n                Hospital Finance Dashboard\n              </h1>\n              <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\n                {selectedHospital ? `${selectedHospital.name} • ${selectedYear}` : 'Real-time financial insights and analytics'}\n              </p>\n            </div>\n            <div className=\"sm:hidden\">\n              <h1 className=\"text-lg font-bold text-gray-900 dark:text-white\">Dashboard</h1>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-6\">\n            {/* Dropdowns */}\n            <div className=\"flex items-end space-x-4\">\n              <div className=\"flex flex-col space-y-1\">\n                <label className=\"text-xs font-medium text-gray-600 dark:text-gray-400 uppercase tracking-wide\">\n                  Hospital\n                </label>\n                <Dropdown\n                  options={hospitalOptions}\n                  value={selectedHospitalId}\n                  onChange={onHospitalChange}\n                  placeholder=\"Select Hospital\"\n                  className=\"w-64\"\n                />\n              </div>\n              \n              <div className=\"flex flex-col space-y-1\">\n                <label className=\"text-xs font-medium text-gray-600 dark:text-gray-400 uppercase tracking-wide\">\n                  Year\n                </label>\n                <Dropdown\n                  options={yearOptions}\n                  value={selectedYear.toString()}\n                  onChange={(value) => onYearChange(parseInt(value))}\n                  placeholder=\"Select Year\"\n                  className=\"w-40\"\n                />\n              </div>\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex items-center space-x-3\">\n              <ThemeToggle />\n              <button \n                className=\"btn-secondary text-sm\"\n                aria-label=\"Export financial report\"\n              >\n                Export Report\n              </button>\n              <button \n                className=\"btn-primary text-sm\"\n                aria-label=\"Generate financial analysis\"\n              >\n                Generate Analysis\n              </button>\n            </div>\n            \n            {/* User Section */}\n            <div className=\"flex items-center space-x-2 pl-4 border-l border-gray-200 dark:border-gray-700\">\n              <div className=\"w-8 h-8 bg-primary-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-medium text-sm\">\n                  {user?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                </span>\n              </div>\n              <div className=\"text-sm\">\n                <p className=\"font-medium text-gray-900 dark:text-white\">{user?.name}</p>\n                <p className=\"text-gray-500 dark:text-gray-400 capitalize\">{user?.role.replace('_', ' ')}</p>\n              </div>\n              <button\n                onClick={signOut}\n                className=\"ml-2 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors\"\n                title=\"Sign out\"\n                aria-label=\"Sign out of your account\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"lg:hidden flex items-center space-x-2\">\n            <ThemeToggle size=\"sm\" />\n            <button\n              type=\"button\"\n              className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              aria-controls=\"mobile-menu\"\n              aria-expanded=\"false\"\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {!isMobileMenuOpen ? (\n                <svg className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\n                </svg>\n              ) : (\n                <svg className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile menu */}\n        <div className={`lg:hidden ${isMobileMenuOpen ? 'block' : 'hidden'}`} id=\"mobile-menu\">\n          <div className=\"px-2 pt-2 pb-3 space-y-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800/50\">\n            {/* User Info */}\n            <div className=\"flex items-center space-x-3 px-3 py-2\">\n              <div className=\"w-10 h-10 bg-primary-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-medium\">\n                  {user?.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                </span>\n              </div>\n              <div>\n                <p className=\"font-medium text-gray-900 dark:text-white\">{user?.name}</p>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 capitalize\">{user?.role.replace('_', ' ')}</p>\n              </div>\n            </div>\n\n            {/* Mobile Dropdowns */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Hospital\n                </label>\n                <Dropdown\n                  options={hospitalOptions}\n                  value={selectedHospitalId}\n                  onChange={onHospitalChange}\n                  placeholder=\"Select Hospital\"\n                  className=\"w-full\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Year\n                </label>\n                <Dropdown\n                  options={yearOptions}\n                  value={selectedYear.toString()}\n                  onChange={(value) => onYearChange(parseInt(value))}\n                  placeholder=\"Select Year\"\n                  className=\"w-full\"\n                />\n              </div>\n            </div>\n\n            {/* Mobile Action Buttons */}\n            <div className=\"space-y-2 pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <button \n                className=\"w-full btn-secondary text-left justify-start\"\n                aria-label=\"Export financial report\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n                Export Report\n              </button>\n              <button \n                className=\"w-full btn-primary text-left justify-start\"\n                aria-label=\"Generate financial analysis\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                Generate Analysis\n              </button>\n              <button\n                onClick={signOut}\n                className=\"w-full flex items-center px-3 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-md transition-colors\"\n                aria-label=\"Sign out of your account\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\n","export const formatCurrency = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(value);\r\n};\r\n\r\nexport const formatPercentage = (value: number): string => {\r\n  return `${value.toFixed(1)}%`;\r\n};\r\n\r\nexport const formatNumber = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US').format(value);\r\n};\r\n\r\nexport const formatCompactCurrency = (value: number): string => {\r\n  if (value >= 1000000) {\r\n    return `$${(value / 1000000).toFixed(1)}M`;\r\n  }\r\n  if (value >= 1000) {\r\n    return `$${(value / 1000).toFixed(1)}K`;\r\n  }\r\n  return formatCurrency(value);\r\n};\r\n\r\nexport const getChangeColor = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? 'text-success-600' : 'text-danger-600';\r\n};\r\n\r\nexport const getChangeIcon = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? '↗' : '↘';\r\n};\r\n\r\n","import React from 'react';\nimport { FinancialMetric } from '../types/finance';\nimport { formatCurrency, formatPercentage, formatNumber, getChangeColor, getChangeIcon } from '../utils/formatters';\n\ninterface MetricCardProps {\n  metric: FinancialMetric;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({ metric }) => {\n  const formatValue = (value: number, format: string) => {\n    switch (format) {\n      case 'currency':\n        return formatCurrency(value);\n      case 'percentage':\n        return formatPercentage(value);\n      case 'number':\n        return formatNumber(value);\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div \n      className=\"metric-card\" \n      role=\"article\" \n      aria-labelledby={`metric-title-${metric.id}`}\n      aria-describedby={`metric-change-${metric.id}`}\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <h3 \n          id={`metric-title-${metric.id}`}\n          className=\"text-sm font-medium text-gray-600 dark:text-gray-400\"\n        >\n          {metric.title}\n        </h3>\n      </div>\n      \n      <div className=\"mb-2\">\n        <p \n          className=\"text-2xl font-bold text-gray-900 dark:text-white\"\n          aria-label={`${metric.title} value: ${formatValue(metric.value, metric.format)}`}\n        >\n          {formatValue(metric.value, metric.format)}\n        </p>\n      </div>\n      \n      <div className=\"flex items-center justify-between text-sm\">\n        <span \n          id={`metric-change-${metric.id}`}\n          className={`flex items-center ${getChangeColor(metric.changeType)}`}\n          aria-label={`${metric.changeType === 'increase' ? 'Increased' : 'Decreased'} by ${formatPercentage(metric.change)} ${metric.period}`}\n        >\n          <span className=\"mr-1\" aria-hidden=\"true\">{getChangeIcon(metric.changeType)}</span>\n          {formatPercentage(metric.change)}\n        </span>\n        <span className=\"text-gray-500 dark:text-gray-400\">{metric.period}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MetricCard;\n\n","import React from 'react';\nimport { DepartmentFinance } from '../types/finance';\nimport { formatCurrency, formatPercentage } from '../utils/formatters';\n\ninterface DepartmentTableProps {\n  departments: DepartmentFinance[];\n}\n\nconst DepartmentTable: React.FC<DepartmentTableProps> = ({ departments }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Department Performance</h2>\n        <button className=\"btn-secondary text-sm\">\n          View Details\n        </button>\n      </div>\n      \n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full\">\n          <thead>\n            <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n              <th className=\"text-left py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Department</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Revenue</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Expenses</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Profit</th>\n              <th className=\"text-right py-3 px-4 font-medium text-gray-600 dark:text-gray-400\">Margin</th>\n            </tr>\n          </thead>\n          <tbody>\n            {departments.map((dept, index) => (\n              <tr key={dept.department} className={`${index !== departments.length - 1 ? 'border-b border-gray-100 dark:border-gray-700' : ''} hover:bg-gray-50 dark:hover:bg-gray-700/50`}>\n                <td className=\"py-3 px-4\">\n                  <div className=\"font-medium text-gray-900 dark:text-white\">{dept.department}</div>\n                </td>\n                <td className=\"py-3 px-4 text-right text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.revenue)}\n                </td>\n                <td className=\"py-3 px-4 text-right text-gray-900 dark:text-gray-100\">\n                  {formatCurrency(dept.expenses)}\n                </td>\n                <td className=\"py-3 px-4 text-right\">\n                  <span className={`font-medium ${dept.profit > 0 ? 'text-success-600' : 'text-danger-600'}`}>\n                    {formatCurrency(dept.profit)}\n                  </span>\n                </td>\n                <td className=\"py-3 px-4 text-right\">\n                  <span className={`font-medium ${dept.profitMargin > 20 ? 'text-success-600' : dept.profitMargin > 10 ? 'text-warning-600' : 'text-danger-600'}`}>\n                    {formatPercentage(dept.profitMargin)}\n                  </span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DepartmentTable;\n\n","import React from 'react';\nimport { PatientMetrics } from '../types/finance';\nimport { formatNumber, formatPercentage } from '../utils/formatters';\n\ninterface PatientMetricsCardProps {\n  metrics: PatientMetrics;\n}\n\nconst PatientMetricsCard: React.FC<PatientMetricsCardProps> = ({ metrics }) => {\n  const metricItems = [\n    {\n      label: 'Total Patients',\n      value: formatNumber(metrics.totalPatients),\n      icon: '👥',\n      color: 'text-primary-600'\n    },\n    {\n      label: 'Inpatients',\n      value: formatNumber(metrics.inpatients),\n      icon: '🏥',\n      color: 'text-success-600'\n    },\n    {\n      label: 'Outpatients',\n      value: formatNumber(metrics.outpatients),\n      icon: '🚶',\n      color: 'text-warning-600'\n    },\n    {\n      label: 'Emergency Visits',\n      value: formatNumber(metrics.emergencyVisits),\n      icon: '🚨',\n      color: 'text-danger-600'\n    },\n    {\n      label: 'Avg Stay Duration',\n      value: `${metrics.averageStayDuration} days`,\n      icon: '📅',\n      color: 'text-purple-600'\n    },\n    {\n      label: 'Occupancy Rate',\n      value: formatPercentage(metrics.occupancyRate),\n      icon: '📊',\n      color: 'text-indigo-600'\n    }\n  ];\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Patient Metrics</h2>\n        <button \n          className=\"btn-secondary text-sm\"\n          aria-label=\"View detailed patient metrics report\"\n        >\n          View Report\n        </button>\n      </div>\n      \n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\" role=\"grid\" aria-label=\"Patient metrics overview\">\n        {metricItems.map((item, index) => (\n          <div \n            key={index} \n            className=\"text-center p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\"\n            role=\"gridcell\"\n            aria-labelledby={`metric-label-${index}`}\n            aria-describedby={`metric-value-${index}`}\n          >\n            <div className=\"text-2xl mb-2\" aria-hidden=\"true\">{item.icon}</div>\n            <div \n              id={`metric-value-${index}`}\n              className={`text-lg font-bold ${item.color}`}\n              aria-label={`${item.label}: ${item.value}`}\n            >\n              {item.value}\n            </div>\n            <div \n              id={`metric-label-${index}`}\n              className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\"\n            >\n              {item.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PatientMetricsCard;\n\n","import React from 'react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  text?: string;\r\n  subtext?: string;\r\n  className?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \r\n  size = 'md', \r\n  text = 'Loading...', \r\n  subtext,\r\n  className = '' \r\n}) => {\r\n  const sizeClasses = {\r\n    sm: 'h-6 w-6',\r\n    md: 'h-12 w-12',\r\n    lg: 'h-16 w-16'\r\n  };\r\n\r\n  const spinnerSize = sizeClasses[size];\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center ${className}`}>\r\n      <div className=\"text-center\">\r\n        <div className={`animate-spin rounded-full ${spinnerSize} border-b-2 border-primary-600 mx-auto mb-4`}></div>\r\n        {text && (\r\n          <p className=\"text-gray-600 dark:text-gray-300 font-medium\">{text}</p>\r\n        )}\r\n        {subtext && (\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">{subtext}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport MetricCard from './MetricCard';\nimport RevenueChart from './RevenueChart';\nimport DepartmentTable from './DepartmentTable';\nimport ExpensePieChart from './ExpensePieChart';\nimport PatientMetricsCard from './PatientMetricsCard';\nimport CashFlowChart from './CashFlowChart';\nimport LoadingSpinner from './LoadingSpinner';\nimport { logger } from '../utils/logger';\nimport {\n  hospitals,\n  availableYears,\n  getHospitalData\n} from '../data/mockData';\nimport { HospitalData } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\n\nconst Dashboard: React.FC = () => {\n  const { getAccessibleHospitals, canAccessHospital } = useAuth();\n  const accessibleHospitals = getAccessibleHospitals();\n  const filteredHospitals = hospitals.filter(h => accessibleHospitals.includes(h.id));\n  \n  const [selectedHospitalId, setSelectedHospitalId] = useState<string>(\n    accessibleHospitals[0] || ''\n  );\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\n  const [currentData, setCurrentData] = useState<HospitalData | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Update data when hospital or year changes\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    \n    if (selectedHospitalId && selectedYear) {\n      setIsLoading(true);\n      logger.info('Loading dashboard data', {\n        context: 'Dashboard',\n        data: { hospitalId: selectedHospitalId, year: selectedYear }\n      });\n      \n      // Simulate loading delay for better UX\n      timeout = setTimeout(() => {\n        const data = getHospitalData(selectedHospitalId, selectedYear);\n        if (!data) {\n          logger.warn('No data available for hospital and year', {\n            context: 'Dashboard',\n            data: { hospitalId: selectedHospitalId, year: selectedYear }\n          });\n        }\n        setCurrentData(data || null);\n        setIsLoading(false);\n      }, 500);\n    }\n\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [selectedHospitalId, selectedYear]);\n\n  const handleHospitalChange = (hospitalId: string) => {\n    // Check if user has access to the selected hospital\n    if (canAccessHospital(hospitalId)) {\n      logger.info('Hospital selection changed', {\n        context: 'Dashboard',\n        data: { hospitalId }\n      });\n      setSelectedHospitalId(hospitalId);\n    } else {\n      logger.warn('Unauthorized hospital access attempt', {\n        context: 'Dashboard',\n        data: { hospitalId }\n      });\n    }\n  };\n\n  const handleYearChange = (year: number) => {\n    logger.info('Year selection changed', {\n      context: 'Dashboard',\n      data: { year, previousYear: selectedYear }\n    });\n    setSelectedYear(year);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"text-gray-900 dark:text-gray-100\">\n        <Header\n          hospitals={filteredHospitals}\n          selectedHospitalId={selectedHospitalId}\n          selectedYear={selectedYear}\n          availableYears={availableYears}\n          onHospitalChange={handleHospitalChange}\n          onYearChange={handleYearChange}\n        />\n        \n        <main className=\"p-4 sm:p-6\">\n          <LoadingSpinner\n            size=\"md\"\n            text=\"Loading dashboard data...\"\n            subtext={`${hospitals.find(h => h.id === selectedHospitalId)?.name} • ${selectedYear}`}\n            className=\"min-h-96\"\n          />\n        </main>\n      </div>\n    );\n  }\n\n  if (!currentData) {\n    return (\n      <div className=\"text-gray-900 dark:text-gray-100\">\n        <Header\n          hospitals={filteredHospitals}\n          selectedHospitalId={selectedHospitalId}\n          selectedYear={selectedYear}\n          availableYears={availableYears}\n          onHospitalChange={handleHospitalChange}\n          onYearChange={handleYearChange}\n        />\n        \n        <main className=\"p-4 sm:p-6\">\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No Data Available</h3>\n            <p className=\"text-gray-600 dark:text-gray-300\">\n              No financial data found for the selected hospital and year combination.\n            </p>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n              Please select a different hospital or year.\n            </p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-gray-900 dark:text-gray-100\">\n      <Header\n        hospitals={filteredHospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={handleHospitalChange}\n        onYearChange={handleYearChange}\n      />\n      \n      <main className=\"p-4 sm:p-6\">\n        {/* Key Metrics */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Key Financial Metrics</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {currentData.financialMetrics.map((metric) => (\n              <MetricCard key={metric.id} metric={metric} />\n            ))}\n          </div>\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          <div className=\"lg:col-span-2\">\n            <RevenueChart data={currentData.revenueData} />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          <ExpensePieChart data={currentData.expenseBreakdown} />\n          <CashFlowChart data={currentData.cashFlowData} />\n        </div>\n\n        {/* Patient Metrics */}\n        <div className=\"mb-8\">\n          <PatientMetricsCard metrics={currentData.patientMetrics} />\n        </div>\n\n        {/* Department Performance */}\n        <div className=\"mb-8\">\n          <DepartmentTable departments={currentData.departmentFinances} />\n        </div>\n\n        {/* Footer */}\n        <footer className=\"text-center text-sm text-gray-500 dark:text-gray-400 mt-12 py-6 border-t border-gray-200 dark:border-gray-700\">\n          <p>© 2024 Hospital Finance Dashboard. All rights reserved.</p>\n          <p className=\"mt-1\">Last updated: {new Date().toLocaleDateString('en-US', { \n            year: 'numeric', \n            month: 'long', \n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          })}</p>\n        </footer>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"names":["Dropdown","options","value","onChange","placeholder","className","isOpen","setIsOpen","useState","dropdownRef","useRef","selectedOption","find","option","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","children","jsx","type","onClick","jsxs","label","subtitle","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","style","zIndex","position","top","left","right","map","handleOptionClick","optionValue","ThemeContext","createContext","ThemeProvider","theme","setThemeState","storedTheme","localStorage","getItem","systemTheme","window","matchMedia","matches","initialTheme","applyTheme","mediaQuery","handleChange","e","newTheme","root","documentElement","classList","add","remove","setTheme","setItem","toggleTheme","Provider","ThemeToggle","size","context","useContext","Error","useTheme","iconSize","sm","md","lg","title","Header","hospitals","selectedHospitalId","selectedYear","availableYears","onHospitalChange","onYearChange","user","signOut","useAuth","isMobileMenuOpen","setIsMobileMenuOpen","hospitalOptions","hospital","id","name","location","yearOptions","year","toString","selectedHospital","h","parseInt","split","n","join","toUpperCase","role","replace","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","toFixed","formatNumber","getChangeIcon","changeType","MetricCard","metric","formatValue","change","period","DepartmentTable","departments","dept","index","length","department","revenue","expenses","profit","profitMargin","PatientMetricsCard","metrics","metricItems","totalPatients","icon","color","inpatients","outpatients","emergencyVisits","averageStayDuration","occupancyRate","item","LoadingSpinner","text","subtext","spinnerSize","Dashboard","getAccessibleHospitals","canAccessHospital","accessibleHospitals","filteredHospitals","filter","includes","setSelectedHospitalId","setSelectedYear","currentData","setCurrentData","isLoading","setIsLoading","timeout","logger","info","data","hospitalId","setTimeout","getHospitalData","warn","clearTimeout","handleHospitalChange","handleYearChange","previousYear","financialMetrics","RevenueChart","revenueData","ExpensePieChart","expenseBreakdown","CashFlowChart","cashFlowData","patientMetrics","departmentFinances","Date","toLocaleDateString","month","day","hour","minute"],"mappings":"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"}