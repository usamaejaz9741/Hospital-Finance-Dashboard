{"version":3,"file":"useChartTheme-C-CeL_SN.js","sources":["../../src/hooks/useChartTheme.ts"],"sourcesContent":["import { useTheme } from './useTheme';\r\n// import resolveConfig from 'tailwindcss/resolveConfig';\r\n// import tailwindConfig from '../../tailwind.config.js';\r\n\r\n// Resolve Tailwind configuration to access theme colors at runtime\r\n// const fullConfig = resolveConfig(tailwindConfig);\r\n\r\n/**\r\n * Custom hook for providing theme-aware colors and styling for charts.\r\n * \r\n * This hook bridges the application's theme system with chart components,\r\n * automatically providing appropriate colors, grid styles, tooltips, and\r\n * other visual elements that adapt to light/dark mode.\r\n * \r\n * @description Features:\r\n * - Theme-aware color palette for chart elements\r\n * - Automatic light/dark mode adaptation\r\n * - Consistent styling with application theme\r\n * - Grid, axis, tooltip, and legend theming\r\n * - Type-safe color and style configuration\r\n * - Integration with Tailwind CSS design system\r\n * \r\n * @returns Object containing:\r\n *   - chartTheme: Complete theme configuration for charts\r\n *   - resolvedTheme: Current active theme (light or dark)\r\n * \r\n * @example\r\n * ```tsx\r\n * function CustomChart() {\r\n *   const { chartTheme, resolvedTheme } = useChartTheme();\r\n *   \r\n *   return (\r\n *     <LineChart data={data}>\r\n *       <Line \r\n *         stroke={chartTheme.colors.primary}\r\n *         strokeWidth={2}\r\n *       />\r\n *       <XAxis \r\n *         stroke={chartTheme.axis.stroke}\r\n *         tick={{ fill: chartTheme.axis.stroke }}\r\n *       />\r\n *       <Tooltip \r\n *         contentStyle={{\r\n *           backgroundColor: chartTheme.tooltip.backgroundColor,\r\n *           border: `1px solid ${chartTheme.tooltip.border}`,\r\n *           color: chartTheme.tooltip.textColor\r\n *         }}\r\n *       />\r\n *     </LineChart>\r\n *   );\r\n * }\r\n * ```\r\n * \r\n * @example\r\n * ```tsx\r\n * function PieChart() {\r\n *   const { chartTheme } = useChartTheme();\r\n *   \r\n *   const data = [\r\n *     { name: 'Category A', value: 400, fill: chartTheme.colors.primary },\r\n *     { name: 'Category B', value: 300, fill: chartTheme.colors.secondary },\r\n *     { name: 'Category C', value: 200, fill: chartTheme.colors.success }\r\n *   ];\r\n *   \r\n *   return <Pie data={data} />;\r\n * }\r\n * ```\r\n */\r\nexport const useChartTheme = () => {\r\n  const { resolvedTheme } = useTheme();\r\n  \r\n  // Access Tailwind color configuration (TypeScript type issue with complex config structure)\r\n  // const themeColors = fullConfig.theme.colors;\r\n\r\n  // Enhanced theme-aware color palette for chart elements with diverse colors\r\n  const colors = {\r\n    primary: resolvedTheme === 'dark' ? '#a855f7' : '#a855f7', // Purple - main brand\r\n    secondary: resolvedTheme === 'dark' ? '#3b82f6' : '#2563eb', // Blue - secondary actions\r\n    success: resolvedTheme === 'dark' ? '#22c55e' : '#16a34a', // Green - positive metrics\r\n    danger: resolvedTheme === 'dark' ? '#ef4444' : '#dc2626', // Red - negative metrics\r\n    warning: resolvedTheme === 'dark' ? '#f59e0b' : '#d97706', // Amber - warnings\r\n    info: resolvedTheme === 'dark' ? '#06b6d4' : '#0891b2', // Cyan - info states\r\n    accent: resolvedTheme === 'dark' ? '#8b5cf6' : '#9333ea', // Purple variant\r\n    purple: resolvedTheme === 'dark' ? '#c084fc' : '#a855f7', // Purple - charts\r\n    // Additional chart colors for legends and data series\r\n    teal: resolvedTheme === 'dark' ? '#14b8a6' : '#0d9488', // Teal - data series\r\n    emerald: resolvedTheme === 'dark' ? '#10b981' : '#059669', // Emerald - success metrics\r\n    rose: resolvedTheme === 'dark' ? '#f43f5e' : '#e11d48', // Rose - danger metrics\r\n    violet: resolvedTheme === 'dark' ? '#8b5cf6' : '#7c3aed', // Violet - accent\r\n    indigo: resolvedTheme === 'dark' ? '#6366f1' : '#4f46e5', // Indigo - info metrics\r\n    orange: resolvedTheme === 'dark' ? '#f97316' : '#ea580c', // Orange - warning metrics\r\n  };\r\n\r\n  // Comprehensive theme configuration for all chart elements\r\n  const chartTheme = {\r\n    colors,\r\n    \r\n    // Enhanced grid line styling with subtle glassmorphism\r\n    grid: {\r\n      stroke: resolvedTheme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.3)',\r\n    },\r\n    \r\n    // Enhanced axis styling with better contrast\r\n    axis: {\r\n      stroke: resolvedTheme === 'dark' ? 'rgba(255, 255, 255, 0.6)' : 'rgba(255, 255, 255, 0.8)',\r\n    },\r\n    \r\n    // Enhanced tooltip with glassmorphism styling\r\n    tooltip: {\r\n      backgroundColor: resolvedTheme === 'dark' \r\n        ? 'rgba(15, 23, 42, 0.95)' \r\n        : 'rgba(255, 255, 255, 0.95)',\r\n      border: resolvedTheme === 'dark' \r\n        ? 'rgba(255, 255, 255, 0.2)' \r\n        : 'rgba(255, 255, 255, 0.3)',\r\n      textColor: resolvedTheme === 'dark' ? '#ffffff' : '#2d1b69',\r\n      shadowColor: resolvedTheme === 'dark' \r\n        ? 'rgba(12, 14, 39, 0.4)' \r\n        : 'rgba(102, 126, 234, 0.2)',\r\n      backdropFilter: 'blur(12px)',\r\n    },\r\n    \r\n    // Enhanced legend styling\r\n    legend: {\r\n      color: resolvedTheme === 'dark' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 0.9)',\r\n    },\r\n    \r\n    // Theme-appropriate cursor styling for chart interactions\r\n    cursor: {\r\n      fill: resolvedTheme === 'dark' \r\n        ? 'rgba(255, 255, 255, 0.1)' \r\n        : 'rgba(255, 255, 255, 0.2)',\r\n      stroke: resolvedTheme === 'dark' \r\n        ? 'rgba(255, 255, 255, 0.2)' \r\n        : 'rgba(255, 255, 255, 0.3)',\r\n    },\r\n  };\r\n\r\n  return { chartTheme, resolvedTheme };\r\n};\r\n"],"names":["useChartTheme","resolvedTheme","useTheme","chartTheme","colors","primary","secondary","success","danger","warning","info","accent","purple","teal","emerald","rose","violet","indigo","orange","grid","stroke","axis","tooltip","backgroundColor","border","textColor","shadowColor","backdropFilter","legend","color","cursor","fill"],"mappings":"uCAoEO,MAAMA,EAAgB,KAC3B,MAAMC,cAAEA,GAAkBC,IAqE1B,MAAO,CAAEC,WA5CU,CACjBC,OApBa,CACbC,QAAoC,UACpCC,UAA6B,SAAlBL,EAA2B,UAAY,UAClDM,QAA2B,SAAlBN,EAA2B,UAAY,UAChDO,OAA0B,SAAlBP,EAA2B,UAAY,UAC/CQ,QAA2B,SAAlBR,EAA2B,UAAY,UAChDS,KAAwB,SAAlBT,EAA2B,UAAY,UAC7CU,OAA0B,SAAlBV,EAA2B,UAAY,UAC/CW,OAA0B,SAAlBX,EAA2B,UAAY,UAE/CY,KAAwB,SAAlBZ,EAA2B,UAAY,UAC7Ca,QAA2B,SAAlBb,EAA2B,UAAY,UAChDc,KAAwB,SAAlBd,EAA2B,UAAY,UAC7Ce,OAA0B,SAAlBf,EAA2B,UAAY,UAC/CgB,OAA0B,SAAlBhB,EAA2B,UAAY,UAC/CiB,OAA0B,SAAlBjB,EAA2B,UAAY,WAQ/CkB,KAAM,CACJC,OAA0B,SAAlBnB,EAA2B,2BAA6B,4BAIlEoB,KAAM,CACJD,OAA0B,SAAlBnB,EAA2B,2BAA6B,4BAIlEqB,QAAS,CACPC,gBAAmC,SAAlBtB,EACb,yBACA,4BACJuB,OAA0B,SAAlBvB,EACJ,2BACA,2BACJwB,UAA6B,SAAlBxB,EAA2B,UAAY,UAClDyB,YAA+B,SAAlBzB,EACT,wBACA,2BACJ0B,eAAgB,cAIlBC,OAAQ,CACNC,MAAyB,SAAlB5B,EAA2B,2BAA6B,4BAIjE6B,OAAQ,CACNC,KAAwB,SAAlB9B,EACF,2BACA,2BACJmB,OAA0B,SAAlBnB,EACJ,2BACA,6BAIaA"}