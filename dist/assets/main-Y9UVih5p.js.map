{"version":3,"mappings":";20DAgBMA,EAAoC,EACxCC,UACAC,QACAC,WACAC,cACAC,YAAY,OAEZ,MAAOC,EAAQC,GAAaC,YAAS,GAC/BC,EAAcC,SAAuB,MAErCC,EAAiBV,EAAQW,KAAKC,GAAUA,EAAOX,QAAUA,GAwB/D,OAtBAY,YAAU,KACR,MAAMC,EAAsBC,IACtBP,EAAYQ,UAAYR,EAAYQ,QAAQC,SAASF,EAAMG,SAC7DZ,GAAU,IAKd,OADAa,SAASC,iBAAiB,YAAaN,GAChC,KACLK,SAASE,oBAAoB,YAAaP,KAE3C,IAYDQ,OAAC,OACCC,IAAKf,EACLJ,UAAW,YAAYA,IACvBoB,MAAO,CAAEC,SAAU,WAEnBC,SAAA,CAAAC,MAAC,UACCC,KAAK,SACLxB,UAAU,oJACVoB,MAAO,CACLK,aAAc,mBACdC,QAAS,iCAEXC,QAjBe,KACnBzB,GAAWD,IAiBP,gBAAc,UACd,gBAAeA,EAEfqB,SAAAJ,OAAC,OAAIlB,UAAU,oCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,iBACZsB,WACCJ,OAAC,OAAIlB,UAAU,UACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,8CAA8CoB,MAAO,CAAEQ,aAAc,KAAQN,SAAAhB,EAAeuB,QAC1GvB,EAAewB,UACdP,MAAC,OAAIvB,UAAU,sCAAsCoB,MAAO,CAAEW,UAAW,iBAAkBH,aAAc,KAAQN,WAAeQ,cAIpIP,MAAC,QAAKvB,UAAU,mCAAoCsB,eAGxDC,MAAC,OAAIvB,UAAU,qBACbsB,SAAAC,MAAC,OACCvB,UAAW,4DACTC,EAAS,uBAAyB,IAEpC+B,KAAK,OACLC,OAAO,eACPC,QAAQ,YAERZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4BAM7Ef,MAAC,OACCvB,UAAW,iHACTC,EAAS,4BAA8B,gDAEzCsC,KAAK,UACLnB,MAAO,CACLoB,OAAQ,MACRC,SAAU,WACVC,IAAK,OACLC,KAAM,EACNC,MAAO,EACPC,UAAWjD,EAAQkD,OAAS,EAAI,QAAU,OAC1Cf,UAAW,iBACXN,aAAc,oBAGhBH,SAAAC,MAAC,OAAIvB,UAAWJ,EAAQkD,OAAS,EAAI,kBAAoB,GAAI1B,MAAO,CAAEyB,UAAWjD,EAAQkD,OAAS,EAAI,QAAU,QAC7GxB,SAAA1B,EAAQmD,IAAKvC,GACVe,MAAC,UAECC,KAAK,SACLxB,UAAW,mGACTQ,EAAOX,QAAUA,EAAQ,WAAa,IAExCuB,MAAO,CAAEM,QAAS,iCAClBC,QAAS,KAAMqB,OA/EFC,EA+EoBzC,EAAOX,MA9EpDC,EAASmD,QACT/C,GAAU,GAFc,IAAC+C,GAgFbV,KAAK,SACL,gBAAe/B,EAAOX,QAAUA,EAElCyB,SAAAJ,OAAC,OAAIlB,UAAU,UACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,oCAAoCoB,MAAO,CAAE8B,SAAU,oBAAuB5B,SAAAd,EAAOqB,QACnGrB,EAAOsB,UACNP,MAAC,OAAIvB,UAAU,yBAAyBoB,MAAO,CAAE8B,SAAU,iBAAkBnB,UAAW,kBAAqBT,WAAOQ,eAbjHtB,EAAOX,gBC/GfsD,EAAeC,qBAA4C,GAM3DC,EAA8C,EAAG/B,eAC5D,MAAOgC,EAAOC,GAAiBpD,WAAgB,SACxCqD,EAAeC,GAAoBtD,WAAwB,SAC3DuD,EAAiBC,GAAsBxD,YAAS,GAGjDyD,EAAiBC,cAAY,IAC1BC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,QAC3E,IAGGC,EAAaJ,cAAaK,IAC9B,MAAMC,EAAOpD,SAASqD,gBAGtBT,GAAmB,GAGnBQ,EAAKE,UAAUC,IAAI,iBAGnBC,WAAW,KACgB,SAArBL,EACFC,EAAKE,UAAUC,IAAI,QAEnBH,EAAKE,UAAUG,OAAO,QAIxBzD,SAAS0D,KAAKC,aAGW3D,SAAS4D,iBAAiB,kFAClCC,QAAQC,IACvBf,OAAOgB,iBAAiBD,GAAeE,gBACvCjB,OAAOgB,iBAAiBD,GAAeG,MACvClB,OAAOgB,iBAAiBD,GAAeI,eAExC,MAGHV,WAAW,KACTJ,EAAKE,UAAUG,OAAO,iBACtBb,GAAmB,GAGM5C,SAAS4D,iBAAiB,8CAClCC,QAAQC,IACtBA,EAAmBzD,MAAM8D,mBAAqB,aAEhD,OACF,IAGGC,EAAetB,cAAauB,GACb,SAAfA,EACKxB,IAEFwB,EACN,CAACxB,IAGJnD,YAAU,KACR,MAAM0D,EAAOpD,SAASqD,gBAGtBD,EAAKE,UAAUC,IAAI,kBAGnB,MAAMe,EAAwB,KAEH,CACvB,oFACA,6EACA,6EACA,gEACA,kEACA,8DACA,2DAGeT,QAAQU,IACvB,MAAMC,EAAcxE,SAASyE,cAAc,OAC3CD,EAAYnE,MAAMqB,SAAW,WAC7B8C,EAAYnE,MAAMqE,WAAa,SAC/BF,EAAYnE,MAAMsE,cAAgB,OAClCH,EAAYnE,MAAMsB,IAAM,UACxB6C,EAAYvF,UAAYsF,EACxBvE,SAAS0D,KAAKkB,YAAYJ,GAG1BpB,EAAKE,UAAUG,OAAO,QACtB,MAAMoB,EAAa9B,OAAOgB,iBAAiBS,GAC3CK,EAAWb,gBACXa,EAAWZ,MACXY,EAAWX,YACXW,EAAWC,UACXD,EAAWE,gBACXF,EAAWG,eACXH,EAAWI,OACXJ,EAAWK,WACXL,EAAW3D,OACX2D,EAAW5D,KAGXmC,EAAKE,UAAUC,IAAI,QACnB,MAAM4B,EAAYpC,OAAOgB,iBAAiBS,GAC1CW,EAAUnB,gBACVmB,EAAUlB,MACVkB,EAAUjB,YACViB,EAAUL,UACVK,EAAUJ,gBACVI,EAAUH,eACVG,EAAUF,OACVE,EAAUD,WACVC,EAAUjE,OACViE,EAAUlE,KAGVjB,SAAS0D,KAAK0B,YAAYZ,KAI5BpB,EAAKE,UAAUG,OAAO,QACtBV,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,sBAC/CtC,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,yBAC/CtC,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,qBAE/CjC,EAAKE,UAAUC,IAAI,QACnBR,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,sBAC/CtC,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,yBAC/CtC,OAAOgB,iBAAiBX,GAAMiC,iBAAiB,sBAIjDf,IAGAd,WAAW,KACTc,IAEAd,WAAW,KACT,MACM8B,EADcC,aAAaC,QAAQ,yBACL,OAC9BC,EAAuBrB,EAAakB,GAGb,SAAzBG,EACFrC,EAAKE,UAAUC,IAAI,QAEnBH,EAAKE,UAAUG,OAAO,QAGxBjB,EAAc8C,GACd5C,EAAiB+C,GAGjBjC,WAAW,KACTJ,EAAKE,UAAUG,OAAO,mBACrB,MACF,MACF,MACF,CAACW,IAGJ1E,YAAU,KACR,MAAMgG,EAAa3C,OAAOC,WAAW,gCAC/B2C,EAAgBC,IACpB,MAAMC,EAAcD,EAAE3C,QAAU,OAAS,QAG3B,SAAVV,IACFG,EAAiBmD,GACjB3C,EAAW2C,KAKf,OADAH,EAAWzF,iBAAiB,SAAU0F,GAC/B,IAAMD,EAAWxF,oBAAoB,SAAUyF,IACrD,CAACpD,EAAOW,IAEX,MAAM4C,EAAWhD,cAAaiD,IAC5B,MAAM5C,EAAmBiB,EAAa2B,GAEtCvD,EAAcuD,GACdrD,EAAiBS,GACjBoC,aAAaS,QAAQ,uBAAwBD,GAC7C7C,EAAWC,IACV,CAACiB,EAAclB,IAEZ+C,EAAcnD,cAAY,KAI5BgD,EAHY,SAAVvD,EAEiC,UAAlBE,EAA4B,OAAS,QAI3B,UAAVF,EAAoB,OAAS,UAG/C,CAACA,EAAOE,EAAeqD,IAEpBhH,EAA0B,CAC9ByD,QACAE,gBACAwD,cACAH,WACAnD,mBAGF,OACEnC,MAAC4B,EAAa8D,SAAb,CAAsBpH,QACpByB,cC7JM4F,EAAW,KACtB,MAAMC,EAAUC,aAAWjE,GAG3B,QAAgB,IAAZgE,EACF,MAAM,IAAIE,MAAM,6GAGlB,OAAOF,GC7DHG,EAA0C,EAAGtH,YAAY,GAAIuH,OAAO,SACxE,MAAM/D,cAAEA,EAAAqD,SAAeA,EAAAnD,gBAAUA,GAAoBwD,IAQ/CM,EANc,CAClBC,GAAI,UACJC,GAAI,UACJC,GAAI,WAGuBJ,GAE7B,OACEhG,MAAC,UACCI,QAAS,IAAMkF,EAA2B,UAAlBrD,EAA4B,OAAS,SAC7DoE,SAAUlE,EACV1D,UAAW,sTAOP0D,EAAkB,4BAA8B,eAChD1D,YAEJoB,MAAO,CACLyG,WAAY,4EACZC,OAAQ,oCACR/B,eAAgB,YAChBgC,qBAAsB,YACtBvF,OAAQ,MAEVwF,MAAOtE,EAAkB,qBAA0C,UAAlBF,EAA4B,sBAAwB,uBACrG,aAAYE,EAAkB,qBAA0C,UAAlBF,EAA4B,sBAAwB,uBAI1GlC,SAAAC,MAAC,OAAIvB,UAAU,iDACZsB,SAAAoC,EAECxC,OAAC,OAAIlB,UAAU,WACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,8EACfuB,MAAC,OAAIvB,UAAU,sHAGjBkB,OAAA+G,WAAA,CACE3G,SAAA,CAAAC,MAAC,OAAIvB,UAAW,wEAEM,UAAlBwD,EAA4B,uBAAyB,gDAEvDlC,SAAAC,MAAC,OACCvB,UAAW,GAAGwH,mBACdpG,MAAO,CAAE4D,MAAO,6BAChBhD,KAAK,OACLC,OAAO,eACPC,QAAQ,YAERZ,SAAAC,MAAC,QACCY,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,8FAKRf,MAAC,OAAIvB,UAAW,wEAEM,SAAlBwD,EAA2B,uBAAyB,gDAEtDlC,SAAAC,MAAC,OACCvB,UAAW,GAAGwH,mBACdpG,MAAO,CAAE4D,MAAO,6BAChBhD,KAAK,OACLC,OAAO,eACPC,QAAQ,YAERZ,SAAAC,MAAC,QACCY,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,sKCtEP4F,EAAoBC,IAC/B,MAAMC,EAAmB,GAGzB,OAAKD,GAQDA,EAASrF,OA9BF,GA+BTsF,EAAOC,KAAK,+CAEVF,EAASrF,OA5BF,KA6BTsF,EAAOC,KAAK,iDAI0B,QAAQC,KAAKH,IACnDC,EAAOC,KAAK,uDAE0B,QAAQC,KAAKH,IACnDC,EAAOC,KAAK,uDAEwB,KAAKC,KAAKH,IAC9CC,EAAOC,KAAK,6CAEwB,yBAAyBC,KAAKH,IAClEC,EAAOC,KAAK,wDAIV,YAAYC,KAAKH,IACnBC,EAAOC,KAAK,kEAEV,+BAA+BC,KAAKH,IACtCC,EAAOC,KAAK,sCAGP,CACLE,QAA2B,IAAlBH,EAAOtF,OAChBsF,WAtCO,CACLG,SAAS,EACTH,OAAQ,CAAC,0BC1BFI,EAAoB,CAC/B,CACEC,GAAI,UACJC,MAAO,4BACPC,KAAM,uBACNpG,KAAM,QACNqG,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,UACJC,MAAO,yBACPC,KAAM,gBACNpG,KAAM,iBACNuG,YAAa,CAAC,YAAa,YAC3BF,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,UACJC,MAAO,yBACPC,KAAM,mBACNpG,KAAM,iBACNuG,YAAa,CAAC,eACdF,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,WACJC,MAAO,2BACPC,KAAM,WACNpG,KAAM,eACNwG,WAAY,YACZH,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,WACJC,MAAO,0BACPC,KAAM,sBACNpG,KAAM,eACNwG,WAAY,WACZH,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,WACJC,MAAO,2BACPC,KAAM,gBACNpG,KAAM,eACNwG,WAAY,cACZH,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,WACJC,MAAO,2BACPC,KAAM,iBACNpG,KAAM,eACNwG,WAAY,WACZH,UAAW,uBACXC,UAAW,wBAEb,CACEJ,GAAI,UACJC,MAAO,uBACPC,KAAM,QACNpG,KAAM,QACNqG,UAAW,uBACXC,UAAW,yBAmGFG,EAAmB,CAC9BC,MAAO,CACLjB,MAAO,uBACPkB,YAAa,yDACbC,YAAa,CAAC,qBAAsB,eAAgB,yBAEtDC,eAAgB,CACdpB,MAAO,iBACPkB,YAAa,sDACbC,YAAa,CAAC,yBAA0B,yBAA0B,2BAGpEE,aAAc,CACZrB,MAAO,iBACPkB,YAAa,iDACbC,YAAa,CAAC,mBAAoB,mBAAoB,yBC7H7CG,EAAe,CAC1BC,EACApC,KAEAqC,EAAiBC,IACXtC,GACFsC,EAAMC,UAAUvC,GAElBwC,EAAwBJ,MAgCfK,EAAgB,CAC3BC,EACAC,EACAC,KASAC,EAP+B,CAC7BH,UACAC,SAAUA,GAAY,UACtBG,MAAO,OACPF,KAAMA,GAAQ,MC0HLG,EAAS,IAhKtB,MAEUC,OAAQ,EAWR,aAAAC,CAAcH,EAAiBJ,EAAiBjK,GACtD,MAAMyK,GAAA,IAAgBC,MAAOC,cACvBpD,EAAUvH,GAASuH,QAAU,IAAIvH,EAAQuH,WAAa,GAC5D,MAAO,GAAGkD,KAAaJ,EAAMO,iBAAiBrD,KAAW0C,GAC3D,CAUQ,GAAAY,CAAIR,EAAiBJ,EAAiBjK,GAE5C,GAAK8K,KAAKP,MAYV,OAFyBO,KAAKN,cAAcH,EAAOJ,EAASjK,GAEpDqK,GACN,IAAK,OAEH,MACF,IAAK,OAGHL,EAAcC,EAASjK,GAASuH,QAASvH,GAASmK,MAClD,MACF,IAAK,QAEHW,KAAKC,sBAAsBd,EAASjK,GAASmK,UAtBjC,UAAVE,EACFS,KAAKC,sBAAsBd,EAASjK,GAASmK,MAG7CH,EAAcC,EAASjK,GAASuH,QAASvH,GAASmK,KAqBxD,CAUQ,qBAAAY,CAAsBd,EAAiBE,GAEzCA,aAAgB1C,MAClBiC,EAAaS,EAAM,CAAEF,YAErBP,EAAa,IAAIjC,MAAMwC,GAAU,CAAEE,QAUvC,CAkBA,IAAAa,CAAKf,EAAiBjK,GACpB8K,KAAKD,IAAI,OAAQZ,EAASjK,EAC5B,CAkBA,IAAAiL,CAAKhB,EAAiBjK,GACpB8K,KAAKD,IAAI,OAAQZ,EAASjK,EAC5B,CAmBA,KAAA2J,CAAMM,EAAiBjK,GACrB8K,KAAKD,IAAI,QAASZ,EAASjK,EAC7B,GC/CWkL,EAAwB,CACnC,CACErC,GAAI,YACJE,KAAM,yBACNoC,SAAU,WACVvJ,KAAM,WAER,CACEiH,GAAI,WACJE,KAAM,6BACNoC,SAAU,UACVvJ,KAAM,aAER,CACEiH,GAAI,cACJE,KAAM,4BACNoC,SAAU,WACVvJ,KAAM,aAER,CACEiH,GAAI,WACJE,KAAM,yBACNoC,SAAU,YACVvJ,KAAM,WAIGwJ,EAAiB,CAAC,KAAM,KAAM,KAAM,MAmB3CC,EAAoB,CAACC,EAAmBC,EAA2B,MACvE,MAAMC,EAAYF,GAAaC,EAAmB,KAClD,OAAOE,KAAKC,MAAMJ,EAAoC,GAAvBG,KAAKE,SAAW,IAAWH,IAI/CI,EAAqC,GAElDV,EAAUlG,QAAQ6G,IAChBT,EAAepG,QAAQ8G,IACrB,MAKMC,GAL0B,OAATD,EAAgB,EAAa,OAATA,EAAgB,IAAgB,OAATA,EAAgB,IAAO,MAC5C,YAAlBD,EAASjK,KAAqB,EACZ,cAAlBiK,EAASjK,KAAuB,GACd,cAAlBiK,EAASjK,KAAuB,GAAM,IAI3DoK,EAA6B,CACjC7C,WAAY0C,EAAShD,GACrBiD,OACAG,YAAa,IAAIvB,KAAKoB,EAAM,GAAI,IAAII,mBAAmB,QAAS,CAC9DJ,KAAM,UACNK,MAAO,OACPC,IAAK,YAEPC,iBAAkB,CAChB,CACExD,GAAI,gBACJT,MAAO,gBACPnI,MAAOoL,EAAkB,MAAWU,GACpCO,OAAQjB,EAAkB,IAAK,IAC/BkB,WAAYd,KAAKE,SAAW,GAAM,WAAa,WAC/Ca,OAAQ,gBACRC,OAAQ,YAEV,CACE5D,GAAI,aACJT,MAAO,aACPnI,MAAOoL,EAAkB,KAAUU,GACnCO,OAAQjB,EAAkB,KAAM,IAChCkB,WAAYd,KAAKE,SAAW,IAAO,WAAa,WAChDa,OAAQ,gBACRC,OAAQ,YAEV,CACE5D,GAAI,gBACJT,MAAO,gBACPnI,MAAOoL,EAAkB,KAAM,IAC/BiB,OAAQjB,EAAkB,IAAK,IAC/BkB,WAAYd,KAAKE,SAAW,GAAM,WAAa,WAC/Ca,OAAQ,gBACRC,OAAQ,cAEV,CACE5D,GAAI,qBACJT,MAAO,qBACPnI,MAAOoL,EAAkB,KAAUU,GACnCO,OAAQjB,EAAkB,IAAK,IAC/BkB,WAAYd,KAAKE,SAAW,GAAM,WAAa,WAC/Ca,OAAQ,gBACRC,OAAQ,aAGZC,YAAa,CACX,CAAEP,MAAO,MAAOQ,QAAStB,EAAkB,KAAUU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACpK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,KAAUU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACpK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACtK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,KAAUU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACpK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACtK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,KAAUU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACpK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACtK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACrK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACtK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,KAAUU,GAAiBa,SAAUvB,EAAkB,KAAUU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACpK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,IACtK,CAAEI,MAAO,MAAOQ,QAAStB,EAAkB,MAAWU,GAAiBa,SAAUvB,EAAkB,MAAWU,GAAiBc,UAAWxB,EAAkB,KAAUU,KAExKe,yBACE,MAAMC,EAAmB1B,EAAkB,KAAUU,GAC/CiB,EAAoB3B,EAAkB,KAAUU,GAChDkB,EAAkBF,EAAmBC,EAE3C,MAAO,CACP,CACEE,WAAY,YACZP,QAASI,EACTH,SAAUI,EACVG,OAAQF,EACRG,aAAeH,EAAkBF,EAAoB,KACvD,MAEE,MAAMM,EAAiBhC,EAAkB,KAAUU,GAC7CuB,EAAkBjC,EAAkB,KAAUU,GAC9CwB,EAAgBF,EAAiBC,EAEvC,MAAO,CACLJ,WAAY,UACZP,QAASU,EACTT,SAAUU,EACVH,OAAQI,EACRH,aAAeG,EAAgBF,EAAkB,IAErD,EAbA,GAaG,MAED,MAAMG,EAAoBnC,EAAkB,KAAUU,GAChD0B,EAAqBpC,EAAkB,KAAUU,GACjD2B,EAAmBF,EAAoBC,EAE7C,MAAO,CACLP,WAAY,aACZP,QAASa,EACTZ,SAAUa,EACVN,OAAQO,EACRN,aAAeM,EAAmBF,EAAqB,IAE3D,EAbG,GAaA,MAED,MAAMG,EAActC,EAAkB,KAAUU,GAC1C6B,EAAevC,EAAkB,KAAUU,GAC3C8B,EAAaF,EAAcC,EAEjC,MAAO,CACLV,WAA8B,cAAlBrB,EAASjK,KAAuB,aAAe,WAC3D+K,QAASgB,EACTf,SAAUgB,EACVT,OAAQU,EACRT,aAAeS,EAAaF,EAAe,IAE/C,EAbG,GAaA,MAED,MAAMG,EAAezC,EAAkB,KAAUU,GAC3CgC,EAAgB1C,EAAkB,IAASU,GAC3CiC,EAAcF,EAAeC,EAEnC,MAAO,CACLb,WAA8B,WAAlBrB,EAASjK,KAAoB,SAAW,cACpD+K,QAASmB,EACTlB,SAAUmB,EACVZ,OAAQa,EACRZ,aAAeY,EAAcF,EAAgB,IAEjD,EAbG,GAcF,KACHG,eAAgB,CACdC,cAAe7C,EAAkB,MAAQU,EAAgB,IACzDoC,WAAY9C,EAAkB,KAAOU,EAAgB,IACrDqC,YAAa/C,EAAkB,MAAQU,EAAgB,IACvDsC,gBAAiBhD,EAAkB,KAAOU,EAAgB,IAC1DuC,oBAAqBjD,EAAkB,GAAU,IAAM,GACvDkD,cAAelD,EAAkB,KAAM,KAEzCmD,uBACE,MAAMC,EAAiBpD,EAAkB,KAAUU,GAC7C2C,EAAiBrD,EAAkB,KAAUU,GAC7C4C,EAAkBtD,EAAkB,KAAUU,GAC9C6C,EAAkBvD,EAAkB,IAASU,GAC7C8C,EAAoBxD,EAAkB,IAASU,GAC/C+C,EAAczD,EAAkB,IAASU,GAEzCgD,EAAcN,EAAiBC,EAAiBC,EAAkBC,EAAkBC,EAAoBC,EAE9G,MAAO,CACL,CAAE5E,SAAU,sBAAuB8E,OAAQP,EAAgBQ,WAAYxD,KAAKC,MAAO+C,EAAiBM,EAAe,IAAM,IAAM,GAAI3J,MAAO,WAC1I,CAAE8E,SAAU,mBAAoB8E,OAAQN,EAAgBO,WAAYxD,KAAKC,MAAOgD,EAAiBK,EAAe,IAAM,IAAM,GAAI3J,MAAO,WACvI,CAAE8E,SAAU,YAAa8E,OAAQL,EAAiBM,WAAYxD,KAAKC,MAAOiD,EAAkBI,EAAe,IAAM,IAAM,GAAI3J,MAAO,WAClI,CAAE8E,SAAU,YAAa8E,OAAQJ,EAAiBK,WAAYxD,KAAKC,MAAOkD,EAAkBG,EAAe,IAAM,IAAM,GAAI3J,MAAO,WAClI,CAAE8E,SAAU,cAAe8E,OAAQH,EAAmBI,WAAYxD,KAAKC,MAAOmD,EAAoBE,EAAe,IAAM,IAAM,GAAI3J,MAAO,WACxI,CAAE8E,SAAU,QAAS8E,OAAQF,EAAaG,WAAYxD,KAAKC,MAAOoD,EAAcC,EAAe,IAAM,IAAM,GAAI3J,MAAO,WAE1H,KACA8J,aAAc,CACZ,CACEC,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,KAAUU,GAC/CsD,kBAAmBhE,GAAkB,IAAUU,GAC/CuD,kBAAmBjE,GAAkB,IAAUU,GAC/CwD,YAAalE,EAAkB,IAAUU,IAE3C,CACEoD,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,MAAUU,GAC/CsD,kBAAmBhE,GAAkB,IAAUU,GAC/CuD,kBAAmBjE,GAAkB,IAAUU,GAC/CwD,YAAalE,EAAkB,MAAUU,IAE3C,CACEoD,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,KAAUU,GAC/CsD,kBAAmBhE,GAAkB,KAAWU,GAChDuD,kBAAmBjE,GAAkB,IAAUU,GAC/CwD,YAAalE,EAAkB,IAASU,IAE1C,CACEoD,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,KAAUU,GAC/CsD,kBAAmBhE,GAAkB,IAAUU,GAC/CuD,kBAAmBjE,GAAkB,KAAUU,GAC/CwD,YAAalE,EAAkB,MAAUU,IAE3C,CACEoD,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,KAAUU,GAC/CsD,kBAAmBhE,GAAkB,KAAUU,GAC/CuD,kBAAmBjE,GAAkB,IAAUU,GAC/CwD,YAAalE,EAAkB,MAAUU,IAE3C,CACEoD,KAAM,GAAGrD,OACTsD,kBAAmB/D,EAAkB,MAAUU,GAC/CsD,kBAAmBhE,GAAkB,IAAUU,GAC/CuD,kBAAmBjE,GAAkB,KAAUU,GAC/CwD,YAAalE,EAAkB,KAAUU,MAK/CH,EAAmBnD,KAAKuD,OAyBrB,MC/bMwD,EAAchM,qBAA2C,GAiCzDiM,EAA4C,EAAG/N,eAE1D,MAAOgO,EAAMC,GAAWpP,WAAsB,OACvCqP,EAAWC,GAAgBtP,YAAS,GAM3CM,YAAU,KACR,MAAMiP,EAAapJ,aAAaC,QAAQ,uBACxC,GAAImJ,EACF,IACE,MAAMC,EAAaC,KAAKC,MAAMH,GAE1BC,GAAoC,iBAAfA,GAA2B,OAAQA,GAAc,UAAWA,EACnFJ,EAAQI,IAERzF,EAAOW,KAAK,iDAAkD,CAAE1D,QAAS,gBACzEb,aAAawJ,WAAW,uBAE5B,OAASvG,GACPW,EAAOX,MAAM,mCAAoC,CAAEpC,QAAS,cAAe4C,KAAMR,IACjFjD,aAAawJ,WAAW,sBAC1B,CAEFL,GAAa,IACZ,IASH,MAyFM5P,EAAyB,CAC7ByP,OACAS,kBAAmBT,EACnBE,YACAQ,OA7FaC,MAAOvH,EAAeP,KACnCsH,GAAa,GACb,IACE,MAAMS,OJAFD,OAAOvH,EAAeP,WAEtB,IAAIgI,QAAQC,GAAW7L,WAAW6L,EAAS,MAGjD,MAAMC,EAAqBnI,EAAiBC,GAC5C,IAAKkI,EAAmB9H,QACtB,MAAM,IAAIlB,MAAMgJ,EAAmBjI,OAAO,IAG5C,MAAMkH,EAAO9G,EAAUjI,KAAK+P,GAAKA,EAAE5H,QAAUA,GAC7C,IAAK4G,EACH,MAAM,IAAIjI,MAAM,4CAIlB,MAAMkJ,EAAa,kBAAkB7H,IAC/B8H,EAAWC,SAASnK,aAAaC,QAAQgK,IAAe,KAC9D,GAAIC,GAAY,EAAG,CACjB,MAAME,EAAcpK,aAAaC,QAAQ,WAAWmC,KACpD,GAAIgI,GAAepG,KAAKqG,MAAQF,SAASC,GAAe,IACtD,MAAM,IAAIrJ,MAAM,wFAGhBf,aAAawJ,WAAWS,GACxBjK,aAAawJ,WAAW,WAAWpH,IAEvC,CAWA,IAPsB,CACpB,eACA,eACA,iBACA,cAGiBkI,SAASzI,GAM1B,MAJA7B,aAAaS,QAAQwJ,GAAaC,EAAW,GAAGK,YAC5CL,EAAW,GAAK,GAClBlK,aAAaS,QAAQ,WAAW2B,IAAS4B,KAAKqG,MAAME,YAEhD,IAAIxJ,MAAM,sBASlB,OALAf,aAAawJ,WAAWS,GACxBjK,aAAawJ,WAAW,WAAWpH,KAGnC4G,EAAKzG,WAAA,IAAgByB,MAAOC,cACrB+E,GIrDkBwB,CAAmBpI,EAAOP,GACjD,IAAK+H,IAAaA,EAASzH,KAAOyH,EAASxH,MACzC,MAAM,IAAIrB,MAAM,0DAElBkI,EAAQW,GACR5J,aAAaS,QAAQ,sBAAuB6I,KAAKmB,UAAUb,GAC7D,OAAS3G,GAEP,MADAW,EAAOX,MAAM,iBAAkB,CAAEpC,QAAS,cAAe4C,KAAMR,IACzDA,CACR,SACEkG,GAAa,EACf,GAgFAuB,OAvEaf,MAAOC,IACpBT,GAAa,GACb,IACE,MAAMwB,OJiCFhB,OAAOC,IAab,SAJM,IAAIC,QAAQC,GAAW7L,WAAW6L,EAAS,OAG5B5H,EAAUjI,QAAU+P,EAAE5H,QAAUwH,EAASxH,OAE5D,MAAM,IAAIrB,MAAM,uCAIlB,MAAM4J,EAAgB,CACpBxI,GAAI,QAAQ6B,KAAKqG,QACjBjI,MAAOwH,EAASxH,MAChBC,KAAMuH,EAASvH,KACfpG,KAAM2N,EAAS3N,KACfqG,WAAA,IAAe0B,MAAOC,cACtB1B,WAAA,IAAeyB,MAAOC,iBAClB2F,EAASnH,YAAc,CAAEA,WAAYmH,EAASnH,eAC9CmH,EAASpH,aAAe,CAAEA,YAAaoH,EAASpH,cAMtD,OAFAN,EAAUH,KAAK4I,GAERA,GIjEiBH,CAAmBZ,GACzC,IAAKe,IAAYA,EAAQxI,KAAOwI,EAAQvI,MACtC,MAAM,IAAIrB,MAAM,wDAElBkI,EAAQ0B,GACR3K,aAAaS,QAAQ,sBAAuB6I,KAAKmB,UAAUE,GAC7D,OAAS1H,GAEP,MADAW,EAAOX,MAAM,iBAAkB,CAAEpC,QAAS,cAAe4C,KAAMR,IACzDA,CACR,SACEkG,GAAa,EACf,GA0DAyB,QAnDc,KACdhH,EAAOU,KAAK,kBAAmB,CAAEzD,QAAS,cAAe4C,KAAM,CAAEoH,OAAQ7B,GAAM7G,MAC/E8G,EAAQ,MACRjJ,aAAawJ,WAAW,wBAiDxBsB,kBAzCyBrI,IACzB,IAAKuG,EAAM,OAAO,EAElB,OAAQA,EAAK/M,MACX,IAAK,QACH,OAAO,EACT,IAAK,iBACH,OAAO+M,EAAKxG,aAAa8H,SAAS7H,KAAe,EACnD,IAAK,eACH,OAAOuG,EAAKvG,aAAeA,EAC7B,QACE,OAAO,IA+BXsI,uBAvB6B,KAC7B,IAAK/B,EAAM,MAAO,GAElB,OAAQA,EAAK/M,MACX,IAAK,QACH,OAAOuI,EAAU/H,IAAIuO,GAAKA,EAAE7I,IAC9B,IAAK,iBACH,OAAO6G,EAAKxG,aAAe,GAC7B,IAAK,eACH,OAAOwG,EAAKvG,WAAa,CAACuG,EAAKvG,YAAc,GAC/C,QACE,MAAO,MAeb,OACExH,MAAC6N,EAAYnI,SAAZ,CAAqBpH,QACnByB,cCxIMiQ,EAAU,KACrB,MAAMpK,EAAUC,aAAWgI,GAC3B,QAAgB,IAAZjI,EACF,MAAM,IAAIE,MAAM,+CAElB,OAAOF,GCpCT,SAASqK,EAAcC,GACrB,MAAMC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGF,IAAIC,EAAO,EACX,QAASC,EAAI,EAAGA,EAAIH,EAAI3O,OAAQ8O,IAE9BD,GAASA,GAAQ,GAAKA,EADTF,EAAII,WAAWD,GAE5BD,GAAcA,EAIhB,OAAOD,EADYrG,KAAKyG,IAAIH,GAAQD,EAAO5O,SACd,SAC/B,CAsBO,SAASiP,EAAoBpJ,EAAcpB,EAAe,IAC/D,MAAMyK,EAlBR,SAAqBrJ,GACnB,IAAKA,EAAM,MAAO,IAElB,MAAMsJ,EAAQtJ,EAAKuJ,OAAOC,MAAM,OAAOnM,OAAOoM,GAAQA,EAAKtP,OAAS,GACpE,GAAqB,IAAjBmP,EAAMnP,OAAc,MAAO,IAC/B,GAAqB,IAAjBmP,EAAMnP,OACR,OAAOmP,EAAM,GAAII,OAAO,GAAG7H,cAG7B,MAAM8H,EAAYL,EAAM,GAClBM,EAAWN,EAAMA,EAAMnP,OAAS,GACtC,OAAQwP,EAAUD,OAAO,GAAKE,EAASF,OAAO,IAAI7H,aACpD,CAMmBgI,CAAY7J,GAOvB8J,EAAM,qBACIlL,cAAiBA,mBAAsBA,KAAQA,8DAC5CA,cAAiBA,YARZiK,EAAc7I,WAQ4C,GAAPpB,wOAJ1D8D,KAAKC,MAAa,GAAP/D,uDAepByK,mCAGNE,OAEF,MAAO,6BAA6BQ,KAAKD,IAC3C,CAMO,SAASE,EAAahK,EAAcpB,EAAe,GAAI3H,EAG1D,IAEF,GAAIA,EAAQgT,WAAajK,EACvB,OAAOoJ,EAAoBpJ,EAAMpB,GAInC,MAAMxC,EAAkBnF,EAAQmF,iBAAmByM,EAAc7I,GAAMkK,QAAQ,IAAK,IAGpF,MAAO,oCAFaC,mBAAmBnK,WAEwBpB,gBAAmBxC,qCACpF,CClGA,MAAMgO,EAAsBpK,IAC1B,MAAM+I,EAAS,CACb,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAIF,IAAIC,EAAO,EACX,QAASC,EAAI,EAAGA,EAAIjJ,EAAK7F,OAAQ8O,IAE/BD,GAASA,GAAQ,GAAKA,EADThJ,EAAKkJ,WAAWD,GAE7BD,GAAcA,EAIhB,OAAOD,EADYrG,KAAKyG,IAAIH,GAAQD,EAAO5O,SACd,UAYzBkQ,EAAgC,EACpClI,YACAmI,qBACAC,eACAlI,iBACAmI,mBACAC,mBAEA,MAAM9D,KAAEA,EAAA4B,QAAMA,GAAYK,KACnB8B,EAAkBC,GAAuBnT,YAAS,IAClDoT,EAAgBC,GAAqBrT,YAAS,IAC9CsT,EAAkBC,GAAuBvT,YAAS,IAGlDwT,EAAiBC,GAAsBzT,WAAS8S,IAChDY,EAAWC,GAAgB3T,WAAS+S,GAG3CzS,YAAU,KACRmT,EAAmBX,IAClB,CAACA,IAEJxS,YAAU,KACRqT,EAAaZ,IACZ,CAACA,IAGJ,MAOMa,EAAmBJ,IAAoBV,GAAsBY,IAAcX,EAGjFzS,YAAU,KAENM,SAAS0D,KAAKrD,MAAMC,SADlBgS,EAC6B,SAEA,QAI1B,KACLtS,SAAS0D,KAAKrD,MAAMC,SAAW,UAEhC,CAACgS,IAGJ5S,YAAU,KACR,MAAMC,EAAsBC,IAC1B,MAAMG,EAASH,EAAMG,OACjByS,IAAmBzS,EAAOkT,QAAQ,qBACpCR,GAAkB,GAEhBC,IAAqB3S,EAAOkT,QAAQ,uBACtCN,GAAoB,IAQxB,OAJIH,GAAkBE,IACpB1S,SAASC,iBAAiB,YAAaN,GAGlC,KACLK,SAASE,oBAAoB,YAAaP,KAE3C,CAAC6S,EAAgBE,IACpB,MAAMQ,EAAkBnJ,EAAU/H,IAAI0I,IAAA,CACpC5L,MAAO4L,EAAShD,GAChB5G,MAAO4J,EAAS9C,KAChB7G,SAAU,GAAG2J,EAASjK,UAAUiK,EAASV,cAGrCmJ,EAAclJ,EAAejI,IAAI2I,IAAA,CACrC7L,MAAO6L,EAAKmF,WACZhP,MAAO6J,EAAKmF,cAId,OACE3P,OAAC,UACClB,UAAU,qDAEVsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,0BAA0BoB,MAAO,CAAE+S,WAAY,EAAGC,cAAe,GAC9E9S,SAAAJ,OAAC,OAAIlB,UAAU,iEAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,wCACbsB,SAAAJ,OAAC,OAAIlB,UAAU,kCAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,yBACbsB,SAAAC,MAAC,OAAIvB,UAAU,oJACbsB,SAAAJ,OAAC,OAAIlB,UAAU,uCAAuCgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9FZ,SAAA,CAAAC,MAAC,QACCD,SAAAJ,OAAC,kBAAeuH,GAAG,gBAAgB4L,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OAC9DlT,SAAA,CAAAC,MAAC,QAAKkT,OAAO,KAAKC,UAAU,YAC5BnT,MAAC,QAAKkT,OAAO,MAAMC,UAAU,YAC7BnT,MAAC,QAAKkT,OAAO,OAAOC,UAAU,iBAGlCnT,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gNAK3EpB,OAAC,OAAIlB,UAAU,UACbsB,SAAA,CAAAC,MAAC,MAAGvB,UAAU,qCAAqCoB,MAAO,CAAE4D,MAAO,4BAA6BpD,aAAc,IAAKsB,SAAU,kBAAoB5B,SAAA,qBAGjJC,MAAC,MAAGvB,UAAU,qCAAqCoB,MAAO,CAAE4D,MAAO,4BAA6BpD,aAAc,KAAON,SAAA,iCAGrHC,MAAC,KAAEvB,UAAU,wCAAwCoB,MAAO,CAAE4D,MAAO,0BAA2BpD,aAAc,KAAON,SAAA,qDAQ3HJ,OAAC,OAAIlB,UAAU,kDAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,wCACbsB,gBAAC,OAAItB,UAAU,2DAA2DoB,MAAO,CAC/EyG,WAAY,4BACZC,OAAQ,qCAERxG,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,4BACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUoB,MAAO,CAAE4D,MAAO,+BAAiChD,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAClHZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sJAEtE,QAAKtC,UAAU,sBAAsBoB,MAAO,CAAE4D,MAAO,+BACnD1D,SAAAwJ,EAAUvK,KAAK+Q,GAAKA,EAAE7I,KAAOwK,IAAqBtK,MAAQ,mBAG/DpH,MAAC,OAAIvB,UAAU,WAAWoB,MAAO,CAAE2D,gBAAiB,6BACpD7D,OAAC,OAAIlB,UAAU,4BACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUoB,MAAO,CAAE4D,MAAO,+BAAiChD,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAClHZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,6FAEvEf,MAAC,QAAKvB,UAAU,sBAAsBoB,MAAO,CAAE4D,MAAO,+BACnD1D,SAAA4R,YAOThS,OAAC,OAAIlB,UAAU,wCAAwC,oBAAgB,EAErEsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,WACbsB,SAAA,CAAAJ,OAAC,UACCS,QAAS,IAAM+R,GAAqBD,GACpCzT,UAAU,wDACV,aAAW,oBAEXsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8JAEvEf,MAAC,QAAKvB,UAAU,mBAAmBsB,SAAA,YACnCC,MAAC,OAAIvB,UAAU,+BAA+BoB,MAAO,CACnDuT,UAAWlB,EAAmB,iBAAmB,gBAChDzR,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC3CZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wBAKxEmR,GACCvS,OAAC,OACClB,UAAU,wFACVoB,MAAO,CACL2E,eAAgB,aAChBgC,qBAAsB,aACtBD,OAAQ,oCACRrG,aAAc,mBACdmT,SAAU,SAIZtT,SAAA,CAAAC,MAAC,OAAIvB,UAAU,qBAAqBoB,MAAO,CAAE6D,YAAa,2BACxD3D,SAAAJ,OAAC,OAAIlB,UAAU,0BACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUoB,MAAO,CAAE4D,MAAO,+BAAiChD,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAClHZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8JAEvEf,MAAC,QAAKvB,UAAU,sBAAsBoB,MAAO,CAAE4D,MAAO,6BAA+B1D,SAAA,qBAOzFJ,OAAC,OAAIlB,UAAU,gBACbsB,SAAA,CAAAJ,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAMvB,UAAU,2BAA2BoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,aAG7FC,MAAC5B,EAAA,CACCC,QAASqU,EACTpU,MAAO8T,EACP7T,SAAU8T,EACV7T,YAAY,kBACZC,UAAU,qBAIb,OACCsB,SAAA,CAAAC,MAAC,SAAMvB,UAAU,2BAA2BoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,SAG7FC,MAAC5B,EAAA,CACCC,QAASsU,EACTrU,MAAOgU,EAAUhD,WACjB/Q,SAAWD,GAAUiU,EAAarD,SAAS5Q,IAC3CE,YAAY,cACZC,UAAU,cAKduB,MAAC,OAAIvB,UAAU,gBAAgBoB,MAAO,CAAE6D,YAAa,2BACnD3D,SAAAJ,OAAC,UACCS,QArMH,KACnBwR,EAAiBQ,GACjBP,EAAaS,GACbH,GAAoB,IAmME9L,UAAWmM,EACX/T,UAAW,mBAAmB+T,EAAmB,cAAgB,uDACjE,aAAW,yBAEXzS,SAAA,CAAAC,MAAC,OAAIvB,UAAU,eAAegC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACtEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qBACjE,8BAUpBpB,OAAC,UACClB,UAAU,8BACV,aAAW,yCAEXsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,eAAeE,QAAQ,YACnDZ,SAAAC,MAAC,QAAKe,EAAE,41BAEVf,MAAC,QAAKvB,UAAU,wBAAwBsB,SAAA,4BAK1CJ,OAAC,OAAIlB,UAAU,wCACbsB,SAAA,CAAAC,MAAC+F,EAAA,IAEAgI,GACCpO,OAAC,OAAIlB,UAAU,WAAW,kBAAc,EACtCsB,SAAA,CAAAJ,OAAC,UACCS,QAAS,IAAM6R,GAAmBD,GAClCvT,UAAU,wFACV,aAAW,YAEXsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,wEAAwEoB,MAAO,CAAE6D,YAAa,2BAC3G3D,SAAAC,MAAC,OACCsT,IAAKlC,EAAarD,EAAK3G,KAAM,GAAI,CAAE5D,gBAAiBgO,EAAmBzD,EAAK3G,QAC5EmM,IAAK,GAAGxF,EAAK3G,uBACboM,QAAQ,OACRC,QAAUrO,IAEOA,EAAE7F,OACV+T,IAAM9C,EAAoBzC,EAAK3G,KAAM,SAKlDpH,MAAC,OAAIvB,UAAU,+BAA+BoB,MAAO,CACnD4D,MAAO,8BACP2P,UAAWpB,EAAiB,iBAAmB,gBAC9CvR,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC3CZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wBAKxEiR,GACCrS,OAAC,OACClB,UAAU,yFACVoB,MAAO,CACL2E,eAAgB,aAChBgC,qBAAsB,aACtBD,OAAQ,oCACRrG,aAAc,oBAIhBH,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,uBAAuBoB,MAAO,CAAE6D,YAAa,2BAC1D3D,SAAA,CAAAC,MAAC,KAAEvB,UAAU,wCAAwCoB,MAAO,CAAE4D,MAAO,6BAClE1D,SAAAgO,EAAK3G,OAERpH,MAAC,KAAEvB,UAAU,4BAA4BoB,MAAO,CAAE4D,MAAO,2BACtD1D,WAAiBgO,EAAK/M,OAAOyF,OAASsH,EAAK/M,UAKhDrB,OAAC,OAAIlB,UAAU,OACbsB,SAAA,CAAAJ,OAAC,UACCS,QAAS,KACP6R,GAAkB,IAEpBxT,UAAU,kHACVoB,MAAO,CAAE4D,MAAO,6BAChB,aAAW,0BAEX1D,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sIACjE,mBAGRpB,OAAC,UACCS,QAAS,KACPuP,IACAsC,GAAkB,IAEpBxT,UAAU,kHACVoB,MAAO,CAAE4D,MAAO,6BAEhB1D,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gGACjE,6BAYtBpB,OAAC,OAAIlB,UAAU,kDACbsB,SAAA,CAAAC,MAAC+F,EAAA,CAAYC,KAAK,OAClBhG,MAAC,UACCI,QAAS,IAAM2R,GAAqBD,GACpCrT,UAAU,kIACV,aAAYqT,EAAmB,oBAAsB,mBACrDjS,MAAO,CACLyG,WAAY,4EACZC,OAAQ,oCACR/B,eAAgB,YAChBgC,qBAAsB,aAGxBzG,SAAAC,MAAC,OAAIvB,UAAU,4CAA4CoB,MAAO,CAChEuT,UAAWtB,EAAmB,gBAAkB,eAChDrO,MAAO,6BACNhD,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC1CZ,SAAA+R,EACC9R,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yBAErEf,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wCASjFpB,OAAC,OACClB,UAAW,0EACTqT,EAAmB,gBAAkB,oBAEvC5K,GAAG,cACHrH,MAAO,CACL6T,MAAO,QACPC,OAAQ,QACRrN,WAAY,qHACZ9B,eAAgB,aAChBgC,qBAAsB,aACtBtF,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPuS,OAAQ,EACR3S,OAAQ,MAIVlB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,yCAAyCoB,MAAO,CAAEgU,YAAa,iBAAkBC,aAAc,kBAE5G/T,SAAA,CAAAC,MAAC,OAAIvB,UAAU,wCACbsB,SAAAJ,OAAC,OAAIlB,UAAU,kCAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,yBACbsB,SAAAC,MAAC,OAAIvB,UAAU,oJACbsB,SAAAJ,OAAC,OAAIlB,UAAU,uCAAuCgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9FZ,SAAA,CAAAC,MAAC,QACCD,SAAAJ,OAAC,kBAAeuH,GAAG,yBAAyB4L,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OACvElT,SAAA,CAAAC,MAAC,QAAKkT,OAAO,KAAKC,UAAU,YAC5BnT,MAAC,QAAKkT,OAAO,MAAMC,UAAU,YAC7BnT,MAAC,QAAKkT,OAAO,OAAOC,UAAU,iBAGlCnT,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sNAM1E,OAAItC,UAAU,UACbsB,SAAAC,MAAC,MAAGvB,UAAU,qBAAqBoB,MAAO,CAAE4D,MAAO,4BAA6BpD,aAAc,IAAKsB,SAAU,kBAAoB5B,qCAQvIC,MAAC,UACCI,QAAS,IAAM2R,GAAoB,GACnCtT,UAAU,kIACV,aAAW,aAEXsB,SAAAC,MAAC,OAAIvB,UAAU,4CAA4CgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACnGZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gCAM3Ef,MAAC,OAAIvB,UAAU,8BAA8BoB,MAAO,CAAEgU,YAAa,iBAAkBC,aAAc,kBACjG/T,SAAAJ,OAAC,OAAIlB,UAAU,+CAEbsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,yBAAyBoB,MAAO,CAAE6D,YAAa,2BAC5D3D,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,mCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,WACbsB,SAAAC,MAAC,OAAIvB,UAAU,iEACbsB,SAAAC,MAAC,OAAIvB,UAAU,2CAA2CoB,MAAO,CAAE2D,gBAAiB,WAClFzD,SAAAC,MAAC,OACCsT,IAAKlC,EAAarD,GAAM3G,MAAQ,GAAI,GAAI,CAAE5D,gBAAiBgO,EAAmBzD,GAAM3G,MAAQ,MAC5FmM,IAAK,GAAGxF,GAAM3G,uBACdoM,QAAQ,OACR/U,UAAU,eACVgV,QAAUrO,IAEOA,EAAE7F,OACV+T,IAAM9C,EAAoBzC,GAAM3G,MAAQ,GAAI,aAM7DzH,OAAC,OAAIlB,UAAU,iBACbsB,SAAA,CAAAC,MAAC,MAAGvB,UAAU,6BAA6BoB,MAAO,CAAE4D,MAAO,6BAAgC1D,SAAAgO,GAAM3G,aAChG,KAAE3I,UAAU,0CACVsB,SAAAgO,GAAM/M,MAAQyG,EAAiBsG,EAAK/M,OAAOyF,OAASsH,GAAM/M,MAAMsQ,QAAQ,IAAK,aAMpF3R,OAAC,UACCS,QAASuP,EACTlR,UAAU,8EACV,aAAW,2BAEXsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,uEAAuEgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9HZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gGACjE,uBAMT,OAAItC,UAAU,YAEbsB,SAAAJ,OAAC,OAAIlB,UAAU,yBACbsB,SAAA,CAAAJ,OAAC,UACClB,UAAU,wEACV,aAAW,0BACX2B,QAAS,IAAM2R,GAAoB,GAEnChS,SAAA,CAAAC,MAAC,OAAIvB,UAAU,eAAegC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACtEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,sIACjE,mBAIZpB,OAAC,UACClB,UAAU,wEACV,aAAW,yCACX2B,QAAS,IAAM2R,GAAoB,GAEnChS,SAAA,CAAAC,MAAC,OAAIvB,UAAU,eAAegC,KAAK,eAAeE,QAAQ,YACxDZ,SAAAC,MAAC,QAAKe,EAAE,41BACJ,wCC9hBPgT,EAAkBzV,GACtB,IAAI0V,KAAKC,aAAa,QAAS,CACpCpU,MAAO,WACPqU,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBtJ,OAAOxM,GAQC+V,EAAoB/V,GACxB,GAAGA,EAAMgW,QAAQ,MAQbC,EAAgBjW,GACpB,IAAI0V,KAAKC,aAAa,SAASnJ,OAAOxM,GAgClCkW,EAAiB5J,GACN,aAAfA,EAA4B,IAAM,ICgR9B6J,EAAe,IA5GrB,MACGC,gBAER,WAAAC,GACExL,KAAKuL,gBAAkBvL,KAAKyL,wBAC5BpV,SAAS0D,KAAKkB,YAAY+E,KAAKuL,gBACjC,CAEQ,qBAAAE,GACN,MAAMC,EAAUrV,SAASyE,cAAc,OAevC,OAdA4Q,EAAQC,aAAa,YAAa,UAClCD,EAAQC,aAAa,cAAe,QACpCD,EAAQpW,UAAY,UACpBoW,EAAQhV,MAAMkV,QAAU,4TAWjBF,CACT,CAEA,QAAAG,CAAS1M,EAAiB2M,EAAmC,UAC3D9L,KAAKuL,gBAAgBI,aAAa,YAAaG,GAC/C9L,KAAKuL,gBAAgBQ,YAAc5M,EAGnCtF,WAAW,KACTmG,KAAKuL,gBAAgBQ,YAAc,IAClC,IACL,CAEA,kBAAAC,CAAmBC,EAAkBC,GACnClM,KAAK6L,SAAS,GAAGI,gBAAuBC,IAAY,SACtD,CAEA,aAAAC,CAActN,GACZmB,KAAK6L,SAAS,UAAUhN,IAAS,YACnC,CAEA,eAAAuN,CAAgBjN,GACda,KAAK6L,SAAS,YAAY1M,IAAW,SACvC,GC9KIkN,EAAwC,EAAGC,aAI/C,MAAMC,EAAc,CAACpX,EAAewM,KAClC,OAAQA,GACN,IAAK,WACH,OAAOiJ,EAAezV,GACxB,IAAK,aACH,OAAO+V,EAAiB/V,GAC1B,IAAK,SACH,OAAOiW,EAAajW,GACtB,QACE,OAAOA,EAAMgR,aAKbqG,GDJNlP,ECKEgP,EAAOhP,MDJTnI,ECKEoX,EAAYD,EAAOnX,MAAOmX,EAAO3K,QDJnCH,ECKE8K,EAAO9K,ODJTC,ECKE6K,EAAO7K,WDJTC,ECKE4K,EAAO5K,ODFF,GAAGpE,MAAUnI,MADmB,aAAfsM,EAA4B,YAAc,kBACdd,KAAKyG,IAAI5F,OAAYE,KARpE,IACLpE,EACAnI,EACAqM,EACAC,EACAC,ECQA,OACElL,OAAC,OACClB,UAAU,6CACVoB,MAAO,CAAEM,QAAS,iCAClBa,KAAK,UACL,aAAY2U,EACZC,SAAU,EACVC,UAAYzQ,IACI,UAAVA,EAAE0Q,KAA6B,MAAV1Q,EAAE0Q,KACzBrB,EAAaO,SAASW,EAAW,WAKrC5V,SAAA,CAAAC,MAAC,OAAIvB,UAAU,oCAAoCoB,MAAO,CAAEQ,aAAc,kBACxEN,SAAAC,MAAC,MACCkH,GAAI,gBAAgBuO,EAAOvO,KAC3BzI,UAAU,wDACVoB,MAAO,CAAE8B,SAAU,kBAElB5B,SAAA0V,EAAOhP,gBAKX,OAAI5G,MAAO,CAAEQ,aAAc,kBAC1BN,SAAAC,MAAC,KACCvB,UAAU,iFACVoB,MAAO,CACL8B,SAAU,4BACVoU,WAAY,2BACZ1V,aAAc,iBACd2V,YAAa,UACbC,cAAe,YAEjB,aAAY,GAAGR,EAAOhP,gBAAgBiP,EAAYD,EAAOnX,MAAOmX,EAAO3K,UAEtE/K,SAAA2V,EAAYD,EAAOnX,MAAOmX,EAAO3K,YAKtCnL,OAAC,OAAIlB,UAAU,8CAA8CoB,MAAO,CAAEqW,IAAK,kBAEzEnW,SAAA,CAAAC,MAAC,OAAIvB,UAAU,oBACbsB,SAAAJ,OAAC,QACCuH,GAAI,iBAAiBuO,EAAOvO,KAC5BzI,UAAW,oDACa,aAAtBgX,EAAO7K,WACH,sCACA,mCAEN/K,MAAO,CAAE8B,SAAU,oBACnB,aAAY,GAAyB,aAAtB8T,EAAO7K,WAA4B,YAAc,kBAAkByJ,EAAiBoB,EAAO9K,WAAW8K,EAAO5K,SAE5H9K,SAAA,CAAAC,MAAC,QACCvB,UAAU,uDACVoB,MAAO,CAAEsW,YAAa,kBACtB,cAAY,OAEXpW,SAAAyU,EAAciB,EAAO7K,cAEvByJ,EAAiBoB,EAAO9K,aAK7B3K,MAAC,QACCvB,UAAU,oDACVoB,MAAO,CAAE8B,SAAU,kBAElB5B,SAAA0V,EAAO5K,gBCjIZuL,EAAgD,EACpDpQ,OAAO,KACPqQ,OAAO,aACPC,UACA7X,YAAY,OAGZ,MAMM8X,EANc,CAClBrQ,GAAI,UACJC,GAAI,YACJC,GAAI,aAG0BJ,GAEhC,OACEhG,MAAC,OAAIvB,UAAW,wCAAwCA,IAAauC,KAAK,SAAS,YAAU,SAC3FjB,SAAAJ,OAAC,OAAIlB,UAAU,cAEbsB,SAAA,CAAAC,MAAC,OACCvB,UAAW,6BAA6B8X,iBACxC1W,MAAO,CACL2W,YAAa,MACbC,YAAa,QACb/S,YAAa,cACbgT,kBAAmB,4BAErB,cAAY,SAIbL,GACCrW,MAAC,KAAEvB,UAAU,mCAAmCoB,MAAO,CAAE4D,MAAO,4BAC7D1D,SAAAsW,IAKJC,GACCtW,MAAC,KAAEvB,UAAU,2CAA2CoB,MAAO,CAAE4D,MAAO,4BACrE1D,SAAAuW,UC1FPK,EAAoD,EACxDpN,YACAmI,qBACAC,eACAlI,iBACAmI,mBACAC,mBAEA,MAAM+E,EAAmBrN,EAAUvK,KAAK+Q,GAAKA,EAAE7I,KAAOwK,GAEtD,OACE/R,OAAC,OAAIlB,UAAU,6BACbsB,SAAA,CAAAC,MAACyR,EAAA,CACClI,YACAmI,qBACAC,eACAlI,iBACAmI,mBACAC,uBAGD,QACC9R,SAAAC,MAACoW,EAAA,CACCpQ,KAAK,KACLqQ,KAAK,4BACLC,QAASM,EAAmB,GAAGA,EAAiBxP,UAAUuK,IAAiB,GAC3ElT,UAAU,mBCrBdoY,EAAkD,EACtDtN,YACAmI,qBACAC,eACAlI,iBACAmI,mBACAC,kBAGElS,OAAC,OAAIlB,UAAU,6BACbsB,SAAA,CAAAC,MAACyR,EAAA,CACClI,YACAmI,qBACAC,eACAlI,iBACAmI,mBACAC,iBAGF7R,MAAC,QACCD,SAAAJ,OAAC,OAAIlB,UAAU,oBACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,OAAOoB,MAAO,CAAE4D,MAAO,2BACpC1D,SAAAC,MAAC,OAAIvB,UAAU,oBAAoBgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC3EZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,6HAGzEf,MAAC,MAAGvB,UAAU,2BAA2BoB,MAAO,CAAE4D,MAAO,6BAA+B1D,SAAA,4BACvF,KAAEF,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,4EAGpDC,MAAC,KAAEvB,UAAU,eAAeoB,MAAO,CAAE4D,MAAO,2BAA6B1D,SAAA,wDCpC7E+W,EAAeC,OAAK,IAAAC,EAAA,IAAMC,OAAO,8BAAgBC,6BACjDC,EAAkBJ,OAAK,IAAAC,EAAA,IAAMC,OAAO,iCAAmBC,2BACvDE,EAAgBL,OAAK,IAAAC,EAAA,IAAMC,OAAO,+BAAiBC,2BACnDG,EAAqBN,OAAK,IAAAC,EAAA,IAAMC,OAAO,oCAAsBC,yBAC7DI,EAAkBP,OAAK,IAAAC,EAAA,IAAMC,OAAO,iCAAmBC,yBAuCvDK,EAAsB,KAE1B,MAAMxJ,KAAEA,EAAA4B,QAAMA,EAAAG,uBAASA,EAAAD,kBAAwBA,GAAsBG,IAC/DwH,EAAsB1H,IAGtB2H,EAAoBC,UAAQ,IACzBnO,EAAU9E,OAAOsL,GAAKyH,EAAoBnI,SAASU,EAAE7I,KAC3D,CAACsQ,KAGG9F,EAAoBiG,GAAyB/Y,WAClD4Y,EAAoB,IAAM,KAErB7F,EAAciG,GAAmBhZ,WAAiB,OAClDiZ,EAAaC,GAAkBlZ,WAA8B,OAC7DqP,EAAWC,GAAgBtP,YAAkB,IAC7CmZ,EAAaC,GAAkBpZ,YAAS,GAK/CM,YAAU,KACR,IAAI+Y,EAsBJ,OApBIvG,GAAsBC,IACxBzD,GAAa,GACbvF,EAAOU,KAAK,yBAA0B,CACpCzD,QAAS,YACT4C,KAAM,CAAEhB,WAAYkK,EAAoBvH,KAAMwH,KAGhDsG,EAAUjV,WAAW,KACnB,MAAMwF,GXyWkBhB,EWzWKkK,EXyWevH,EWzWKwH,EX0WhD1H,EAAmBjL,KAAKwJ,GAAQA,EAAKhB,aAAeA,GAAcgB,EAAK2B,OAASA,IAD1D,IAAC3C,EAAoB2C,EWxWvC3B,GACHG,EAAOW,KAAK,0CAA2C,CACrD1D,QAAS,YACT4C,KAAM,CAAEhB,WAAYkK,EAAoBvH,KAAMwH,KAGlDmG,EAAetP,GAAQ,MACvB0F,GAAa,IACZ,MAGE,KACD+J,GACFC,aAAaD,KAGhB,CAACvG,EAAoBC,IAKxB,MAAMwG,EAAuB7V,cAAakF,IACpCqI,EAAkBrI,IACpBmB,EAAOU,KAAK,6BAA8B,CACxCzD,QAAS,YACT4C,KAAM,CAAEhB,gBAEVmQ,EAAsBnQ,IAEtBmB,EAAOW,KAAK,uCAAwC,CAClD1D,QAAS,YACT4C,KAAM,CAAEhB,aAAYoI,OAAQ7B,GAAM7G,OAGrC,CAAC2I,EAAmB9B,GAAM7G,KAKvBkR,EAAmB9V,cAAa6H,IACpCxB,EAAOU,KAAK,yBAA0B,CACpCzD,QAAS,YACT4C,KAAM,CAAE2B,OAAMkO,aAAc1G,KAE9BiG,EAAgBzN,IACf,CAACwH,IAEEe,EAAkBgF,UAAQ,IACvBD,EAAkBjW,IAAI0I,IAAA,CAC3B5L,MAAO4L,EAAShD,GAChB5G,MAAO4J,EAAS9C,KAChB7G,SAAU,GAAG2J,EAASjK,UAAUiK,EAASV,cAE1C,CAACiO,IAEE9E,EAAc+E,UAAQ,IACnBjO,EAAejI,IAAI2I,IAAA,CACxB7L,MAAO6L,EAAKmF,WACZhP,MAAO6J,EAAKmF,cAEb,IAEH,OAAIrB,EAEAjO,MAAC2W,EAAA,CACCpN,UAAWkO,EACX/F,qBACAC,eACAlI,iBACAmI,iBAAkBuG,EAClBtG,aAAcuG,EACdrK,OACA4B,YAKDkI,EAgBHlY,OAAC,OAAIlB,UAAU,mDACbsB,SAAA,CAAAC,MAACyR,EAAA,CACClI,UAAWkO,EACX/F,qBACAC,eACAlI,iBACAmI,iBAAkBuG,EAClBtG,aAAcuG,IAGhBpY,MAAC,QAAKkH,GAAG,eAAezI,UAAU,mBAChCsB,SAAAJ,OAAC,OAAIlB,UAAU,iBAEfsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,+BACbsB,SAAA,CAAAJ,OAAC,UACCS,QAAS,IAAM4X,GAAgBD,GAC/BtZ,UAAU,4EACV,gBAAesZ,EACf,gBAAc,sBAEdhY,SAAA,CAAAC,MAAC,OAAIvB,UAAU,wBAAwBgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC/EZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8JAEvEpB,OAAC,QAAKlB,UAAU,cAAcoB,MAAO,CAAEkW,WAAY,2BAChDhW,SAAA,CAAAgY,EAAc,OAAS,OAAO,iBAIlCA,GACC/X,MAAC,OAAIkH,GAAG,sBAAsBzI,UAAU,uEACtCsB,SAAAJ,OAAC,OAAIlB,UAAU,oCACbsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,gBACbsB,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,aAGjIC,MAAC5B,EAAA,CACCC,QAASqU,EACTpU,MAAOoT,EACPnT,SAAU4Z,EACV3Z,YAAY,kBACZC,UAAU,cAIdkB,OAAC,OAAIlB,UAAU,gBAAgBoB,MAAO,CAAEC,SAAU,WAChDC,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,SAGjIC,MAAC5B,EAAA,CACCC,QAASsU,EACTrU,MAAOqT,EAAarC,WACpB/Q,SAAWD,GAAU8Z,EAAiBlJ,SAAS5Q,IAC/CE,YAAY,cACZC,UAAU,sBAStBkB,OAAC,WAAQ,kBAAgB,cAAclB,UAAU,kBAC/CsB,SAAA,CAAAC,MAAC,MACCkH,GAAG,cACHzI,UAAU,8BACXsB,SAAA,+BAGDC,MAAC,OAAIvB,UAAU,mEACZsB,WAAY2K,iBAAiBlJ,IAAKiU,SAChCD,EAAA,CAA2BC,UAAXA,EAAOvO,iBAK7BqR,WAAA,CAASC,eAAWpC,EAAA,CAAeC,KAAK,sBAEvCtW,SAAA,CAAAJ,OAAC,WAAQlB,UAAU,kBAAkB,kBAAgB,iBACnDsB,SAAA,CAAAC,MAAC,MAAGkH,GAAG,iBAAiBzI,UAAU,UAAUsB,SAAA,iCAG5CC,MAAC,OAAIvB,UAAU,cACbsB,SAAAC,MAAC8W,GAAatO,KAAMqP,EAAY9M,YAAatB,qBAI/C9J,OAAC,OAAIlB,UAAU,oDACbsB,SAAA,CAAAC,MAACmX,EAAA,CAAgB3O,KAAMqP,EAAYhL,mBACnC7M,MAACoX,EAAA,CAAc5O,KAAMqP,EAAYtK,qBAKrC5N,OAAC,WAAQlB,UAAU,kBAAkB,kBAAgB,0BACnDsB,SAAA,CAAAC,MAAC,MAAGkH,GAAG,0BAA0BzI,UAAU,UAAUsB,SAAA,oBACrDC,MAACqX,EAAA,CAAmBoB,QAASZ,EAAYvL,oBAI3C3M,OAAC,WAAQlB,UAAU,kBAAkB,kBAAgB,iCACnDsB,SAAA,CAAAC,MAAC,MAAGkH,GAAG,iCAAiCzI,UAAU,UAAUsB,SAAA,2BAC5DC,MAACsX,EAAA,CAAgBoB,YAAab,EAAY1M,iCAK3C,UAAO1M,UAAU,kBAChBsB,SAAAC,MAAC,OAAIvB,UAAU,8BAA8BoB,MAAO,CAAEK,aAAc,oBAClEH,SAAAJ,OAAC,OAAIlB,UAAU,0GACbsB,SAAA,CAAAJ,OAAC,KAAElB,UAAU,4BAA4BoB,MAAO,CAC9C8B,SAAU,mBACVoU,WAAY,MACZ4C,OAAQ,GACP5Y,SAAA,4CACkC,SAAK,0BAE1CJ,OAAC,KAAElB,UAAU,+DAA+DoB,MAAO,CACjF8B,SAAU,iBACVoU,WAAY,MACZ4C,OAAQ,GACP5Y,SAAA,kBACc8X,EAAYvN,8BAxIvCtK,MAAC6W,EAAA,CACCtN,UAAWkO,EACX/F,qBACAC,eACAlI,iBACAmI,iBAAkBuG,EAClBtG,aAAcuG,EACdrK,OACA4B,aCsBKiJ,EAAkBC,GACR,iBAAVA,EACF,GAGFA,EACJvH,QAAQ,+BAAgC,IACxCA,QAAQ,+BAAgC,IACxCA,QAAQ,+BAAgC,IACxCA,QAAQ,6BAA8B,IACtCA,QAAQ,2BAA4B,IACpCA,QAAQ,2BAA4B,IACpCA,QAAQ,gBAAiB,IACzBA,QAAQ,cAAe,IACvBA,QAAQ,cAAe,IACvBA,QAAQ,WAAY,IACpBX,OAsBImI,IAAW3R,MAAM,wBAAwB4R,IAAI,GAAGC,IAAI,KAEjDF,IACPC,IAAI,EAAG,0CACPC,IAAI,IAAK,gDACTC,MAAM,QAAS,uDACfA,MAAM,QAAS,uDACfA,MAAM,QAAS,6CACfA,MAAM,eAAgB,wDAEnBH,IAAWC,IAAI,EAAG,oBAAoBC,IAAI,IAAK,4CAE3CE,EAAO,CAAC,QAAS,iBAAkB,iBAEjCJ,IAAWC,IAAI,EAAG,2BAA2BC,IAAI,GAAI,kDAE3DG,EAAS,CACbhS,MAAO2R,IAAW3R,MAAM,yBACxBP,SAAUkS,IACPC,IAAI,EAAG,+CACPE,MAAM,QAAS,uDACfA,MAAM,QAAS,uDACfA,MAAM,KAAM,6CACZA,MAAM,yBAA0B,wDACnC7R,KAAM0R,IAAWC,IAAI,EAAG,2CAA2CC,IAAI,IAAK,4CAC5EhY,KAAMkY,EAAO,CAAC,QAAS,iBAAkB,iBACzC1R,WAAYsR,IAAWC,IAAI,EAAG,2BAA2BC,IAAI,GAAI,kDAAkDI,WACnH7R,YAAa8R,EAAQP,IAAWC,IAAI,EAAG,2BAA2BC,IAAI,GAAI,mDAAmDI,aAGvHD,EAAS,CACfhS,MAAO2R,IAAW3R,MAAM,yBACxBP,SAAUkS,IAAWC,IAAI,EAAG,0BCvLhC,MAAMO,EAAgC,EACpCC,UAAU,UACVvT,OAAO,KACPiI,aAAY,EACZuL,aAAY,EACZ/a,YAAY,GACZsB,WACAsG,cACGoT,MAGH,MAqCMC,EAAkB,0LA9BD,CACrBC,QAAS,4DAITC,UAAW,8DAIXC,OAAQ,2DAIRC,MAAO,2DAiBgDP,MAVrC,CAClBrT,GAAI,SACJC,GAAI,SACJC,GAAI,UAO2EJ,MAH9DwT,EAAY,SAAW,MAG8D/a,IAAYkS,OAEpH,OACE3Q,MAAC,UACCvB,UAAWib,EACXrT,SAAUA,GAAY4H,EACtB,YAAWA,EACX,gBAAe5H,GAAY4H,KACvBwL,EAEH1Z,SAAAkO,EAECtO,OAAA+G,WAAA,CACE3G,SAAA,CAAAC,MAAC,OAAIvB,UAAU,yFACd,QAAKoB,MAAO,CAAE4D,MAAO,SAAW1D,SAAA,kBACnC,KCpIR,MAAMga,UAAsBC,YACVC,MAAe,CAC7BC,UAAU,GAGZ,+BAAcC,CAAyBnS,GAErC,MAAO,CAAEkS,UAAU,EAAMlS,QAC3B,CAEgB,iBAAAoS,CAAkBpS,EAAcqS,GAC9C,MAAMC,EFoMmB,CAACtS,IACrB,CACLZ,KAAMwR,EAAe5Q,EAAMZ,MAC3BkB,QAASsQ,EAAe5Q,EAAMM,SAC9BiS,MAAOvS,EAAMuS,MAAQ3B,EAAe5Q,EAAMuS,YAAS,EACnDzR,WAAA,IAAeC,MAAOC,gBEzMCwR,CAAcxS,GACrCW,EAAOX,MAAM,8BAA+B,CAC1CpC,QAAS,gBACT4C,KAAM,CACJR,MAAOsS,EACPG,eAAgBJ,EAAUI,kBAG9BtR,KAAKuR,SAAS,CACZ1S,QACAqS,aAEJ,CAEgB,MAAAM,GACd,OAAIxR,KAAK8Q,MAAMC,SACT/Q,KAAKsQ,MAAMjB,SACNrP,KAAKsQ,MAAMjB,SAIlB7Y,OAAC,OAAIlB,UAAU,gDAAgDoB,MAAO,CACpEyG,WAAY,kEAGZvG,SAAA,CAAAC,MAAC,OAAIvB,UAAU,mBACbsB,eAAC,OAAItB,UAAU,uBAGjBuB,MAAC,OAAIvB,UAAU,qCACbsB,gBAAC,OAAItB,UAAU,wCAAwCoB,MAAO,CAC5DyG,WAAY,4BACZ9B,eAAgB,aAChBgC,qBAAsB,aACtBD,OAAQ,qCACRjC,UAAW,wCAEXvE,SAAA,CAAAC,MAAC,OAAIvB,UAAU,uEAAuEoB,MAAO,CAC3FyG,WAAY,yBACZC,OAAQ,oCAERxG,SAAAC,MAAC,OAAIvB,UAAU,UAAUoB,MAAO,CAAE4D,MAAO,WAAahD,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9FZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wJAIxE,MAAGtC,UAAU,oCAAoCsB,SAAA,+BAIjD,KAAEtB,UAAU,qBAAqBsB,SAAA,mHAIlCJ,OAAC,OAAIlB,UAAU,YACbsB,SAAA,CAAAC,MAACsZ,EAAA,CACClZ,QAAS,IAAMmC,OAAOiH,SAASoR,SAC/BpB,WAAS,EACVzZ,SAAA,iBAIDC,MAACsZ,EAAA,CACClZ,QAAS,IAAM+I,KAAKuR,SAAS,CAAER,UAAU,IACzCX,QAAQ,YACRC,WAAS,EACVzZ,SAAA,kBAKF,UAsBJoJ,KAAKsQ,MAAM1Z,QACpB,EC3HK,MAAM8a,GAAe,CAC1B,CACE7Z,KAAM,QACNmG,MAAgD,4BAChDP,SAAsD,gBAExD,CACE5F,KAAM,iBACNmG,MAAgD,yBAChDP,SAAsD,gBAExD,CACE5F,KAAM,iBACNmG,MAAkD,2BAClDP,SAAwD,mBCLtDkU,GAAwC,EAAGC,uBAC/C,MAAO5T,EAAO6T,GAAYpc,WAAS,KAC5BgI,EAAUqU,GAAerc,WAAS,KAClCsc,EAAcC,GAAmBvc,YAAS,IAC1Cwc,EAAcC,GAAmBzc,WAAS,KAC3C6P,OAAEA,EAAAR,UAAQA,GAAc+B,KACxB/N,cAAEA,GAAkB0D,IA2B1B,OACEhG,OAAC,OAAIlB,UAAU,+GAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,mCACbsB,SAAAC,MAAC,OAAIvB,UAAU,iBACbsB,SAAAC,MAAC,OAAIvB,UAAU,yBAInBkB,OAAC,OAAIlB,UAAU,gCACbsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,wCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,2BACbsB,SAAAC,MAAC,OACCvB,UAAU,qIACVoB,MAAO,CACLyG,WAA8B,UAAlBrE,EACR,QACA,4EACJsE,OAA0B,UAAlBtE,EACJ,oCACA,sCAGNlC,SAAAJ,OAAC,OAAIlB,UAAU,uCAAuCgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9FZ,SAAA,CAAAC,MAAC,QACCD,SAAAJ,OAAC,kBAAeuH,GAAG,uBAAuB4L,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OACrElT,SAAA,CAAAC,MAAC,QAAKkT,OAAO,KAAKC,UAAU,YAC5BnT,MAAC,QAAKkT,OAAO,MAAMC,UAAU,YAC7BnT,MAAC,QAAKkT,OAAO,OAAOC,UAAU,iBAGlCnT,MAAC,QACCY,cAAc,QACdC,eAAe,QACfC,YAAa,EACbJ,OAA0B,UAAlBuB,EAA4B,6BAA+B,QACnElB,EAAE,gNAKVf,MAAC,MAAGvB,UAAU,oCAAoCoB,MAAO,CAAE4D,MAAO,6BAA+B1D,SAAA,iBACjGC,MAAC,KAAEvB,UAAU,OAAOoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,kDAGvEJ,OAAC,OAAIlB,UAAU,gDAAgDoB,MAAO,CAAEM,QAAS,kBAC/EJ,SAAA,CAAAC,MAAC,MAAGvB,UAAU,uCAAuCoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,uBAGtGC,MAAC,OAAIvB,UAAU,wCACZsB,YAAayB,IAAI,CAAC8Z,EAASC,IAC1Bvb,MAAC,UAECI,QAAS,KAAMob,OA1DXrU,EA0DoBmU,EAAQnU,MA1DbP,EA0DoB0U,EAAQ1U,SAzD3DoU,EAAS7T,QACT8T,EAAYrU,GAFG,IAACO,EAAeP,GA2DnBnI,UAAU,oDAEVsB,SAAAC,MAAC,QAAKvB,UAAU,yBACbsB,WAAQiB,KAAKsQ,QAAQ,IAAK,QALxBiK,SAYb5b,OAAC,OAAIlB,UAAU,oFACbsB,SAAA,CAAAJ,OAAC,QAAK8b,SA1FO/M,MAAOtJ,IAC1BA,EAAEsW,iBACFL,EAAgB,IAEhB,MAAMM,EAAahV,EAAiBC,GACpC,GAAK+U,EAAW3U,QAKhB,IACE2B,EAAOU,KAAK,kBAAmB,CAAEzD,QAAS,aAAc4C,KAAM,CAAErB,iBAC1DsH,EAAOtH,EAAOP,GACpB+B,EAAOU,KAAK,qBAAsB,CAAEzD,QAAS,aAAc4C,KAAM,CAAErB,UACrE,OAASa,GACPW,EAAOX,MAAM,iBAAkB,CAAEpC,QAAS,aAAc4C,KAAM,CAAErB,QAAOa,WACvEqT,EpBuCyB,CAACrT,GAC1BA,aAAiBlC,MAEfkC,EAAMM,QAAQ+G,SAAS,uBAClB,4BAELrH,EAAMM,QAAQ+G,SAAS,cAClB,4CAEF,0CAEF,+BoBlDauM,CAAgB5T,GAClC,MAXEqT,EAAgBM,EAAW9U,OAAO,IAAM,qBAoFNpI,UAAU,sBACrCsB,SAAA,CAAAqb,GACCpb,MAAC,OAAIvB,UAAU,4BAA4BoB,MAAO,CAChDyG,WAAY,0EACZC,OAAQ,mCACR9C,MAAO,0BAEP1D,SAAAJ,OAAC,OAAIlB,UAAU,0BACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gJAEvEf,MAAC,QAAKvB,UAAU,yBAA0BsB,SAAAqb,SAKhDzb,OAAC,OAAIlB,UAAU,sBACbsB,SAAA,CAAAJ,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAM6b,QAAQ,QAAQpd,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,kBAGjJC,MAAC,SACCkH,GAAG,QACHjH,KAAK,QACL6b,UAAQ,EACRxd,MAAO6I,EACP5I,SAAW6G,GAAM4V,EAAS5V,EAAE7F,OAAOjB,OACnCE,YAAY,mBACZC,UAAU,iIACVoB,MAAO,CACL0G,OAAQ,iDAKb,OACCxG,SAAA,CAAAC,MAAC,SAAM6b,QAAQ,WAAWpd,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,aAGpJJ,OAAC,OAAIlB,UAAU,WACbsB,SAAA,CAAAC,MAAC,SACCkH,GAAG,WACHjH,KAAMib,EAAe,OAAS,WAC9BY,UAAQ,EACRxd,MAAOsI,EACPrI,SAAW6G,GAAM6V,EAAY7V,EAAE7F,OAAOjB,OACtCE,YAAY,sBACZC,UAAU,uIACVoB,MAAO,CACL0G,OAAQ,uCAGZvG,MAAC,UACCC,KAAK,SACLG,QAAS,IAAM+a,GAAiBD,GAChCzc,UAAU,uGACV,aAAYyc,EAAe,gBAAkB,gBAE5Cnb,SAAAmb,EACClb,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0LAGvEpB,OAAC,OAAIlB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAA,CAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qCACrEf,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0IAQjFf,MAAC,UACCC,KAAK,SACLoG,SAAU4H,EACVxP,UAAU,qCAETsB,SAAAkO,EACCtO,OAAC,OAAIlB,UAAU,yCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,oFACd,QAAKoB,MAAO,CAAE4D,MAAO,SAAW1D,SAAA,qBAGnC,qBAKL,OAAItB,UAAU,OACbsB,SAAAJ,OAAC,OAAIlB,UAAU,4BACbsB,SAAA,CAAAC,MAAC,KAAEvB,UAAU,2BAA2BoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,2BAGzFJ,OAAC,UACCM,KAAK,SACLG,QAAS2a,EACTtc,UAAU,mDAEVsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,eAAegC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACtEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,2FACjE,4BAOdf,MAAC,OAAIvB,UAAU,kEAAkEoB,MAAO,CAAE4D,MAAO,2BAC/F1D,SAAAJ,OAAC,KAAEI,SAAA,4CAAmC,SAAK,mCC9M/Cgc,GAAwC,EAAGC,uBAC/C,MAAOC,EAAUC,GAAetd,WAAS,CACvCwI,KAAM,GACND,MAAO,GACPP,SAAU,GACVuV,gBAAiB,GACjBnb,KAAM,eACNwG,WAAY,GACZD,YAAa,MAERS,EAAOoU,GAAYxd,WAAS,KAC5Bsc,EAAcC,GAAmBvc,YAAS,IAC1Cyd,EAAqBC,GAA0B1d,YAAS,IACzD6Q,OAAEA,EAAAxB,UAAQA,GAAc+B,KACxB/N,cAAEA,GAAkB0D,IAgDpB4W,EAAoB,CAACC,EAAele,KACxC4d,EAAYO,QAAcA,EAAMD,CAACA,GAAQle,MAiB3C,OACEqB,OAAC,OAAIlB,UAAU,uHAEbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,mCACbsB,SAAAC,MAAC,OAAIvB,UAAU,iBACbsB,SAAAC,MAAC,OAAIvB,UAAU,yBAInBkB,OAAC,OAAIlB,UAAU,gCACbsB,SAAA,CAAAJ,OAAC,OAAIlB,UAAU,wCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,2BACbsB,SAAAC,MAAC,OACCvB,UAAU,qIACVoB,MAAO,CACLyG,WAA8B,UAAlBrE,EACR,QACA,4EACJsE,OAA0B,UAAlBtE,EACJ,oCACA,sCAGNlC,SAAAJ,OAAC,OAAIlB,UAAU,uCAAuCgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAC9FZ,SAAA,CAAAC,MAAC,QACCD,SAAAJ,OAAC,kBAAeuH,GAAG,uBAAuB4L,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,OACrElT,SAAA,CAAAC,MAAC,QAAKkT,OAAO,KAAKC,UAAU,YAC5BnT,MAAC,QAAKkT,OAAO,MAAMC,UAAU,YAC7BnT,MAAC,QAAKkT,OAAO,OAAOC,UAAU,iBAGlCnT,MAAC,QACCY,cAAc,QACdC,eAAe,QACfC,YAAa,EACbJ,OAA0B,UAAlBuB,EAA4B,6BAA+B,QACnElB,EAAE,gNAKVf,MAAC,MAAGvB,UAAU,oCAAoCoB,MAAO,CAAE4D,MAAO,6BAA+B1D,SAAA,sBACjGC,MAAC,KAAEvB,UAAU,OAAOoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,2CAGvEC,MAAC,OAAIvB,UAAU,gEACbsB,gBAAC,QAAK0b,SA9GO/M,MAAOtJ,IAI1B,GAHAA,EAAEsW,iBACFU,EAAS,IAELH,EAASrV,WAAaqV,EAASE,gBAKnC,GAAIF,EAASrV,SAASrF,OAAS,EAC7B6a,EAAS,oDAIX,GAAsB,iBAAlBH,EAASjb,MAA4Bib,EAASzU,WAKlD,GAAsB,mBAAlByU,EAASjb,MAA6D,IAAhCib,EAAS1U,YAAYhG,OAK/D,IACE,MAAMmb,EAAyB,CAC7BtV,KAAM6U,EAAS7U,KACfD,MAAO8U,EAAS9U,MAChBP,SAAUqV,EAASrV,SACnB5F,KAAMib,EAASjb,MAGK,iBAAlBib,EAASjb,MAA2Bib,EAASzU,aAC/CkV,EAAWlV,WAAayU,EAASzU,YAGb,mBAAlByU,EAASjb,MAA6Bib,EAAS1U,YAAYhG,OAAS,IACtEmb,EAAWnV,YAAc0U,EAAS1U,mBAG9BkI,EAAOiN,EACf,OAASC,GACPP,EAASO,aAAe7W,MAAQ6W,EAAIrU,QAAU,oBAChD,MAvBE8T,EAAS,oEALTA,EAAS,yDAVTA,EAAS,2BAyGyB3d,UAAU,sBACrCsB,SAAA,CAAAiI,GACChI,MAAC,OAAIvB,UAAU,wBAAwBoB,MAAO,CAC5CM,QAAS,iBACTmG,WAAY,0EACZC,OAAQ,mCACR9C,MAAO,0BAEP1D,SAAAJ,OAAC,OAAIlB,UAAU,0BACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,gJAEvEf,MAAC,QAAKvB,UAAU,yBAA0BsB,SAAAiI,SAKhDrI,OAAC,OAAIlB,UAAU,wCACbsB,SAAA,CAAAJ,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,cAGjIC,MAAC,SACCkH,GAAG,OACHjH,KAAK,OACL6b,UAAQ,EACRxd,MAAO2d,EAAS7U,KAChB7I,SAAW6G,GAAMmX,EAAkB,OAAQnX,EAAE7F,OAAOjB,OACpDE,YAAY,uBACZC,UAAU,iIACVoB,MAAO,CACL0G,OAAQ,iDAKb,OACCxG,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,kBAGjIC,MAAC,SACCkH,GAAG,QACHjH,KAAK,QACL6b,UAAQ,EACRxd,MAAO2d,EAAS9U,MAChB5I,SAAW6G,GAAMmX,EAAkB,QAASnX,EAAE7F,OAAOjB,OACrDE,YAAY,mBACZC,UAAU,iIACVoB,MAAO,CACL0G,OAAQ,6CAMhB5G,OAAC,OAAIlB,UAAU,wCACbsB,SAAA,CAAAJ,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,aAGjIJ,OAAC,OAAIlB,UAAU,WACbsB,SAAA,CAAAC,MAAC,SACCkH,GAAG,WACHjH,KAAMib,EAAe,OAAS,WAC9BY,UAAQ,EACRxd,MAAO2d,EAASrV,SAChBrI,SAAW6G,GAAMmX,EAAkB,WAAYnX,EAAE7F,OAAOjB,OACxDE,YAAY,oBACZC,UAAU,uIACVoB,MAAO,CACL0G,OAAQ,uCAGZvG,MAAC,UACCC,KAAK,SACLG,QAAS,IAAM+a,GAAiBD,GAChCzc,UAAU,uGACV,aAAYyc,EAAe,gBAAkB,gBAE5Cnb,SAAAmb,EACClb,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0LAGvEpB,OAAC,OAAIlB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAA,CAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qCACrEf,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8IAO9E,OACChB,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,qBAGjIJ,OAAC,OAAIlB,UAAU,WACbsB,SAAA,CAAAC,MAAC,SACCkH,GAAG,kBACHjH,KAAMoc,EAAsB,OAAS,WACrCP,UAAQ,EACRxd,MAAO2d,EAASE,gBAChB5d,SAAW6G,GAAMmX,EAAkB,kBAAmBnX,EAAE7F,OAAOjB,OAC/DE,YAAY,wBACZC,UAAU,uIACVoB,MAAO,CACL0G,OAAQ,uCAGZvG,MAAC,UACCC,KAAK,SACLG,QAAS,IAAMkc,GAAwBD,GACvC5d,UAAU,uGACV,aAAY4d,EAAsB,gBAAkB,gBAEnDtc,SAAAsc,EACCrc,MAAC,OAAIvB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0LAGvEpB,OAAC,OAAIlB,UAAU,UAAUgC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACjEZ,SAAA,CAAAC,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qCACrEf,MAAC,QAAKY,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,iJAQhF,OACChB,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,iBAGjIC,MAAC,OAAIvB,UAAU,sBACXsB,gBAAO6c,KAAKnV,GAAiCjG,IAAKR,GAClDhB,MAAC,OAAevB,UAAU,wCAAwCoB,MAAO,CACvEyG,WAAY2V,EAASjb,OAASA,EAAO,0BAA4B,4BACjEuF,OAAQ,cAAa0V,EAASjb,OAASA,EAAO,uBAAyB,2BACvE6b,QAAkB,UAAT7b,EAAmB,GAAM,GAElCjB,SAAAJ,OAAC,OAAIlB,UAAU,mBACbsB,SAAA,CAAAC,MAAC,SACCkH,GAAIlG,EACJf,KAAK,QACLmH,KAAK,OACL9I,MAAO0C,EACP8b,QAASb,EAASjb,OAASA,EAC3BzC,SAAW6G,GAAMmX,EAAkB,OAAQnX,EAAE7F,OAAOjB,OACpDG,UAAU,oBACV4H,SAAmB,UAATrF,IAEZrB,OAAC,OAAIlB,UAAU,OACbsB,SAAA,CAAAJ,OAAC,SAAMkc,QAAS7a,EAAMvC,UAAU,+CAA+CoB,MAAO,CAAE4D,MAAO,4BAA6B6U,QAAS,SAClIvY,SAAA,CAAA0H,EAAiBzG,GAAMyF,MACd,UAATzF,GAAoBhB,MAAC,QAAKH,MAAO,CAAE4D,MAAO,2BAA6BhF,UAAU,OAAOsB,SAAA,uBAE3FC,MAAC,KAAEvB,UAAU,eAAeoB,MAAO,CAAE4D,MAAO,2BACzC1D,SAAA0H,EAAiBzG,GAAM2G,qBAtBtB3G,SA+BG,iBAAlBib,EAASjb,MACRrB,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,oBAGjIC,MAAC5B,EAAA,CACCC,QAASkL,EAAU/H,IAAI0I,IAAA,CACrB5L,MAAO4L,EAAShD,GAChB5G,MAAO4J,EAAS9C,KAChB7G,SAAU,GAAG2J,EAASjK,UAAUiK,EAASV,cAE3ClL,MAAO2d,EAASzU,WAChBjJ,SAAWD,GAAUie,EAAkB,aAAcje,GACrDE,YAAY,uBACZC,UAAU,cAKG,mBAAlBwd,EAASjb,MACRrB,OAAC,OACCI,SAAA,CAAAC,MAAC,SAAMvB,UAAU,aAAaoB,MAAO,CAAE4D,MAAO,8BAA+BpD,aAAc,iBAAkBiY,QAAS,SAAWvY,SAAA,+CAGjIC,MAAC,OAAIvB,UAAU,yEACZsB,SAAAwJ,EAAU/H,IAAK0I,GACdvK,OAAC,OAAsBlB,UAAU,mEAC/BsB,SAAA,CAAAC,MAAC,SACCkH,GAAI,YAAYgD,EAAShD,KACzBjH,KAAK,WACL6c,QAASb,EAAS1U,YAAY8H,SAASnF,EAAShD,IAChD3I,SAAW6G,IAAM2X,OAnQNvV,EAmQ8B0C,EAAShD,GAnQnB4V,EAmQuB1X,EAAE7F,OAAOud,aAjQjFZ,EADEY,EACUL,IAAA,IACPA,EACHlV,YAAa,IAAIkV,EAAKlV,YAAaC,KAGzBiV,IAAA,IACPA,EACHlV,YAAakV,EAAKlV,YAAY9C,OAAOyC,GAAMA,IAAOM,MATxB,IAACA,EAAoBsV,GAoQ/Bre,UAAU,oBAEZkB,OAAC,SAAMkc,QAAS,YAAY3R,EAAShD,KAAMzI,UAAU,sCAAsCoB,MAAO,CAAE4D,MAAO,6BACxG1D,SAAA,CAAAmK,EAAS9C,KACVzH,OAAC,QAAKE,MAAO,CAAE4D,MAAO,2BAA6BhF,UAAU,OAAOsB,SAAA,KAAEmK,EAASjK,KAAK,MAAIiK,EAASV,SAAS,YAVpGU,EAAShD,UAkB3BlH,MAAC,UACCC,KAAK,SACLoG,SAAU4H,EACVxP,UAAU,qCAETsB,SAAAkO,EACCtO,OAAC,OAAIlB,UAAU,yCACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,oFACd,QAAKoB,MAAO,CAAE4D,MAAO,SAAW1D,SAAA,2BAGnC,yBAIH,OAAItB,UAAU,OACbsB,SAAAJ,OAAC,OAAIlB,UAAU,4BACbsB,SAAA,CAAAC,MAAC,KAAEvB,UAAU,2BAA2BoB,MAAO,CAAE4D,MAAO,+BAAiC1D,SAAA,6BAGzFJ,OAAC,UACCM,KAAK,SACLG,QAAS4b,EACTvd,UAAU,mDAEVsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,eAAegC,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YACtEZ,eAAC,QAAKa,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mGACjE,uBAQhBf,MAAC,OAAIvB,UAAU,kEAAkEoB,MAAO,CAAE4D,MAAO,2BAC/F1D,SAAAJ,OAAC,KAAEI,SAAA,4CAAmC,SAAK,mCC/W/Cid,GAA0C,EAAGjd,eACjD,MAAOkd,EAAUC,GAAete,YAAS,IACnC4P,gBAAEA,EAAAP,UAAiBA,GAAc+B,IAEvC,OAAI/B,EAEAjO,MAACoW,EAAA,CACCpQ,KAAK,KACLqQ,KAAK,aACL5X,UAAU,iBAKX+P,oBAQKzO,aAPDkd,EACLjd,MAAC+b,GAAA,CAAWC,iBAAkB,IAAMkB,GAAY,WAE/CpC,GAAA,CAAWC,iBAAkB,IAAMmC,GAAY,MC7BtD,SAASC,KACP,OACEnd,MAAC+Z,GACCha,SAAAC,MAAC8B,EAAA,CACC/B,eAAC+N,EAAA,CACC/N,SAAAJ,OAAC,OAAIlB,UAAU,6EAEbsB,SAAA,CAAAC,MAAC,KACCod,KAAK,gBACL3e,UAAU,kPACVmX,SAAU,EACX7V,SAAA,yBAKDC,MAAC,OAAIvB,UAAU,8DAA8D,cAAY,OACvFsB,SAAAJ,OAAC,OAAIlB,UAAU,gFACbsB,SAAA,CAAAC,MAAC,OAAIvB,UAAU,yDACfuB,MAAC,OAAIvB,UAAU,2CACfuB,MAAC,OAAIvB,UAAU,yDAKnBuB,MAAC,OAAIvB,UAAU,mBACbsB,eAAC,OAAItB,UAAU,uBAGjBuB,MAACgd,GAAA,CACCjd,SAAAC,MAACuY,WAAA,CAASC,SAAUxY,MAACoW,EAAA,CAAeC,KAAK,uBAAuB5X,UAAU,iBACxEsB,SAAAC,MAACuX,EAAA,gBAQjB,CC6HO,MAAM8F,GAAqB,IArG3B,MACG5E,YAA+C6E,IAC/CC,kBAAmB,EAK3B,WAAAC,CAAYpW,EAAcqW,GACpBtU,KAAKsP,QAAQiF,IAAItW,GACnBuB,EAAOW,KAAK,uBAAuBlC,oBAAwB,CACzDxB,QAAS,qBACT4C,KAAM,CAAEpB,UAKZ+B,KAAKsP,QAAQkF,IAAIvW,EAAM,CACrBA,OACAwW,UAAWC,YAAYzO,MACvBqO,SAAUA,GAAY,IAE1B,CAKA,SAAAK,CAAU1W,GACR,MAAMqO,EAAStM,KAAKsP,QAAQsF,IAAI3W,GAChC,IAAKqO,EAKH,YAJA9M,EAAOW,KAAK,uBAAuBlC,eAAmB,CACpDxB,QAAS,qBACT4C,KAAM,CAAEpB,UAKZ,MAAM4W,EAAUH,YAAYzO,MACtB6O,EAAWD,EAAUvI,EAAOmI,UAE5BM,EAAsC,IACvCzI,EACHuI,UACAC,YAIF,OADA9U,KAAKsP,QAAQkF,IAAIvW,EAAM8W,GAChBA,CACT,CAKA,aAAAC,GACE,OAAOC,MAAMC,KAAKlV,KAAKsP,QAAQ6F,SACjC,CAKA,YAAAC,GACEpV,KAAKsP,QAAQ+F,OACf,CAKA,wBAAAC,GACMtV,KAAKoU,kBAETvG,EAAAtI,UAAA,MAAAgQ,mBAAA9P,QAAAC,UAAA8P,KAAA,IAAAC,IAAoB,OAAAF,cAAAxH,QAAEyH,KAAK,EAAGD,gBAC5BA,EAAUG,kBACV1V,KAAKoU,kBAAmB,IACvBuB,MAAM9W,IACPW,EAAOX,MAAM,wCAAyC,CACpDpC,QAAS,qBACT4C,KAAM,CAAER,YAGd,CAKA,uBAAA+W,GACO5V,KAAKoU,kBAEVvG,EAAAtI,UAAA,MAAAgQ,mBAAA9P,QAAAC,UAAA8P,KAAA,IAAAC,IAAoB,OAAAF,cAAAxH,QAAEyH,KAAK,EAAGD,gBAC5BA,EAAUM,iBACV7V,KAAKoU,kBAAmB,IACvBuB,MAAM9W,IACPW,EAAOX,MAAM,uCAAwC,CACnDpC,QAAS,qBACT4C,KAAM,CAAER,YAGd,GC1HIiX,GAAa,CACjBC,IAAK,CAAEC,KAAM,IAAKC,KAAM,KACxBC,IAAK,CAAEF,KAAM,IAAKC,KAAM,KACxBE,IAAK,CAAEH,KAAM,KAAMC,KAAM,KACzBG,IAAK,CAAEJ,KAAM,KAAMC,KAAM,KACzBI,KAAM,CAAEL,KAAM,IAAKC,KAAM,MACzBK,IAAK,CAAEN,KAAM,IAAKC,KAAM,MAM1B,SAASM,GAAUtY,EAA0B9I,GAC3C,MAAMqhB,EAAYV,GAAW7X,GAC7B,OAAI9I,GAASqhB,EAAUR,KAAa,OAChC7gB,GAASqhB,EAAUP,KAAa,oBAC7B,MACT,CAKO,MAAMQ,GACHC,UAAmC,GACnCpH,YAAuD6E,IACvDwC,sBAA2DxC,IAC3DyC,wBAER,WAAApL,GAGExL,KAAK4W,wBD/DF,SACLC,EACAC,EAAO,IACP5hB,EAAqD,IAErD,IAAI4Z,EAAgD,KAChDiI,EAAwB,KAE5B,MAAMC,EAAc,YAA2BC,GAC7CF,EAAWE,EAWPnI,EACFC,aAAaD,GACJ5Z,EAAQgiB,SACjBL,EAAGM,MAAMnX,KAAMiX,GAGjBnI,EAAUjV,WAfI,KACZiV,EAAU,MAEL5Z,EAAQgiB,UAAgC,IAArBhiB,EAAQkiB,UAAsBL,IACpDF,EAAGM,MAAMnX,KAAM+W,GACfA,EAAW,OAUaD,EAC9B,EAeA,OAbAO,OAAOC,eAAeN,EAAa,SAAU,CAC3C7hB,MAAO,KACD2Z,IACFC,aAAaD,GACbA,EAAU,KACViI,EAAW,OAGfQ,YAAY,EACZC,UAAU,EACVC,cAAc,IAGTT,CACT,CCoBmCU,CADRpL,GAA2BtM,KAAK2X,cAAcrL,GACd,IAAM,CAAE4K,SAAS,EAAOE,UAAU,GAC3F,CAKA,eAAA1B,GAEE1V,KAAKsP,QAAQ+F,QACbrV,KAAK2W,kBAAkBtB,QAGvBrV,KAAK4X,QAAQ,CAAC,gBAAkBC,IAC9B,UAAWC,KAASD,EAAS,CAC3B,MAAME,EAAcD,GACfC,EAAYC,gBAAkBD,EAAY5iB,OAC7C6K,KAAKiY,aAAa,MAA2B,IAApBF,EAAY5iB,MAEzC,IAIF6K,KAAK4X,QAAQ,CAAC,eAAiBC,IAC7B,MAAMK,EAAaL,EAAQ,GAC3B,GAAIK,GAAYC,iBAAmBD,GAAYzD,UAAW,CACxD,MAAMtf,EAAQ+iB,EAAWC,gBAAkBD,EAAWzD,UACtDzU,KAAKiY,aAAa,MAAO9iB,EAC3B,IAIF6K,KAAK4X,QAAQ,CAAC,4BAA8BC,IAC1C,MAAMO,EAAYP,EAAQA,EAAQzf,OAAS,GACvCggB,GACFpY,KAAKiY,aAAa,MAAOG,EAAU3D,aAKvCzU,KAAK4X,QAAQ,CAAC,SAAWC,IACvB,UAAWC,KAASD,EACC,2BAAfC,EAAM7Z,MACR+B,KAAKiY,aAAa,MAAOH,EAAMrD,aAMrCzU,KAAK4X,QAAQ,CAAC,cAAgBC,IAC5B,MAAMQ,EAAkBR,EAAQ,GAC5BQ,GACFrY,KAAKiY,aAAa,OAAQI,EAAgBC,iBAK9CtY,KAAK4X,QAAQ,CAAC,SAAWC,IACvB,IAAIU,EAAc,EAClB,UAAWT,KAASD,EAClBU,EAAc5X,KAAKkP,IAAI0I,EAAaT,EAAMhD,UAE5C9U,KAAKiY,aAAa,MAAOM,KAG3B/Y,EAAOU,KAAK,gCAAiC,CAC3CzD,QAAS,oBAEb,CAKA,cAAAoZ,GACE7V,KAAK0W,UAAUxc,QAAQse,GAAYA,EAASC,cAC5CzY,KAAK0W,UAAY,GACjB1W,KAAKsP,QAAQ+F,QACbrV,KAAK2W,kBAAkBtB,QACvBrV,KAAK4W,wBAAwB8B,SAE7BlZ,EAAOU,KAAK,gCAAiC,CAC3CzD,QAAS,oBAEb,CAKA,UAAAkc,GACE,OAAO1D,MAAMC,KAAKlV,KAAKsP,QAAQ6F,SACjC,CAKQ,OAAAyC,CACNgB,EACAC,GAEA,IACE,MAAML,EAAW,IAAIM,oBAAqBC,IACxCF,EAASE,EAAKC,gBAGhBR,EAASZ,QAAQ,CAAEgB,aAAYK,UAAU,IACzCjZ,KAAK0W,UAAU/Y,KAAK6a,EACtB,OAAS3Z,GACPW,EAAOW,KAAK,4CAA4CyY,EAAWM,KAAK,QAAS,CAC/Ezc,QAAS,mBACT4C,KAAM,CAAER,UAEZ,CACF,CAKQ,YAAAoZ,CAAaha,EAA0B9I,GAE7C,IAAIgkB,EAEJ,IACE,GAAsB,oBAAX/f,QAA0BA,OAAOsb,YAAa,CACvD,MAAMmD,EAAUze,OAAOsb,YAAY0E,iBAAiB,cAChDvB,IAAU,KAEZsB,EADiBtB,EAAQ,GACC/gB,KAE9B,CACF,OAAS+H,GAELW,EAAOW,KAAK,kCAAmC,CAC7C1D,QAAS,mBACT4C,KAAM,CAAER,UAGd,CAGA,MAAMyN,EAAyB,CAC7BrO,OACA9I,QACAkkB,OAAQ9C,GAAUtY,EAAM9I,GACxBgkB,kBAIIhE,EAASnV,KAAK2W,kBAAkB/B,IAAI3W,IAAS,GACnDkX,EAAOxX,KAAKxI,GACZ6K,KAAK2W,kBAAkBnC,IAAIvW,EAAMkX,GAGjCnV,KAAKsP,QAAQkF,IAAIvW,EAAMqO,GAGvB,MAAMgN,EAAY,YAAYrb,EAAKsb,gBACnCrF,GAAmBG,YAAYiF,GAC/BtZ,KAAK4W,wBAAwBtK,GAC7B4H,GAAmBS,UAAU2E,GAG7B9Z,EAAOU,KAAK,2BAA4B,CACtCzD,QAAS,mBACT4C,KAAM,CACJpB,OACA9I,QACAkkB,OAAQ/M,EAAO+M,SAGrB,CAKQ,aAAA1B,CAAcrL,GACpB,MAAM6I,EAASnV,KAAK2W,kBAAkB/B,IAAItI,EAAOrO,MACjD,IAAKkX,GAAQ/c,OAAQ,OAGrB,MAAMohB,EAAMrE,EAAOsE,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GAAKxE,EAAO/c,OACjDyX,EAAMlP,KAAKkP,OAAOsF,GAClBvF,EAAMjP,KAAKiP,OAAOuF,GAGlByE,EAAa,YAAYtN,EAAOrO,KAAKsb,uBAC3CrF,GAAmBG,YAAYuF,GAG/Bpa,EAAOU,KAAK,+BAAgC,CAC1CzD,QAAS,mBACT4C,KAAM,CACJiN,OAAQA,EAAOrO,KACf4b,aAAcvN,EAAOnX,MACrB2kB,QAASN,EACTO,QAASlK,EACTmK,QAASpK,EACTqK,YAAa9E,EAAO/c,OACpBihB,OAAQ9C,GAAUjK,EAAOrO,KAAMub,MAInCtF,GAAmBS,UAAUiF,GAG7B5Z,KAAK2W,kBAAkBnC,IAAIlI,EAAOrO,KAAM,GAC1C,EAIK,MAAMsX,GAAY,IAAIkB,kICnRvByD,GAAc7jB,SAAS8jB,eAAe,QAE5C,IAAKD,GACH,MAAM,IAAIvd,MAAM,gFAILyd,EAASC,WAAWH,IAE5B1I,aACF8I,EAAMC,WAAN,CACC3jB,eAACod,UAKiB,oBAAX5a,QAETS,WAAW,KACT0b,GAAUG,mBACT","names":["Dropdown","options","value","onChange","placeholder","className","isOpen","setIsOpen","useState","dropdownRef","useRef","selectedOption","find","option","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","jsxs","ref","style","overflow","children","jsx","type","borderRadius","padding","onClick","marginBottom","label","subtitle","marginTop","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","role","zIndex","position","top","left","right","maxHeight","length","map","handleOptionClick","optionValue","fontSize","ThemeContext","createContext","ThemeProvider","theme","setThemeState","resolvedTheme","setResolvedTheme","isTransitioning","setIsTransitioning","getSystemTheme","useCallback","window","matchMedia","matches","applyTheme","newResolvedTheme","root","documentElement","classList","add","setTimeout","remove","body","offsetHeight","querySelectorAll","forEach","el","getComputedStyle","backgroundColor","color","borderColor","animationPlayState","resolveTheme","themeValue","forceStyleComputation","classes","testElement","createElement","visibility","pointerEvents","appendChild","lightStyle","boxShadow","backgroundImage","backdropFilter","filter","textShadow","darkStyle","removeChild","getPropertyValue","initialTheme","localStorage","getItem","initialResolvedTheme","mediaQuery","handleChange","e","systemTheme","setTheme","newTheme","setItem","toggleTheme","Provider","useTheme","context","useContext","Error","ThemeToggle","size","iconSize","sm","md","lg","disabled","background","border","WebkitBackdropFilter","title","Fragment","validatePassword","password","errors","push","test","isValid","mockUsers","id","email","name","createdAt","lastLogin","hospitalIds","hospitalId","roleDescriptions","admin","description","permissions","hospital_owner","branch_owner","captureError","error","Sentry.withScope","scope","setExtras","Sentry.captureException","addBreadcrumb","message","category","data","Sentry.addBreadcrumb","level","logger","isDev","formatMessage","timestamp","Date","toISOString","toUpperCase","log","this","handleProductionError","info","warn","hospitals","location","availableYears","generateVariation","baseValue","variationPercent","variation","Math","round","random","hospitalDataByYear","hospital","year","baseMultiplier","hospitalData","lastUpdated","toLocaleDateString","month","day","financialMetrics","change","changeType","period","format","revenueData","revenue","expenses","netIncome","departmentFinances","emergencyRevenue","emergencyExpenses","emergencyProfit","department","profit","profitMargin","surgeryRevenue","surgeryExpenses","surgeryProfit","cardiologyRevenue","cardiologyExpenses","cardiologyProfit","deptRevenue","deptExpenses","deptProfit","orthoRevenue","orthoExpenses","orthoProfit","patientMetrics","totalPatients","inpatients","outpatients","emergencyVisits","averageStayDuration","occupancyRate","expenseBreakdown","salariesAmount","suppliesAmount","equipmentAmount","utilitiesAmount","maintenanceAmount","otherAmount","totalAmount","amount","percentage","cashFlowData","date","operatingCashFlow","investingCashFlow","financingCashFlow","netCashFlow","AuthContext","AuthProvider","user","setUser","isLoading","setIsLoading","storedUser","parsedUser","JSON","parse","removeItem","isAuthenticated","signIn","async","userData","Promise","resolve","passwordValidation","u","attemptKey","attempts","parseInt","lockoutTime","now","includes","toString","authService","stringify","signUp","newUser","signOut","userId","canAccessHospital","getAccessibleHospitals","h","useAuth","stringToColor","str","colors","hash","i","charCodeAt","abs","generateLocalAvatar","initials","words","trim","split","word","charAt","firstWord","lastWord","getInitials","svg","btoa","getAvatarUrl","useLocal","replace","encodeURIComponent","getUserAvatarColor","Header","selectedHospitalId","selectedYear","onHospitalChange","onYearChange","isMobileMenuOpen","setIsMobileMenuOpen","isUserMenuOpen","setIsUserMenuOpen","isFilterMenuOpen","setIsFilterMenuOpen","localHospitalId","setLocalHospitalId","localYear","setLocalYear","hasFilterChanges","closest","hospitalOptions","yearOptions","paddingTop","paddingBottom","x1","y1","x2","y2","offset","stopColor","transform","minWidth","src","alt","loading","onError","width","height","bottom","paddingLeft","paddingRight","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","formatPercentage","toFixed","formatNumber","getChangeIcon","screenReader","announceElement","constructor","createAnnounceElement","element","setAttribute","cssText","announce","priority","textContent","announceDataUpdate","dataType","newValue","announceError","announceSuccess","MetricCard","metric","formatValue","ariaLabel","tabIndex","onKeyDown","key","lineHeight","wordSpacing","letterSpacing","gap","marginRight","LoadingSpinner","text","subtext","spinnerSize","borderWidth","borderStyle","borderBottomColor","DashboardLoading","selectedHospital","DashboardNoData","RevenueChart","lazy","__vitePreload","import","__VITE_PRELOAD__","ExpensePieChart","CashFlowChart","PatientMetricsCard","DepartmentTable","Dashboard","accessibleHospitals","filteredHospitals","useMemo","setSelectedHospitalId","setSelectedYear","currentData","setCurrentData","showFilters","setShowFilters","timeout","clearTimeout","handleHospitalChange","handleYearChange","previousYear","display","Suspense","fallback","metrics","departments","margin","sanitizeString","input","z.string","min","max","regex","z.enum","z.object","optional","z.array","Button","variant","fullWidth","props","combinedClasses","primary","secondary","danger","ghost","ErrorBoundary","Component","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","sanitizedError","stack","sanitizeError","componentStack","setState","render","reload","demoAccounts","SignInPage","onSwitchToSignUp","setEmail","setPassword","showPassword","setShowPassword","errorMessage","setErrorMessage","account","index","fillDemo","onSubmit","preventDefault","validation","formatAuthError","htmlFor","required","SignUpPage","onSwitchToSignIn","formData","setFormData","confirmPassword","setError","showConfirmPassword","setShowConfirmPassword","handleInputChange","field","prev","signUpData","err","keys","opacity","checked","handleHospitalSelection","AuthWrapper","isSignUp","setIsSignUp","App","href","performanceMonitor","Map","webVitalsStarted","startTiming","metadata","has","set","startTime","performance","endTiming","get","endTime","duration","completedMetric","getAllMetrics","Array","from","values","clearMetrics","clear","startWebVitalsMonitoring","webVitals","then","webVitals$1","startMonitoring","catch","stopWebVitalsMonitoring","stopMonitoring","thresholds","CLS","good","poor","FID","LCP","FCP","TTFB","INP","getRating","threshold","WebVitalsMonitor","observers","aggregatedMetrics","debouncedProcessMetrics","fn","wait","lastArgs","debouncedFn","args","leading","apply","trailing","Object","defineProperty","enumerable","writable","configurable","debounce","processMetric","observe","entries","entry","layoutShift","hadRecentInput","updateMetric","firstInput","processingStart","lastEntry","navigationEntry","responseStart","maxDuration","observer","disconnect","cancel","getMetrics","entryTypes","callback","PerformanceObserver","list","getEntries","buffered","join","navigationType","getEntriesByType","rating","timingKey","toLowerCase","avg","reduce","a","b","metricBase","currentValue","average","maximum","minimum","sampleCount","rootElement","getElementById","ReactDOM","createRoot","React","StrictMode"],"ignoreList":[],"sources":["../../src/components/Dropdown.tsx","../../src/contexts/ThemeContext.tsx","../../src/hooks/useTheme.ts","../../src/components/ThemeToggle.tsx","../../src/utils/auth.ts","../../src/data/mockUsers.ts","../../src/utils/sentry.ts","../../src/utils/logger.ts","../../src/data/mockData.ts","../../src/contexts/AuthContext.tsx","../../src/hooks/useAuth.ts","../../src/utils/avatarGenerator.ts","../../src/components/Header.tsx","../../src/utils/formatters.ts","../../src/utils/accessibility.ts","../../src/components/MetricCard.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/DashboardLoading.tsx","../../src/components/DashboardNoData.tsx","../../src/components/Dashboard.tsx","../../src/utils/security.ts","../../src/components/Button.tsx","../../src/components/ErrorBoundary.tsx","../../src/config/demo.ts","../../src/components/auth/SignInPage.tsx","../../src/components/auth/SignUpPage.tsx","../../src/components/auth/AuthWrapper.tsx","../../src/App.tsx","../../src/utils/performance.ts","../../src/utils/webVitals.ts","../../src/main.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface DropdownOption {\r\n  value: string;\r\n  label: string;\r\n  subtitle?: string;\r\n}\r\n\r\ninterface DropdownProps {\r\n  options: DropdownOption[];\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder: string;\r\n  className?: string;\r\n}\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({ \r\n  options, \r\n  value, \r\n  onChange, \r\n  placeholder, \r\n  className = '' \r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const selectedOption = options.find(option => option.value === value);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleOptionClick = (optionValue: string) => {\r\n    onChange(optionValue);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={dropdownRef} \r\n      className={`relative ${className}`}\r\n      style={{ overflow: 'visible' }}\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"w-full dropdown-button text-secondary hover:text-primary text-left shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400/50 interactive\"\r\n        style={{\r\n          borderRadius: 'var(--radius-md)',\r\n          padding: 'var(--space-2) var(--space-4)'\r\n        }}\r\n        onClick={handleToggle}\r\n        aria-haspopup=\"listbox\"\r\n        aria-expanded={isOpen}\r\n      >\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"min-w-0 flex-1\">\r\n            {selectedOption ? (\r\n              <div className=\"min-w-0\">\r\n                <div className=\"body-base font-medium text-primary truncate\" style={{ marginBottom: '0' }}>{selectedOption.label}</div>\r\n                {selectedOption.subtitle && (\r\n                  <div className=\"text-caption text-tertiary truncate\" style={{ marginTop: 'var(--space-1)', marginBottom: '0' }}>{selectedOption.subtitle}</div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <span className=\"body-base text-tertiary truncate\">{placeholder}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"ml-2 flex-shrink-0\">\r\n            <svg\r\n              className={`w-4 h-4 text-white/60 transition-transform duration-200 ${\r\n                isOpen ? 'transform rotate-180' : ''\r\n              }`}\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </button>\r\n\r\n      <div \r\n        className={`dropdown-options gradient-bg-primary absolute w-full overflow-hidden transition-all duration-300 ease-in-out ${\r\n          isOpen ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-2 pointer-events-none'\r\n        }`}\r\n        role=\"listbox\"\r\n        style={{ \r\n          zIndex: 99999,\r\n          position: 'absolute',\r\n          top: '100%',\r\n          left: 0,\r\n          right: 0,\r\n          maxHeight: options.length > 4 ? '300px' : 'auto',\r\n          marginTop: 'var(--space-2)',\r\n          borderRadius: 'var(--radius-md)'\r\n        }}\r\n      >\r\n        <div className={options.length > 4 ? 'overflow-y-auto' : ''} style={{ maxHeight: options.length > 4 ? '300px' : 'auto' }}>\r\n          {options.map((option) => (\r\n              <button\r\n                key={option.value}\r\n                type=\"button\"\r\n                className={`dropdown-option w-full text-left focus:outline-none transition-colors duration-150 interactive ${\r\n                  option.value === value ? 'selected' : ''\r\n                }`}\r\n                style={{ padding: 'var(--space-2) var(--space-4)' }}\r\n                onClick={() => handleOptionClick(option.value)}\r\n                role=\"option\"\r\n                aria-selected={option.value === value}\r\n              >\r\n              <div className=\"min-w-0\">\r\n                <div className=\"font-medium truncate text-primary\" style={{ fontSize: 'var(--text-base)' }}>{option.label}</div>\r\n                {option.subtitle && (\r\n                  <div className=\"text-tertiary truncate\" style={{ fontSize: 'var(--text-xs)', marginTop: 'var(--space-1)' }}>{option.subtitle}</div>\r\n                )}\r\n              </div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport { Theme, ThemeContextType, ResolvedTheme } from '../types/theme';\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [theme, setThemeState] = useState<Theme>('dark');\r\n  const [resolvedTheme, setResolvedTheme] = useState<ResolvedTheme>('dark');\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n  // Get system preference\r\n  const getSystemTheme = useCallback((): ResolvedTheme => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  }, []);\r\n\r\n  // Apply theme to DOM with smooth transition and loading state\r\n  const applyTheme = useCallback((newResolvedTheme: ResolvedTheme) => {\r\n    const root = document.documentElement;\r\n    \r\n    // Set loading state\r\n    setIsTransitioning(true);\r\n    \r\n    // Add transition class for smooth theme switching\r\n    root.classList.add('transitioning');\r\n    \r\n    // Switch theme at 1.2s (during deep black phase when opacity is 95%+)\r\n    setTimeout(() => {\r\n      if (newResolvedTheme === 'dark') {\r\n        root.classList.add('dark');\r\n      } else {\r\n        root.classList.remove('dark');\r\n      }\r\n      \r\n      // Force a reflow to ensure DOM changes are applied instantly\r\n      document.body.offsetHeight;\r\n      \r\n      // Force re-computation of all critical styles during black phase\r\n      const criticalElements = document.querySelectorAll('.glass-card, .btn-base, .dropdown-button, .theme-toggle, .blob, .animate-float');\r\n      criticalElements.forEach(el => {\r\n        window.getComputedStyle(el as Element).backgroundColor;\r\n        window.getComputedStyle(el as Element).color;\r\n        window.getComputedStyle(el as Element).borderColor;\r\n      });\r\n    }, 1200); // Deep in black phase (40% of 3s animation)\r\n    \r\n    // Extended transition duration for three-phase transition\r\n    setTimeout(() => {\r\n      root.classList.remove('transitioning');\r\n      setIsTransitioning(false);\r\n      \r\n      // Re-enable animations after transition is complete\r\n      const animatedElements = document.querySelectorAll('.blob, .animate-float, [class*=\"animate-\"]');\r\n      animatedElements.forEach(el => {\r\n        (el as HTMLElement).style.animationPlayState = 'running';\r\n      });\r\n    }, 3500); // Longer total duration for smoother fade out\r\n  }, []);\r\n\r\n  // Resolve the actual theme (light/dark) from the theme setting\r\n  const resolveTheme = useCallback((themeValue: Theme): ResolvedTheme => {\r\n    if (themeValue === 'auto') {\r\n      return getSystemTheme();\r\n    }\r\n    return themeValue as ResolvedTheme;\r\n  }, [getSystemTheme]);\r\n\r\n  // Enhanced preload system to force both themes to be fully computed\r\n  useEffect(() => {\r\n    const root = document.documentElement;\r\n    \r\n    // Disable transitions during preload\r\n    root.classList.add('no-transitions');\r\n    \r\n    // Force browser to compute and cache both light and dark mode CSS\r\n    const forceStyleComputation = () => {\r\n      // Create comprehensive test elements for all component types\r\n      const componentClasses = [\r\n        'preload-themes glass-card btn-base btn-primary btn-secondary btn-danger btn-ghost',\r\n        'dropdown-button dropdown-options dropdown-option theme-toggle header-glass',\r\n        'animate-float animate-pulse-glow blob blob-center performance-insight-card',\r\n        'logo-container logo-container-inverted avatar-gradient-border',\r\n        'interactive glass-card-hover card badge alert nav panel tooltip',\r\n        'form-input-focus custom-radio custom-checkbox custom-select',\r\n        'mobile-menu-overlay sidebar-glass user-profile-dropdown'\r\n      ];\r\n      \r\n      componentClasses.forEach(classes => {\r\n        const testElement = document.createElement('div');\r\n        testElement.style.position = 'absolute';\r\n        testElement.style.visibility = 'hidden';\r\n        testElement.style.pointerEvents = 'none';\r\n        testElement.style.top = '-9999px';\r\n        testElement.className = classes;\r\n        document.body.appendChild(testElement);\r\n        \r\n        // Force light mode computation for all properties\r\n        root.classList.remove('dark');\r\n        const lightStyle = window.getComputedStyle(testElement);\r\n        lightStyle.backgroundColor;\r\n        lightStyle.color;\r\n        lightStyle.borderColor;\r\n        lightStyle.boxShadow;\r\n        lightStyle.backgroundImage;\r\n        lightStyle.backdropFilter;\r\n        lightStyle.filter;\r\n        lightStyle.textShadow;\r\n        lightStyle.stroke;\r\n        lightStyle.fill;\r\n        \r\n        // Force dark mode computation for all properties\r\n        root.classList.add('dark');\r\n        const darkStyle = window.getComputedStyle(testElement);\r\n        darkStyle.backgroundColor;\r\n        darkStyle.color;\r\n        darkStyle.borderColor;\r\n        darkStyle.boxShadow;\r\n        darkStyle.backgroundImage;\r\n        darkStyle.backdropFilter;\r\n        darkStyle.filter;\r\n        darkStyle.textShadow;\r\n        darkStyle.stroke;\r\n        darkStyle.fill;\r\n        \r\n        // Clean up\r\n        document.body.removeChild(testElement);\r\n      });\r\n      \r\n      // Force computation of CSS variables in both modes\r\n      root.classList.remove('dark');\r\n      window.getComputedStyle(root).getPropertyValue('--color-purple-500');\r\n      window.getComputedStyle(root).getPropertyValue('--gradient-bg-primary');\r\n      window.getComputedStyle(root).getPropertyValue('--surface-primary');\r\n      \r\n      root.classList.add('dark');\r\n      window.getComputedStyle(root).getPropertyValue('--color-purple-500');\r\n      window.getComputedStyle(root).getPropertyValue('--gradient-bg-primary');\r\n      window.getComputedStyle(root).getPropertyValue('--surface-primary');\r\n    };\r\n    \r\n    // Multiple passes to ensure complete preloading\r\n    forceStyleComputation();\r\n    \r\n    // Additional delay to ensure CSS is fully processed\r\n    setTimeout(() => {\r\n      forceStyleComputation(); // Second pass\r\n      \r\n      setTimeout(() => {\r\n        const storedTheme = localStorage.getItem('hospitalFinanceTheme') as Theme;\r\n        const initialTheme = storedTheme || 'dark'; // Default to dark mode\r\n        const initialResolvedTheme = resolveTheme(initialTheme);\r\n        \r\n        // Apply initial theme without transition\r\n        if (initialResolvedTheme === 'dark') {\r\n          root.classList.add('dark');\r\n        } else {\r\n          root.classList.remove('dark');\r\n        }\r\n        \r\n        setThemeState(initialTheme);\r\n        setResolvedTheme(initialResolvedTheme);\r\n        \r\n        // Re-enable transitions after complete setup\r\n        setTimeout(() => {\r\n          root.classList.remove('no-transitions');\r\n        }, 200);\r\n      }, 100);\r\n    }, 100);\r\n  }, [resolveTheme]);\r\n\r\n  // Listen for system theme changes\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      const systemTheme = e.matches ? 'dark' : 'light';\r\n      \r\n      // Only update if current theme is 'auto'\r\n      if (theme === 'auto') {\r\n        setResolvedTheme(systemTheme);\r\n        applyTheme(systemTheme);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme, applyTheme]);\r\n\r\n  const setTheme = useCallback((newTheme: Theme) => {\r\n    const newResolvedTheme = resolveTheme(newTheme);\r\n    \r\n    setThemeState(newTheme);\r\n    setResolvedTheme(newResolvedTheme);\r\n    localStorage.setItem('hospitalFinanceTheme', newTheme);\r\n    applyTheme(newResolvedTheme);\r\n  }, [resolveTheme, applyTheme]);\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    if (theme === 'auto') {\r\n      // If auto, switch to the opposite of current resolved theme\r\n      const newTheme = resolvedTheme === 'light' ? 'dark' : 'light';\r\n      setTheme(newTheme);\r\n    } else {\r\n      // Toggle between light and dark\r\n      const newTheme = theme === 'light' ? 'dark' : 'light';\r\n      setTheme(newTheme);\r\n    }\r\n  }, [theme, resolvedTheme, setTheme]);\r\n\r\n  const value: ThemeContextType = {\r\n    theme,\r\n    resolvedTheme,\r\n    toggleTheme,\r\n    setTheme,\r\n    isTransitioning,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n","import { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { ThemeContextType } from '../types/theme';\r\n\r\n/**\r\n * Custom hook to access the theme context for managing light/dark mode.\r\n * \r\n * This hook provides access to the current theme state and methods for\r\n * changing themes. It handles both explicit theme preferences and\r\n * automatic system preference detection.\r\n * \r\n * @description Features:\r\n * - Get current theme preference ('light', 'dark', 'auto')\r\n * - Get resolved theme (actual active theme)\r\n * - Toggle between light and dark themes\r\n * - Set specific theme preference\r\n * - Automatic system preference detection when theme is 'auto'\r\n * - Persistent theme storage in localStorage\r\n * \r\n * @throws {Error} Throws an error if used outside of a ThemeProvider\r\n * \r\n * @returns {ThemeContextType} The theme context containing:\r\n *   - theme: Current theme preference setting\r\n *   - resolvedTheme: Actual active theme (light or dark)\r\n *   - toggleTheme: Function to toggle between light and dark\r\n *   - setTheme: Function to set a specific theme preference\r\n * \r\n * @example\r\n * ```tsx\r\n * function ThemeToggleButton() {\r\n *   const { theme, resolvedTheme, toggleTheme, setTheme } = useTheme();\r\n *   \r\n *   return (\r\n *     <div>\r\n *       <p>Current theme: {theme}</p>\r\n *       <p>Active theme: {resolvedTheme}</p>\r\n *       \r\n *       <button onClick={toggleTheme}>\r\n *         Switch to {resolvedTheme === 'light' ? 'dark' : 'light'} mode\r\n *       </button>\r\n *       \r\n *       <button onClick={() => setTheme('auto')}>\r\n *         Use system preference\r\n *       </button>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n * \r\n * @example\r\n * ```tsx\r\n * function ConditionalStyling() {\r\n *   const { resolvedTheme } = useTheme();\r\n *   \r\n *   const iconColor = resolvedTheme === 'dark' ? '#ffffff' : '#2d1b69';\r\n *   \r\n *   return (\r\n *     <div className={resolvedTheme === 'dark' ? 'dark-styles' : 'light-styles'}>\r\n *       <Icon color={iconColor} />\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  // Ensure hook is used within ThemeProvider\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider. Make sure to wrap your component tree with <ThemeProvider>.');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\n","import React from 'react';\r\nimport { useTheme } from '../hooks/useTheme';\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string;\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\n/**\r\n * Modern glassmorphism theme toggle button with smooth animations.\r\n */\r\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ className = '', size = 'md' }) => {\r\n  const { resolvedTheme, setTheme, isTransitioning } = useTheme();\r\n\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-5 h-5',\r\n    lg: 'w-6 h-6'\r\n  };\r\n\r\n  const iconSize = sizeClasses[size];\r\n\r\n  return (\r\n    <button\r\n      onClick={() => setTheme(resolvedTheme === 'light' ? 'dark' : 'light')}\r\n      disabled={isTransitioning}\r\n      className={`\r\n        theme-toggle relative w-12 h-12 rounded-xl\r\n        text-white/80 hover:text-white\r\n        focus:outline-none focus:ring-2 focus:ring-white/30 focus:ring-offset-2 \r\n        focus:ring-offset-transparent\r\n        group overflow-hidden\r\n        transition-all duration-300 hover:scale-105\r\n        ${isTransitioning ? 'animate-pulse cursor-wait' : ''}\r\n        ${className}\r\n      `}\r\n      style={{\r\n        background: 'linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(139, 92, 246, 0.1))',\r\n        border: '1px solid rgba(168, 85, 247, 0.2)',\r\n        backdropFilter: 'blur(8px)',\r\n        WebkitBackdropFilter: 'blur(8px)',\r\n        zIndex: '30'\r\n      }}\r\n      title={isTransitioning ? 'Switching theme...' : (resolvedTheme === 'light' ? 'Switch to dark mode' : 'Switch to light mode')}\r\n      aria-label={isTransitioning ? 'Switching theme...' : (resolvedTheme === 'light' ? 'Switch to dark mode' : 'Switch to light mode')}\r\n    >\r\n      \r\n      {/* Icon container with smooth transition and loading state */}\r\n      <div className=\"relative z-10 flex items-center justify-center\">\r\n        {isTransitioning ? (\r\n          /* Loading spinner during transition */\r\n          <div className=\"relative\">\r\n            <div className=\"w-5 h-5 border-2 border-white/20 border-t-white rounded-full animate-spin\"></div>\r\n            <div className=\"absolute inset-0 border-2 border-transparent border-t-purple-300 rounded-full animate-spin animation-delay-200\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={`\r\n              transition-all duration-500 transform\r\n              ${resolvedTheme === 'light' ? 'rotate-0 opacity-100' : 'rotate-180 opacity-0 absolute'}\r\n            `}>\r\n              <svg \r\n                className={`${iconSize} drop-shadow-lg`} \r\n                style={{ color: 'var(--color-text-primary)' }}\r\n                fill=\"none\" \r\n                stroke=\"currentColor\" \r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\" \r\n                  strokeWidth={2} \r\n                  d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" \r\n                />\r\n              </svg>\r\n            </div>\r\n            \r\n            <div className={`\r\n              transition-all duration-500 transform\r\n              ${resolvedTheme === 'dark' ? 'rotate-0 opacity-100' : 'rotate-180 opacity-0 absolute'}\r\n            `}>\r\n              <svg \r\n                className={`${iconSize} drop-shadow-lg`} \r\n                style={{ color: 'var(--color-text-primary)' }}\r\n                fill=\"none\" \r\n                stroke=\"currentColor\" \r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\" \r\n                  strokeWidth={2} \r\n                  d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" \r\n                />\r\n              </svg>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n\r\n","/**\r\n * Password validation configuration\r\n */\r\nconst passwordConfig = {\r\n  minLength: 8,\r\n  requireUppercase: true,\r\n  requireLowercase: true,\r\n  requireNumbers: true,\r\n  requireSpecial: true,\r\n  maxLength: 128\r\n};\r\n\r\nexport interface PasswordValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n}\r\n\r\n/**\r\n * Validates a password against security requirements\r\n * @param password The password to validate\r\n * @returns Validation result with error messages if any\r\n */\r\nexport const validatePassword = (password: string): PasswordValidationResult => {\r\n  const errors: string[] = [];\r\n\r\n  // Check for empty password\r\n  if (!password) {\r\n    return {\r\n      isValid: false,\r\n      errors: ['Password is required']\r\n    };\r\n  }\r\n\r\n  // Check length requirements\r\n  if (password.length < passwordConfig.minLength) {\r\n    errors.push(`Password must be at least ${passwordConfig.minLength} characters long`);\r\n  }\r\n  if (password.length > passwordConfig.maxLength) {\r\n    errors.push(`Password cannot be longer than ${passwordConfig.maxLength} characters`);\r\n  }\r\n\r\n  // Check character requirements\r\n  if (passwordConfig.requireUppercase && !/[A-Z]/.test(password)) {\r\n    errors.push('Password must contain at least one uppercase letter');\r\n  }\r\n  if (passwordConfig.requireLowercase && !/[a-z]/.test(password)) {\r\n    errors.push('Password must contain at least one lowercase letter');\r\n  }\r\n  if (passwordConfig.requireNumbers && !/\\d/.test(password)) {\r\n    errors.push('Password must contain at least one number');\r\n  }\r\n  if (passwordConfig.requireSpecial && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n    errors.push('Password must contain at least one special character');\r\n  }\r\n\r\n  // Check for common patterns\r\n  if (/(.)\\1{2,}/.test(password)) {\r\n    errors.push('Password cannot contain repeating characters (3 or more times)');\r\n  }\r\n  if (/12345|qwerty|password|admin/i.test(password)) {\r\n    errors.push('Password contains a common pattern');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Ensures consistent error message formatting\r\n * @param error The error to format\r\n * @returns A user-friendly error message\r\n */\r\nexport const formatAuthError = (error: unknown): string => {\r\n  if (error instanceof Error) {\r\n    // Hide implementation details from users\r\n    if (error.message.includes('Invalid credentials')) {\r\n      return 'Invalid email or password';\r\n    }\r\n    if (error.message.includes('Rate limit')) {\r\n      return 'Too many attempts. Please try again later';\r\n    }\r\n    return 'An error occurred during authentication';\r\n  }\r\n  return 'An unexpected error occurred';\r\n};","import { User, UserRole } from '../types/auth';\r\nimport { validatePassword } from '../utils/auth';\r\n\r\nexport const mockUsers: User[] = [\r\n  {\r\n    id: 'admin-1',\r\n    email: 'admin@hospitalfinance.com',\r\n    name: 'System Administrator',\r\n    role: 'admin',\r\n    createdAt: '2024-01-15T08:00:00Z',\r\n    lastLogin: '2024-12-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: 'owner-1',\r\n    email: 'owner@metrogeneral.com',\r\n    name: 'Sarah Johnson',\r\n    role: 'hospital_owner',\r\n    hospitalIds: ['general-1', 'cardio-1'], // Owns multiple hospitals\r\n    createdAt: '2024-02-01T09:00:00Z',\r\n    lastLogin: '2024-12-14T15:45:00Z'\r\n  },\r\n  {\r\n    id: 'owner-2',\r\n    email: 'owner@childrensmed.com',\r\n    name: 'Dr. Michael Chen',\r\n    role: 'hospital_owner',\r\n    hospitalIds: ['pediatric-1'],\r\n    createdAt: '2024-02-15T10:00:00Z',\r\n    lastLogin: '2024-12-13T12:20:00Z'\r\n  },\r\n  {\r\n    id: 'branch-1',\r\n    email: 'manager@metrogeneral.com',\r\n    name: 'John Doe',\r\n    role: 'branch_owner',\r\n    hospitalId: 'general-1',\r\n    createdAt: '2024-03-01T11:00:00Z',\r\n    lastLogin: '2024-12-15T08:15:00Z'\r\n  },\r\n  {\r\n    id: 'branch-2',\r\n    email: 'manager@heartcenter.com',\r\n    name: 'Dr. Emily Rodriguez',\r\n    role: 'branch_owner',\r\n    hospitalId: 'cardio-1',\r\n    createdAt: '2024-03-10T12:00:00Z',\r\n    lastLogin: '2024-12-14T16:30:00Z'\r\n  },\r\n  {\r\n    id: 'branch-3',\r\n    email: 'manager@childrensmed.com',\r\n    name: 'Lisa Thompson',\r\n    role: 'branch_owner',\r\n    hospitalId: 'pediatric-1',\r\n    createdAt: '2024-03-20T13:00:00Z',\r\n    lastLogin: '2024-12-12T14:45:00Z'\r\n  },\r\n  {\r\n    id: 'branch-4',\r\n    email: 'manager@traumacenter.com',\r\n    name: 'Dr. Robert Kim',\r\n    role: 'branch_owner',\r\n    hospitalId: 'trauma-1',\r\n    createdAt: '2024-04-01T14:00:00Z',\r\n    lastLogin: '2024-12-11T11:20:00Z'\r\n  },\r\n  {\r\n    id: 'admin-2',\r\n    email: 'usama@alviglobal.com',\r\n    name: 'Usama',\r\n    role: 'admin',\r\n    createdAt: '2024-01-10T08:00:00Z',\r\n    lastLogin: '2024-12-18T10:00:00Z'\r\n  }\r\n];\r\n\r\n// Mock authentication service\r\nexport const authService = {\r\n  signIn: async (email: string, password: string): Promise<User> => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Check password strength using proper validation\r\n    const passwordValidation = validatePassword(password);\r\n    if (!passwordValidation.isValid) {\r\n      throw new Error(passwordValidation.errors[0]);\r\n    }\r\n    \r\n    const user = mockUsers.find(u => u.email === email);\r\n    if (!user) {\r\n      throw new Error('No account found with this email address');\r\n    }\r\n    \r\n    // Simulate rate limiting (in real app, this would be server-side)\r\n    const attemptKey = `login_attempts_${email}`;\r\n    const attempts = parseInt(localStorage.getItem(attemptKey) || '0');\r\n    if (attempts >= 5) {\r\n      const lockoutTime = localStorage.getItem(`lockout_${email}`);\r\n      if (lockoutTime && Date.now() - parseInt(lockoutTime) < 15 * 60 * 1000) {\r\n        throw new Error('Account temporarily locked due to too many failed attempts. Try again in 15 minutes.');\r\n      } else {\r\n        // Reset attempts after lockout period\r\n        localStorage.removeItem(attemptKey);\r\n        localStorage.removeItem(`lockout_${email}`);\r\n      }\r\n    }\r\n    \r\n    // For demo purposes, we'll accept any password that meets strength requirements\r\n    // In a real app, you would hash and verify against stored password hash\r\n    const demoPasswords = [\r\n      'UsamaHF2024!',\r\n      'OwnerMG2024!', \r\n      'ManagerMG2024!',\r\n      'Demo123!@#' // Added a demo password that meets requirements\r\n    ];\r\n    \r\n    if (!demoPasswords.includes(password)) {\r\n      // Increment failed attempts\r\n      localStorage.setItem(attemptKey, (attempts + 1).toString());\r\n      if (attempts + 1 >= 5) {\r\n        localStorage.setItem(`lockout_${email}`, Date.now().toString());\r\n      }\r\n      throw new Error('Incorrect password');\r\n    }\r\n    \r\n    // Clear failed attempts on successful login\r\n    localStorage.removeItem(attemptKey);\r\n    localStorage.removeItem(`lockout_${email}`);\r\n    \r\n    // Update last login time\r\n    user.lastLogin = new Date().toISOString();\r\n    return user;\r\n  },\r\n  \r\n  signUp: async (userData: {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    role: UserRole;\r\n    hospitalId?: string;\r\n    hospitalIds?: string[];\r\n  }): Promise<User> => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1200));\r\n    \r\n    // Check if user already exists\r\n    const existingUser = mockUsers.find(u => u.email === userData.email);\r\n    if (existingUser) {\r\n      throw new Error('User with this email already exists');\r\n    }\r\n    \r\n    // Create new user with proper handling of optional properties\r\n    const newUser: User = {\r\n      id: `user-${Date.now()}`,\r\n      email: userData.email,\r\n      name: userData.name,\r\n      role: userData.role,\r\n      createdAt: new Date().toISOString(),\r\n      lastLogin: new Date().toISOString(),\r\n      ...(userData.hospitalId && { hospitalId: userData.hospitalId }),\r\n      ...(userData.hospitalIds && { hospitalIds: userData.hospitalIds })\r\n    };\r\n    \r\n    // Add to mock users (in real app, this would be API call)\r\n    mockUsers.push(newUser);\r\n    \r\n    return newUser;\r\n  }\r\n};\r\n\r\n// Role descriptions for UI\r\nexport const roleDescriptions = {\r\n  admin: {\r\n    title: 'System Administrator',\r\n    description: 'Full access to all hospitals and system-wide analytics',\r\n    permissions: ['View all hospitals', 'Manage users', 'System configuration']\r\n  },\r\n  hospital_owner: {\r\n    title: 'Hospital Owner',\r\n    description: 'Access to owned hospitals across multiple locations',\r\n    permissions: ['Manage owned hospitals', 'View financial reports', 'Manage branch managers']\r\n  },\r\n  // Internal role name is branch_owner but displayed as Branch Manager for consistency\r\n  branch_owner: {\r\n    title: 'Branch Manager',\r\n    description: 'Access to specific hospital location data only',\r\n    permissions: ['View branch data', 'Generate reports', 'Monitor performance']\r\n  }\r\n};\r\n\r\n","import * as Sentry from '@sentry/react';\r\nimport { BrowserTracing } from '@sentry/tracing';\r\nimport type { Breadcrumb, Integration } from '@sentry/types';\r\nimport type { BrowserOptions } from '@sentry/browser';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * Sentry integration cast function to handle type mismatches\r\n */\r\nconst asSentryIntegration = (integration: unknown): Integration => integration as Integration;\r\n\r\n/**\r\n * Initialize Sentry for error tracking and performance monitoring.\r\n * \r\n * @param dsn - Sentry DSN (Data Source Name)\r\n * @param environment - Current environment (development, staging, production)\r\n */\r\nexport const initializeSentry = (\r\n  dsn: string,\r\n  environment: string = process.env.NODE_ENV ?? 'development'\r\n): void => {\r\n  try {\r\n    const options: BrowserOptions = {\r\n      dsn,\r\n      environment,\r\n      integrations: [asSentryIntegration(new BrowserTracing())],\r\n      tracesSampleRate: environment === 'production' ? 0.1 : 1.0,\r\n      \r\n      // Capture errors based on environment\r\n      beforeSend(event) {\r\n        // Only send errors in production, or if explicitly enabled in other environments\r\n        if (environment === 'production' || process.env.ENABLE_ERROR_TRACKING) {\r\n          return event;\r\n        }\r\n        return null;\r\n      },\r\n      \r\n      // Set max breadcrumbs\r\n      maxBreadcrumbs: 50\r\n    };\r\n\r\n    Sentry.init(options);\r\n\r\n    logger.info('Sentry initialized successfully', {\r\n      context: 'Sentry',\r\n      data: { environment }\r\n    });\r\n  } catch (error) {\r\n    logger.error('Failed to initialize Sentry', {\r\n      context: 'Sentry',\r\n      data: { error }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Capture an error with Sentry\r\n * \r\n * @param error - Error object\r\n * @param context - Additional context\r\n */\r\nexport const captureError = (\r\n  error: Error,\r\n  context?: Record<string, unknown>\r\n): void => {\r\n  Sentry.withScope(scope => {\r\n    if (context) {\r\n      scope.setExtras(context);\r\n    }\r\n    Sentry.captureException(error);\r\n  });\r\n};\r\n\r\n/**\r\n * Start a new Sentry transaction for performance monitoring\r\n * \r\n * @param name - Transaction name\r\n * @param options - Additional transaction options\r\n */\r\nexport const startTransaction = (\r\n  name: string,\r\n  options?: Record<string, unknown>\r\n): void => {\r\n  Sentry.addBreadcrumb({\r\n    message: `Started transaction: ${name}`,\r\n    category: 'performance',\r\n    level: 'info',\r\n    data: {\r\n      ...options,\r\n      timestamp: Date.now()\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Track user actions with Sentry breadcrumbs\r\n * \r\n * @param message - Breadcrumb message\r\n * @param category - Breadcrumb category\r\n * @param data - Additional data\r\n */\r\nexport const addBreadcrumb = (\r\n  message: string,\r\n  category?: string,\r\n  data?: Record<string, unknown>\r\n): void => {\r\n  const breadcrumb: Breadcrumb = {\r\n    message,\r\n    category: category ?? 'default',\r\n    level: 'info',\r\n    data: data ?? {}\r\n  };\r\n  \r\n  Sentry.addBreadcrumb(breadcrumb);\r\n};","import { captureError, addBreadcrumb } from './sentry';\r\n\r\n// Sentry severity levels\r\nexport enum Severity {\r\n  Debug = 'debug',\r\n  Info = 'info',\r\n  Warning = 'warning',\r\n  Error = 'error',\r\n  Fatal = 'fatal'\r\n}\r\n\r\n/**\r\n * Available logging levels for the application.\r\n * \r\n * @type LogLevel\r\n * - `info`: General information and debugging\r\n * - `warn`: Warning messages for potential issues\r\n * - `error`: Error messages for failures and exceptions\r\n */\r\nexport type LogLevel = 'info' | 'warn' | 'error';\r\n\r\n/**\r\n * Options for log entries to provide additional context and data.\r\n * \r\n * @interface LogOptions\r\n */\r\ninterface LogOptions {\r\n  /** Context identifier (e.g., component name, module) */\r\n  context?: string;\r\n  \r\n  /** Additional data to log (objects, arrays, etc.) */\r\n  data?: unknown;\r\n}\r\n\r\n/**\r\n * Centralized logging system for the Hospital Finance Dashboard.\r\n * \r\n * Features:\r\n * - Environment-aware logging (development vs production)\r\n * - Structured log formatting with timestamps\r\n * - Context-aware logging with component/module identification\r\n * - Automatic error handling for production environments\r\n * - Future-ready for external logging service integration\r\n * - Type-safe logging methods with proper TypeScript support\r\n * \r\n * The logger automatically adjusts behavior based on the environment:\r\n * - Development: All logs are output to console with full detail\r\n * - Production: Only errors are logged, with structured format for monitoring\r\n * \r\n * @class Logger\r\n * @example\r\n * ```typescript\r\n * import { logger } from '../utils/logger';\r\n * \r\n * // Basic logging\r\n * logger.info('User signed in successfully');\r\n * logger.warn('Slow API response detected');\r\n * logger.error('Failed to load user data');\r\n * \r\n * // Contextual logging\r\n * logger.info('Dashboard data loaded', {\r\n *   context: 'Dashboard',\r\n *   data: { hospitalId: 'general-001', recordCount: 150 }\r\n * });\r\n * \r\n * // Error logging with context\r\n * logger.error('Authentication failed', {\r\n *   context: 'AuthService',\r\n *   data: { email: 'user@example.com', errorCode: 'INVALID_CREDENTIALS' }\r\n * });\r\n * ```\r\n */\r\nclass Logger {\r\n  /** Flag indicating if running in development mode */\r\n  private isDev = import.meta.env.DEV;\r\n\r\n  /**\r\n   * Formats a log message with timestamp, level, and context.\r\n   * \r\n   * @private\r\n   * @param level - The log level\r\n   * @param message - The log message\r\n   * @param options - Additional logging options\r\n   * @returns Formatted log message string\r\n   */\r\n  private formatMessage(level: LogLevel, message: string, options?: LogOptions): string {\r\n    const timestamp = new Date().toISOString();\r\n    const context = options?.context ? `[${options.context}]` : '';\r\n    return `${timestamp} ${level.toUpperCase()} ${context} ${message}`;\r\n  }\r\n\r\n  /**\r\n   * Core logging method that handles all log levels.\r\n   * \r\n   * @private\r\n   * @param level - The log level (info, warn, error)\r\n   * @param message - The log message\r\n   * @param options - Additional logging options\r\n   */\r\n  private log(level: LogLevel, message: string, options?: LogOptions): void {\r\n    // Always send to error tracking in production\r\n    if (!this.isDev) {\r\n      if (level === 'error') {\r\n        this.handleProductionError(message, options?.data);\r\n      } else {\r\n        // Add breadcrumb for non-error logs in production\r\n        addBreadcrumb(message, options?.context, options?.data as Record<string, unknown>);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const formattedMessage = this.formatMessage(level, message, options);\r\n\r\n    switch (level) {\r\n      case 'info':\r\n        console.log(formattedMessage, options?.data || '');\r\n        break;\r\n      case 'warn':\r\n        console.warn(formattedMessage, options?.data || '');\r\n        // Add warning breadcrumb in development too\r\n        addBreadcrumb(message, options?.context, options?.data as Record<string, unknown>);\r\n        break;\r\n      case 'error':\r\n        console.error(formattedMessage, options?.data || '');\r\n        this.handleProductionError(message, options?.data);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles error logging in production environment.\r\n   * Formats errors for external monitoring services.\r\n   * \r\n   * @private\r\n   * @param message - The error message\r\n   * @param data - Additional error data\r\n   */\r\n  private handleProductionError(message: string, data?: unknown): void {\r\n    // Send error to Sentry\r\n    if (data instanceof Error) {\r\n      captureError(data, { message });\r\n    } else {\r\n      captureError(new Error(message), { data });\r\n    }\r\n\r\n    // Also log in structured format for log aggregators\r\n    console.error({\r\n      message,\r\n      timestamp: new Date().toISOString(),\r\n      environment: 'production',\r\n      data\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logs an informational message.\r\n   * Only outputs in development environment.\r\n   * \r\n   * @param message - The message to log\r\n   * @param options - Additional logging options\r\n   * \r\n   * @example\r\n   * ```typescript\r\n   * logger.info('User data loaded successfully');\r\n   * logger.info('API call completed', {\r\n   *   context: 'DataService',\r\n   *   data: { endpoint: '/api/users', duration: '250ms' }\r\n   * });\r\n   * ```\r\n   */\r\n  info(message: string, options?: LogOptions): void {\r\n    this.log('info', message, options);\r\n  }\r\n\r\n  /**\r\n   * Logs a warning message.\r\n   * Only outputs in development environment.\r\n   * \r\n   * @param message - The warning message to log\r\n   * @param options - Additional logging options\r\n   * \r\n   * @example\r\n   * ```typescript\r\n   * logger.warn('API response time is slow');\r\n   * logger.warn('Deprecated function used', {\r\n   *   context: 'LegacyComponent',\r\n   *   data: { functionName: 'oldCalculateTotal' }\r\n   * });\r\n   * ```\r\n   */\r\n  warn(message: string, options?: LogOptions): void {\r\n    this.log('warn', message, options);\r\n  }\r\n\r\n  /**\r\n   * Logs an error message.\r\n   * Outputs in both development and production environments.\r\n   * In production, errors are formatted for external monitoring.\r\n   * \r\n   * @param message - The error message to log\r\n   * @param options - Additional logging options\r\n   * \r\n   * @example\r\n   * ```typescript\r\n   * logger.error('Failed to authenticate user');\r\n   * logger.error('Database connection failed', {\r\n   *   context: 'DatabaseService',\r\n   *   data: { connectionString: 'mongodb://localhost', error: e.message }\r\n   * });\r\n   * ```\r\n   */\r\n  error(message: string, options?: LogOptions): void {\r\n    this.log('error', message, options);\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton logger instance for application-wide logging.\r\n * \r\n * This is the main logger instance that should be used throughout\r\n * the application for consistent logging behavior.\r\n * \r\n * @constant\r\n * @example\r\n * ```typescript\r\n * import { logger } from '../utils/logger';\r\n * \r\n * // Use in any component or utility\r\n * logger.info('Operation completed successfully');\r\n * logger.error('Operation failed', { context: 'ComponentName' });\r\n * ```\r\n */\r\nexport const logger = new Logger();","import { \r\n  FinancialMetric, \r\n  RevenueData, \r\n  DepartmentFinance, \r\n  PatientMetrics, \r\n  ExpenseBreakdown, \r\n  CashFlowData,\r\n  Hospital,\r\n  HospitalData\r\n} from '../types/finance';\r\n\r\nexport const financialMetrics: FinancialMetric[] = [\r\n  {\r\n    id: 'total-revenue',\r\n    title: 'Total Revenue',\r\n    value: 12500000,\r\n    change: 8.5,\r\n    changeType: 'increase',\r\n    period: 'vs last month',\r\n    format: 'currency'\r\n  },\r\n  {\r\n    id: 'net-profit',\r\n    title: 'Net Profit',\r\n    value: 2100000,\r\n    change: 12.3,\r\n    changeType: 'increase',\r\n    period: 'vs last month',\r\n    format: 'currency'\r\n  },\r\n  {\r\n    id: 'profit-margin',\r\n    title: 'Profit Margin',\r\n    value: 16.8,\r\n    change: 2.1,\r\n    changeType: 'increase',\r\n    period: 'vs last month',\r\n    format: 'percentage'\r\n  },\r\n  {\r\n    id: 'operating-expenses',\r\n    title: 'Operating Expenses',\r\n    value: 9800000,\r\n    change: 3.2,\r\n    changeType: 'increase',\r\n    period: 'vs last month',\r\n    format: 'currency'\r\n  }\r\n];\r\n\r\nexport const revenueData: RevenueData[] = [\r\n  { month: 'Jan', revenue: 8500000, expenses: 6200000, netIncome: 2300000 },\r\n  { month: 'Feb', revenue: 9200000, expenses: 7100000, netIncome: 2100000 },\r\n  { month: 'Mar', revenue: 15600000, expenses: 11800000, netIncome: 3800000 },\r\n  { month: 'Apr', revenue: 7800000, expenses: 5900000, netIncome: 1900000 },\r\n  { month: 'May', revenue: 18200000, expenses: 13500000, netIncome: 4700000 },\r\n  { month: 'Jun', revenue: 6900000, expenses: 5400000, netIncome: 1500000 },\r\n  { month: 'Jul', revenue: 21400000, expenses: 15800000, netIncome: 5600000 },\r\n  { month: 'Aug', revenue: 11200000, expenses: 8600000, netIncome: 2600000 },\r\n  { month: 'Sep', revenue: 16800000, expenses: 12200000, netIncome: 4600000 },\r\n  { month: 'Oct', revenue: 9600000, expenses: 7300000, netIncome: 2300000 },\r\n  { month: 'Nov', revenue: 19500000, expenses: 14100000, netIncome: 5400000 },\r\n  { month: 'Dec', revenue: 13700000, expenses: 10200000, netIncome: 3500000 }\r\n];\r\n\r\nexport const departmentFinances: DepartmentFinance[] = [\r\n  {\r\n    department: 'Emergency',\r\n    revenue: 3200000,\r\n    expenses: 2400000,\r\n    profit: 800000,\r\n    profitMargin: 25.0\r\n  },\r\n  {\r\n    department: 'Surgery',\r\n    revenue: 4500000,\r\n    expenses: 3100000,\r\n    profit: 1400000,\r\n    profitMargin: 31.1\r\n  },\r\n  {\r\n    department: 'Cardiology',\r\n    revenue: 2800000,\r\n    expenses: 1900000,\r\n    profit: 900000,\r\n    profitMargin: 32.1\r\n  },\r\n  {\r\n    department: 'Oncology',\r\n    revenue: 1900000,\r\n    expenses: 1400000,\r\n    profit: 500000,\r\n    profitMargin: 26.3\r\n  },\r\n  {\r\n    department: 'Pediatrics',\r\n    revenue: 1100000,\r\n    expenses: 800000,\r\n    profit: 300000,\r\n    profitMargin: 27.3\r\n  }\r\n];\r\n\r\nexport const patientMetrics: PatientMetrics = {\r\n  totalPatients: 15420,\r\n  inpatients: 2180,\r\n  outpatients: 11850,\r\n  emergencyVisits: 1390,\r\n  averageStayDuration: 4.2,\r\n  occupancyRate: 87.5\r\n};\r\n\r\nexport const expenseBreakdown: ExpenseBreakdown[] = [\r\n  { category: 'Salaries & Benefits', amount: 5200000, percentage: 53.1, color: '#f59e0b' }, // Amber - main expense\r\n  { category: 'Medical Supplies', amount: 1800000, percentage: 18.4, color: '#3b82f6' }, // Blue - medical\r\n  { category: 'Equipment', amount: 1200000, percentage: 12.2, color: '#22c55e' }, // Green - equipment\r\n  { category: 'Utilities', amount: 600000, percentage: 6.1, color: '#06b6d4' }, // Cyan - utilities\r\n  { category: 'Maintenance', amount: 500000, percentage: 5.1, color: '#ef4444' }, // Red - maintenance\r\n  { category: 'Other', amount: 500000, percentage: 5.1, color: '#14b8a6' } // Teal - other\r\n];\r\n\r\nexport const cashFlowData: CashFlowData[] = [\r\n  {\r\n    date: '2024-01',\r\n    operatingCashFlow: 2100000,\r\n    investingCashFlow: -800000,\r\n    financingCashFlow: -300000,\r\n    netCashFlow: 1000000\r\n  },\r\n  {\r\n    date: '2024-02',\r\n    operatingCashFlow: 1950000,\r\n    investingCashFlow: -200000,\r\n    financingCashFlow: -400000,\r\n    netCashFlow: 1350000\r\n  },\r\n  {\r\n    date: '2024-03',\r\n    operatingCashFlow: 2300000,\r\n    investingCashFlow: -1200000,\r\n    financingCashFlow: -200000,\r\n    netCashFlow: 900000\r\n  },\r\n  {\r\n    date: '2024-04',\r\n    operatingCashFlow: 2200000,\r\n    investingCashFlow: -300000,\r\n    financingCashFlow: -350000,\r\n    netCashFlow: 1550000\r\n  },\r\n  {\r\n    date: '2024-05',\r\n    operatingCashFlow: 2500000,\r\n    investingCashFlow: -150000,\r\n    financingCashFlow: -300000,\r\n    netCashFlow: 2050000\r\n  },\r\n  {\r\n    date: '2024-06',\r\n    operatingCashFlow: 2350000,\r\n    investingCashFlow: -600000,\r\n    financingCashFlow: -250000,\r\n    netCashFlow: 1500000\r\n  }\r\n];\r\n\r\nexport const hospitals: Hospital[] = [\r\n  {\r\n    id: 'general-1',\r\n    name: 'Metro General Hospital',\r\n    location: 'Downtown',\r\n    type: 'General'\r\n  },\r\n  {\r\n    id: 'cardio-1',\r\n    name: 'Heart & Vascular Institute',\r\n    location: 'Midtown',\r\n    type: 'Specialty'\r\n  },\r\n  {\r\n    id: 'pediatric-1',\r\n    name: 'Children\\'s Medical Center',\r\n    location: 'Westside',\r\n    type: 'Pediatric'\r\n  },\r\n  {\r\n    id: 'trauma-1',\r\n    name: 'Regional Trauma Center',\r\n    location: 'Northside',\r\n    type: 'Trauma'\r\n  }\r\n];\r\n\r\nexport const availableYears = [2021, 2022, 2023, 2024];\r\n\r\n/**\r\n * Generates a random variation of a base value within a specified percentage range.\r\n * \r\n * @description This function creates realistic variations in financial data by applying\r\n * a random percentage change to a base value. The variation is symmetrical (both positive\r\n * and negative changes are possible).\r\n * \r\n * @param {number} baseValue - The base value to vary\r\n * @param {number} [variationPercent=15] - The maximum percentage variation (default: 15%)\r\n * @returns {number} A rounded number representing the varied value\r\n * \r\n * @example\r\n * ```typescript\r\n * const baseRevenue = 1000000;\r\n * const variedRevenue = generateVariation(baseRevenue, 20); // Could be between 800,000 and 1,200,000\r\n * ```\r\n */\r\nconst generateVariation = (baseValue: number, variationPercent: number = 15): number => {\r\n  const variation = baseValue * (variationPercent / 100);\r\n  return Math.round(baseValue + (Math.random() - 0.5) * 2 * variation);\r\n};\r\n\r\n// Generate hospital data for all combinations\r\nexport const hospitalDataByYear: HospitalData[] = [];\r\n\r\nhospitals.forEach(hospital => {\r\n  availableYears.forEach(year => {\r\n    const yearMultiplier = year === 2024 ? 1 : year === 2023 ? 0.92 : year === 2022 ? 0.85 : 0.78;\r\n    const hospitalMultiplier = hospital.type === 'General' ? 1 : \r\n                               hospital.type === 'Specialty' ? 0.7 : \r\n                               hospital.type === 'Pediatric' ? 0.5 : 0.8;\r\n\r\n    const baseMultiplier = yearMultiplier * hospitalMultiplier;\r\n\r\n    const hospitalData: HospitalData = {\r\n      hospitalId: hospital.id,\r\n      year: year,\r\n      lastUpdated: new Date(year, 11, 31).toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n      }),\r\n      financialMetrics: [\r\n        {\r\n          id: 'total-revenue',\r\n          title: 'Total Revenue',\r\n          value: generateVariation(12500000 * baseMultiplier),\r\n          change: generateVariation(8.5, 50),\r\n          changeType: Math.random() > 0.3 ? 'increase' : 'decrease',\r\n          period: 'vs last month',\r\n          format: 'currency'\r\n        },\r\n        {\r\n          id: 'net-profit',\r\n          title: 'Net Profit',\r\n          value: generateVariation(2100000 * baseMultiplier),\r\n          change: generateVariation(12.3, 60),\r\n          changeType: Math.random() > 0.25 ? 'increase' : 'decrease',\r\n          period: 'vs last month',\r\n          format: 'currency'\r\n        },\r\n        {\r\n          id: 'profit-margin',\r\n          title: 'Profit Margin',\r\n          value: generateVariation(16.8, 25),\r\n          change: generateVariation(2.1, 80),\r\n          changeType: Math.random() > 0.4 ? 'increase' : 'decrease',\r\n          period: 'vs last month',\r\n          format: 'percentage'\r\n        },\r\n        {\r\n          id: 'operating-expenses',\r\n          title: 'Operating Expenses',\r\n          value: generateVariation(9800000 * baseMultiplier),\r\n          change: generateVariation(3.2, 40),\r\n          changeType: Math.random() > 0.6 ? 'increase' : 'decrease',\r\n          period: 'vs last month',\r\n          format: 'currency'\r\n        }\r\n      ],\r\n      revenueData: [\r\n        { month: 'Jan', revenue: generateVariation(8500000 * baseMultiplier), expenses: generateVariation(6200000 * baseMultiplier), netIncome: generateVariation(2300000 * baseMultiplier) },\r\n        { month: 'Feb', revenue: generateVariation(9200000 * baseMultiplier), expenses: generateVariation(7100000 * baseMultiplier), netIncome: generateVariation(2100000 * baseMultiplier) },\r\n        { month: 'Mar', revenue: generateVariation(15600000 * baseMultiplier), expenses: generateVariation(11800000 * baseMultiplier), netIncome: generateVariation(3800000 * baseMultiplier) },\r\n        { month: 'Apr', revenue: generateVariation(7800000 * baseMultiplier), expenses: generateVariation(5900000 * baseMultiplier), netIncome: generateVariation(1900000 * baseMultiplier) },\r\n        { month: 'May', revenue: generateVariation(18200000 * baseMultiplier), expenses: generateVariation(13500000 * baseMultiplier), netIncome: generateVariation(4700000 * baseMultiplier) },\r\n        { month: 'Jun', revenue: generateVariation(6900000 * baseMultiplier), expenses: generateVariation(5400000 * baseMultiplier), netIncome: generateVariation(1500000 * baseMultiplier) },\r\n        { month: 'Jul', revenue: generateVariation(21400000 * baseMultiplier), expenses: generateVariation(15800000 * baseMultiplier), netIncome: generateVariation(5600000 * baseMultiplier) },\r\n        { month: 'Aug', revenue: generateVariation(11200000 * baseMultiplier), expenses: generateVariation(8600000 * baseMultiplier), netIncome: generateVariation(2600000 * baseMultiplier) },\r\n        { month: 'Sep', revenue: generateVariation(16800000 * baseMultiplier), expenses: generateVariation(12200000 * baseMultiplier), netIncome: generateVariation(4600000 * baseMultiplier) },\r\n        { month: 'Oct', revenue: generateVariation(9600000 * baseMultiplier), expenses: generateVariation(7300000 * baseMultiplier), netIncome: generateVariation(2300000 * baseMultiplier) },\r\n        { month: 'Nov', revenue: generateVariation(19500000 * baseMultiplier), expenses: generateVariation(14100000 * baseMultiplier), netIncome: generateVariation(5400000 * baseMultiplier) },\r\n        { month: 'Dec', revenue: generateVariation(13700000 * baseMultiplier), expenses: generateVariation(10200000 * baseMultiplier), netIncome: generateVariation(3500000 * baseMultiplier) }\r\n      ],\r\n      departmentFinances: (() => {\r\n        const emergencyRevenue = generateVariation(3200000 * baseMultiplier);\r\n        const emergencyExpenses = generateVariation(2400000 * baseMultiplier);\r\n        const emergencyProfit = emergencyRevenue - emergencyExpenses;\r\n        \r\n        return [\r\n        {\r\n          department: 'Emergency',\r\n          revenue: emergencyRevenue,\r\n          expenses: emergencyExpenses,\r\n          profit: emergencyProfit,\r\n          profitMargin: (emergencyProfit / emergencyRevenue) * 100\r\n        },\r\n        (() => {\r\n          const surgeryRevenue = generateVariation(4500000 * baseMultiplier);\r\n          const surgeryExpenses = generateVariation(3100000 * baseMultiplier);\r\n          const surgeryProfit = surgeryRevenue - surgeryExpenses;\r\n          \r\n          return {\r\n            department: 'Surgery',\r\n            revenue: surgeryRevenue,\r\n            expenses: surgeryExpenses,\r\n            profit: surgeryProfit,\r\n            profitMargin: (surgeryProfit / surgeryRevenue) * 100\r\n          };\r\n        })(),\r\n        (() => {\r\n          const cardiologyRevenue = generateVariation(2800000 * baseMultiplier);\r\n          const cardiologyExpenses = generateVariation(1900000 * baseMultiplier);\r\n          const cardiologyProfit = cardiologyRevenue - cardiologyExpenses;\r\n          \r\n          return {\r\n            department: 'Cardiology',\r\n            revenue: cardiologyRevenue,\r\n            expenses: cardiologyExpenses,\r\n            profit: cardiologyProfit,\r\n            profitMargin: (cardiologyProfit / cardiologyRevenue) * 100\r\n          };\r\n        })(),\r\n        (() => {\r\n          const deptRevenue = generateVariation(1900000 * baseMultiplier);\r\n          const deptExpenses = generateVariation(1400000 * baseMultiplier);\r\n          const deptProfit = deptRevenue - deptExpenses;\r\n          \r\n          return {\r\n            department: hospital.type === 'Pediatric' ? 'Pediatrics' : 'Oncology',\r\n            revenue: deptRevenue,\r\n            expenses: deptExpenses,\r\n            profit: deptProfit,\r\n            profitMargin: (deptProfit / deptRevenue) * 100\r\n          };\r\n        })(),\r\n        (() => {\r\n          const orthoRevenue = generateVariation(1100000 * baseMultiplier);\r\n          const orthoExpenses = generateVariation(800000 * baseMultiplier);\r\n          const orthoProfit = orthoRevenue - orthoExpenses;\r\n          \r\n          return {\r\n            department: hospital.type === 'Trauma' ? 'Trauma' : 'Orthopedics',\r\n            revenue: orthoRevenue,\r\n            expenses: orthoExpenses,\r\n            profit: orthoProfit,\r\n            profitMargin: (orthoProfit / orthoRevenue) * 100\r\n          };\r\n        })()\r\n      ]; })(),\r\n      patientMetrics: {\r\n        totalPatients: generateVariation(15420 * baseMultiplier, 20),\r\n        inpatients: generateVariation(2180 * baseMultiplier, 25),\r\n        outpatients: generateVariation(11850 * baseMultiplier, 20),\r\n        emergencyVisits: generateVariation(1390 * baseMultiplier, 30),\r\n        averageStayDuration: generateVariation(4.2 * 10, 15) / 10,\r\n        occupancyRate: generateVariation(87.5, 10)\r\n      },\r\n      expenseBreakdown: (() => {\r\n        const salariesAmount = generateVariation(5200000 * baseMultiplier);\r\n        const suppliesAmount = generateVariation(1800000 * baseMultiplier);\r\n        const equipmentAmount = generateVariation(1200000 * baseMultiplier);\r\n        const utilitiesAmount = generateVariation(600000 * baseMultiplier);\r\n        const maintenanceAmount = generateVariation(500000 * baseMultiplier);\r\n        const otherAmount = generateVariation(500000 * baseMultiplier);\r\n        \r\n        const totalAmount = salariesAmount + suppliesAmount + equipmentAmount + utilitiesAmount + maintenanceAmount + otherAmount;\r\n        \r\n        return [\r\n          { category: 'Salaries & Benefits', amount: salariesAmount, percentage: Math.round((salariesAmount / totalAmount) * 100 * 10) / 10, color: '#f59e0b' },\r\n          { category: 'Medical Supplies', amount: suppliesAmount, percentage: Math.round((suppliesAmount / totalAmount) * 100 * 10) / 10, color: '#3b82f6' },\r\n          { category: 'Equipment', amount: equipmentAmount, percentage: Math.round((equipmentAmount / totalAmount) * 100 * 10) / 10, color: '#22c55e' },\r\n          { category: 'Utilities', amount: utilitiesAmount, percentage: Math.round((utilitiesAmount / totalAmount) * 100 * 10) / 10, color: '#06b6d4' },\r\n          { category: 'Maintenance', amount: maintenanceAmount, percentage: Math.round((maintenanceAmount / totalAmount) * 100 * 10) / 10, color: '#ef4444' },\r\n          { category: 'Other', amount: otherAmount, percentage: Math.round((otherAmount / totalAmount) * 100 * 10) / 10, color: '#14b8a6' }\r\n        ];\r\n      })(),\r\n      cashFlowData: [\r\n        {\r\n          date: `${year}-01`,\r\n          operatingCashFlow: generateVariation(2100000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-800000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-300000 * baseMultiplier),\r\n          netCashFlow: generateVariation(1000000 * baseMultiplier)\r\n        },\r\n        {\r\n          date: `${year}-02`,\r\n          operatingCashFlow: generateVariation(1950000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-200000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-400000 * baseMultiplier),\r\n          netCashFlow: generateVariation(1350000 * baseMultiplier)\r\n        },\r\n        {\r\n          date: `${year}-03`,\r\n          operatingCashFlow: generateVariation(2300000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-1200000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-200000 * baseMultiplier),\r\n          netCashFlow: generateVariation(900000 * baseMultiplier)\r\n        },\r\n        {\r\n          date: `${year}-04`,\r\n          operatingCashFlow: generateVariation(2200000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-300000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-350000 * baseMultiplier),\r\n          netCashFlow: generateVariation(1550000 * baseMultiplier)\r\n        },\r\n        {\r\n          date: `${year}-05`,\r\n          operatingCashFlow: generateVariation(2500000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-150000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-300000 * baseMultiplier),\r\n          netCashFlow: generateVariation(2050000 * baseMultiplier)\r\n        },\r\n        {\r\n          date: `${year}-06`,\r\n          operatingCashFlow: generateVariation(2350000 * baseMultiplier),\r\n          investingCashFlow: generateVariation(-600000 * baseMultiplier),\r\n          financingCashFlow: generateVariation(-250000 * baseMultiplier),\r\n          netCashFlow: generateVariation(1500000 * baseMultiplier)\r\n        }\r\n      ]\r\n    };\r\n\r\n    hospitalDataByYear.push(hospitalData);\r\n  });\r\n});\r\n\r\n/**\r\n * Retrieves hospital financial data for a specific hospital and year.\r\n * \r\n * @description This function searches through the generated hospital data to find\r\n * matching records for a specific hospital ID and year combination. The data includes\r\n * financial metrics, revenue data, department finances, patient metrics, expense breakdown,\r\n * and cash flow data.\r\n * \r\n * @param {string} hospitalId - The unique identifier of the hospital\r\n * @param {number} year - The year for which to retrieve data (e.g., 2024)\r\n * @returns {HospitalData | undefined} The hospital data object if found, undefined otherwise\r\n * \r\n * @example\r\n * ```typescript\r\n * const hospitalData = getHospitalData('general-1', 2024);\r\n * if (hospitalData) {\r\n *   console.log('Total Revenue:', hospitalData.financialMetrics[0].value);\r\n *   console.log('Last Updated:', hospitalData.lastUpdated);\r\n * }\r\n * ```\r\n */\r\nexport const getHospitalData = (hospitalId: string, year: number): HospitalData | undefined => {\r\n  return hospitalDataByYear.find(data => data.hospitalId === hospitalId && data.year === year);\r\n};\r\n\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { User, AuthContextType, SignUpData } from '../types/auth';\r\nimport { authService } from '../data/mockUsers';\r\nimport { logger } from '../utils/logger';\r\nimport { hospitals } from '../data/mockData';\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Authentication Provider Component\r\n * \r\n * Provides comprehensive authentication state and functionality throughout the application.\r\n * This context manages user sessions, role-based access control, and persistent authentication.\r\n * \r\n * Features:\r\n * - User authentication (sign-in/sign-up/sign-out)\r\n * - Persistent sessions with localStorage\r\n * - Role-based access control (Admin, Hospital Owner, Branch Manager)\r\n * - Multi-hospital access management\r\n * - Automatic session validation and cleanup\r\n * \r\n * @component\r\n * @example\r\n * ```tsx\r\n * // Wrap your app with the AuthProvider\r\n * <AuthProvider>\r\n *   <App />\r\n * </AuthProvider>\r\n * \r\n * // Use in components via useAuth hook\r\n * const { user, signIn, signOut, canAccessHospital } = useAuth();\r\n * ```\r\n * \r\n * @param children - Child components that will have access to auth context\r\n */\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  // Authentication state\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  /**\r\n   * Initialize authentication state from localStorage on app start.\r\n   * Validates stored user data and handles corrupted/invalid sessions.\r\n   */\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('hospitalFinanceUser');\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        // Validate that the parsed object has the expected User structure\r\n        if (parsedUser && typeof parsedUser === 'object' && 'id' in parsedUser && 'email' in parsedUser) {\r\n          setUser(parsedUser as User);\r\n        } else {\r\n          logger.warn('Invalid user data in localStorage, removing...', { context: 'AuthContext' });\r\n          localStorage.removeItem('hospitalFinanceUser');\r\n        }\r\n      } catch (error) {\r\n        logger.error('Failed to parse stored user data', { context: 'AuthContext', data: error });\r\n        localStorage.removeItem('hospitalFinanceUser');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  /**\r\n   * Signs in a user with the provided email and password.\r\n   * On successful authentication, the user data is stored in state and localStorage.\r\n   * @param email The user's email.\r\n   * @param password The user's password.\r\n   * @throws Will throw an error if sign-in fails.\r\n   */\r\n  const signIn = async (email: string, password: string): Promise<void> => {\r\n    setIsLoading(true);\r\n    try {\r\n      const userData = await authService.signIn(email, password);\r\n      if (!userData || !userData.id || !userData.email) {\r\n        throw new Error('Invalid user data received from authentication service');\r\n      }\r\n      setUser(userData);\r\n      localStorage.setItem('hospitalFinanceUser', JSON.stringify(userData));\r\n    } catch (error) {\r\n      logger.error('Sign in failed', { context: 'AuthContext', data: error });\r\n      throw error; // Re-throw to let the component handle the error\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Signs up a new user with the provided data.\r\n   * On successful registration, the new user data is stored in state and localStorage.\r\n   * @param userData The user data for registration.\r\n   * @throws Will throw an error if sign-up fails.\r\n   */\r\n  const signUp = async (userData: SignUpData): Promise<void> => {\r\n    setIsLoading(true);\r\n    try {\r\n      const newUser = await authService.signUp(userData);\r\n      if (!newUser || !newUser.id || !newUser.email) {\r\n        throw new Error('Invalid user data received from registration service');\r\n      }\r\n      setUser(newUser);\r\n      localStorage.setItem('hospitalFinanceUser', JSON.stringify(newUser));\r\n    } catch (error) {\r\n      logger.error('Sign up failed', { context: 'AuthContext', data: error });\r\n      throw error; // Re-throw to let the component handle the error\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Signs out the current user.\r\n   * Clears user data from state and localStorage.\r\n   */\r\n  const signOut = () => {\r\n    logger.info('User signed out', { context: 'AuthContext', data: { userId: user?.id } });\r\n    setUser(null);\r\n    localStorage.removeItem('hospitalFinanceUser');\r\n  };\r\n\r\n  /**\r\n   * Checks if the current user can access a specific hospital.\r\n   * @param hospitalId The ID of the hospital to check.\r\n   * @returns `true` if the user has access, `false` otherwise.\r\n   */\r\n  const canAccessHospital = (hospitalId: string): boolean => {\r\n    if (!user) return false;\r\n    \r\n    switch (user.role) {\r\n      case 'admin':\r\n        return true; // Admin can access all hospitals\r\n      case 'hospital_owner':\r\n        return user.hospitalIds?.includes(hospitalId) || false;\r\n      case 'branch_owner':\r\n        return user.hospitalId === hospitalId;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets a list of hospital IDs that the current user can access.\r\n   * @returns An array of hospital ID strings.\r\n   */\r\n  const getAccessibleHospitals = (): string[] => {\r\n    if (!user) return [];\r\n    \r\n    switch (user.role) {\r\n      case 'admin':\r\n        return hospitals.map(h => h.id); // All hospitals\r\n      case 'hospital_owner':\r\n        return user.hospitalIds || [];\r\n      case 'branch_owner':\r\n        return user.hospitalId ? [user.hospitalId] : [];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    signIn,\r\n    signUp,\r\n    signOut,\r\n    canAccessHospital,\r\n    getAccessibleHospitals\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { AuthContextType } from '../types/auth';\r\n\r\n/**\r\n * Custom hook to access the authentication context.\r\n * \r\n * @description This hook provides access to the current authentication state and methods\r\n * for signing in, signing up, and signing out users. It also provides utilities for\r\n * checking user permissions and accessible hospitals.\r\n * \r\n * @returns {AuthContextType} The authentication context containing:\r\n *   - user: Current authenticated user or null\r\n *   - isAuthenticated: Boolean indicating if user is authenticated\r\n *   - isLoading: Boolean indicating if authentication is in progress\r\n *   - signIn: Function to authenticate a user\r\n *   - signUp: Function to register a new user\r\n *   - signOut: Function to sign out the current user\r\n *   - canAccessHospital: Function to check if user can access a specific hospital\r\n *   - getAccessibleHospitals: Function to get list of hospitals user can access\r\n * \r\n * @throws {Error} Throws an error if used outside of an AuthProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const { user, isAuthenticated, signOut } = useAuth();\r\n *   \r\n *   if (!isAuthenticated) {\r\n *     return <div>Please sign in</div>;\r\n *   }\r\n *   \r\n *   return (\r\n *     <div>\r\n *       Welcome, {user?.name}!\r\n *       <button onClick={signOut}>Sign Out</button>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n","/**\r\n * Local Avatar Generator Utility\r\n * \r\n * Generates SVG avatars locally to avoid external dependencies and CSP issues.\r\n * This provides a fallback for ui-avatars.com and ensures avatars work in all environments.\r\n */\r\n\r\n/**\r\n * Generate a consistent color from a string (name)\r\n */\r\nfunction stringToColor(str: string): string {\r\n  const colors = [\r\n    '#a855f7', // Bright purple\r\n    '#8b5cf6', // Purple\r\n    '#c084fc', // Light lavender\r\n    '#d8b4fe', // Pale purple\r\n    '#9333ea', // Rich purple\r\n    '#7c3aed', // Deep purple\r\n    '#e9d5ff', // Very light purple\r\n    '#f3e8ff', // Lightest purple\r\n    '#6b21a8', // Dark purple\r\n    '#581c87', // Darkest purple\r\n    '#4c1d95', // Very dark purple\r\n    '#3b0764', // Deepest purple\r\n    '#2e1065', // Ultra dark purple\r\n    '#5b4b8a', // Medium purple\r\n    '#4c3d7a', // Dark medium purple\r\n  ];\r\n  \r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + char;\r\n    hash = hash & hash; // Convert to 32-bit integer\r\n  }\r\n  \r\n  const colorIndex = Math.abs(hash) % colors.length;\r\n  return colors[colorIndex] || '#a855f7';\r\n}\r\n\r\n/**\r\n * Get initials from a name\r\n */\r\nfunction getInitials(name: string): string {\r\n  if (!name) return '?';\r\n  \r\n  const words = name.trim().split(/\\s+/).filter(word => word.length > 0);\r\n  if (words.length === 0) return '?';\r\n  if (words.length === 1) {\r\n    return words[0]!.charAt(0).toUpperCase();\r\n  }\r\n  \r\n  const firstWord = words[0]!;\r\n  const lastWord = words[words.length - 1]!;\r\n  return (firstWord.charAt(0) + lastWord.charAt(0)).toUpperCase();\r\n}\r\n\r\n/**\r\n * Generate SVG avatar as data URL\r\n */\r\nexport function generateLocalAvatar(name: string, size: number = 32): string {\r\n  const initials = getInitials(name);\r\n  const backgroundColor = stringToColor(name);\r\n  const textColor = '#ffffff';\r\n  \r\n  // Calculate font size based on avatar size\r\n  const fontSize = Math.round(size * 0.4);\r\n  \r\n  const svg = `\r\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <rect width=\"${size}\" height=\"${size}\" fill=\"${backgroundColor}\" rx=\"${size * 0.1}\"/>\r\n      <text \r\n        x=\"50%\" \r\n        y=\"50%\" \r\n        text-anchor=\"middle\" \r\n        dominant-baseline=\"central\"\r\n        fill=\"${textColor}\" \r\n        font-family=\"system-ui, -apple-system, sans-serif\" \r\n        font-size=\"${fontSize}px\" \r\n        font-weight=\"600\"\r\n      >\r\n        ${initials}\r\n      </text>\r\n    </svg>\r\n  `.trim();\r\n  \r\n  return `data:image/svg+xml;base64,${btoa(svg)}`;\r\n}\r\n\r\n/**\r\n * Generate avatar URL with fallback support\r\n * Uses ui-avatars.com as primary, local generation as fallback\r\n */\r\nexport function getAvatarUrl(name: string, size: number = 32, options: {\r\n  useLocal?: boolean;\r\n  backgroundColor?: string;\r\n} = {}): string {\r\n  // If explicitly requesting local avatar or no name provided\r\n  if (options.useLocal || !name) {\r\n    return generateLocalAvatar(name, size);\r\n  }\r\n  \r\n  // Use ui-avatars.com as primary option\r\n  const backgroundColor = options.backgroundColor || stringToColor(name).replace('#', '');\r\n  const encodedName = encodeURIComponent(name);\r\n  \r\n  return `https://ui-avatars.com/api/?name=${encodedName}&size=${size}&background=${backgroundColor}&color=ffffff&bold=true&format=png`;\r\n}\r\n\r\n/**\r\n * Avatar component props for React usage\r\n */\r\nexport interface AvatarProps {\r\n  name: string;\r\n  size?: number;\r\n  className?: string;\r\n  useLocal?: boolean;\r\n  onError?: () => void;\r\n}\r\n\r\n/**\r\n * Create an img element with automatic fallback\r\n */\r\nexport function createAvatarElement(props: AvatarProps): HTMLImageElement {\r\n  const { name, size = 32, className = '', useLocal = false, onError } = props;\r\n  \r\n  const img = document.createElement('img');\r\n  img.className = className;\r\n  img.alt = `${name} profile picture`;\r\n  img.loading = 'lazy';\r\n  \r\n  // Set initial source\r\n  img.src = getAvatarUrl(name, size, { useLocal });\r\n  \r\n  // Add error handling for external avatars\r\n  if (!useLocal) {\r\n    img.onerror = () => {\r\n      // Fallback to local avatar on error\r\n      img.src = generateLocalAvatar(name, size);\r\n      if (onError) onError();\r\n    };\r\n  }\r\n  \r\n  return img;\r\n}\r\n\r\n/**\r\n * Simple avatar state management for vanilla JS/TS\r\n * For React usage, implement as a custom hook in your component\r\n */\r\nexport function createAvatarState(name: string, size: number = 32, preferLocal: boolean = false) {\r\n  let currentUrl = getAvatarUrl(name, size, { useLocal: preferLocal });\r\n  let hasError = false;\r\n  \r\n  const handleError = () => {\r\n    if (!hasError) {\r\n      hasError = true;\r\n      currentUrl = generateLocalAvatar(name, size);\r\n    }\r\n  };\r\n  \r\n  return {\r\n    getCurrentUrl: () => currentUrl,\r\n    handleError,\r\n    hasError: () => hasError\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport ThemeToggle from './ThemeToggle';\r\nimport { Hospital } from '../types/finance';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { roleDescriptions } from '../data/mockUsers';\r\nimport { getAvatarUrl, generateLocalAvatar } from '../utils/avatarGenerator';\r\n\r\n// Generate consistent background colors for users - Purple only\r\nconst getUserAvatarColor = (name: string): string => {\r\n  const colors = [\r\n    'a855f7', // Bright purple\r\n    '8b5cf6', // Purple\r\n    'c084fc', // Light lavender\r\n    'd8b4fe', // Pale purple\r\n    '9333ea', // Rich purple\r\n    '7c3aed', // Deep purple\r\n    'e9d5ff', // Very light purple\r\n    'f3e8ff', // Lightest purple\r\n    '6b21a8', // Dark purple\r\n    '581c87', // Darkest purple\r\n    '4c1d95', // Very dark purple\r\n    '3b0764', // Deepest purple\r\n    '2e1065', // Ultra dark purple\r\n    '5b4b8a', // Medium purple\r\n    '4c3d7a', // Dark medium purple\r\n  ];\r\n  \r\n  // Generate hash from name for consistent color selection\r\n  let hash = 0;\r\n  for (let i = 0; i < name.length; i++) {\r\n    const char = name.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + char;\r\n    hash = hash & hash; // Convert to 32-bit integer\r\n  }\r\n  \r\n  const colorIndex = Math.abs(hash) % colors.length;\r\n  return colors[colorIndex] || 'a855f7'; // Fallback to purple\r\n};\r\n\r\ninterface HeaderProps {\r\n  hospitals: Hospital[];\r\n  selectedHospitalId: string;\r\n  selectedYear: number;\r\n  availableYears: number[];\r\n  onHospitalChange: (hospitalId: string) => void;\r\n  onYearChange: (year: number) => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  hospitals,\r\n  selectedHospitalId,\r\n  selectedYear,\r\n  availableYears,\r\n  onHospitalChange,\r\n  onYearChange\r\n}) => {\r\n  const { user, signOut } = useAuth();\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\r\n  const [isFilterMenuOpen, setIsFilterMenuOpen] = useState(false);\r\n  \r\n  // Local filter state to prevent immediate updates\r\n  const [localHospitalId, setLocalHospitalId] = useState(selectedHospitalId);\r\n  const [localYear, setLocalYear] = useState(selectedYear);\r\n\r\n  // Sync local state when props change (for initial load or external changes)\r\n  useEffect(() => {\r\n    setLocalHospitalId(selectedHospitalId);\r\n  }, [selectedHospitalId]);\r\n\r\n  useEffect(() => {\r\n    setLocalYear(selectedYear);\r\n  }, [selectedYear]);\r\n\r\n  // Apply filters function\r\n  const applyFilters = () => {\r\n    onHospitalChange(localHospitalId);\r\n    onYearChange(localYear);\r\n    setIsFilterMenuOpen(false);\r\n  };\r\n\r\n  // Check if filters have changed\r\n  const hasFilterChanges = localHospitalId !== selectedHospitalId || localYear !== selectedYear;\r\n\r\n  // Handle body scroll when mobile menu is open\r\n  useEffect(() => {\r\n    if (isMobileMenuOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isMobileMenuOpen]);\r\n\r\n  // Handle click outside for user menu and filter menu\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as Element;\r\n      if (isUserMenuOpen && !target.closest('[data-user-menu]')) {\r\n        setIsUserMenuOpen(false);\r\n      }\r\n      if (isFilterMenuOpen && !target.closest('[data-filter-menu]')) {\r\n        setIsFilterMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isUserMenuOpen || isFilterMenuOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isUserMenuOpen, isFilterMenuOpen]);\r\n  const hospitalOptions = hospitals.map(hospital => ({\r\n    value: hospital.id,\r\n    label: hospital.name,\r\n    subtitle: `${hospital.type} • ${hospital.location}`\r\n  }));\r\n\r\n  const yearOptions = availableYears.map(year => ({\r\n    value: year.toString(),\r\n    label: year.toString()\r\n  }));\r\n\r\n\r\n  return (\r\n    <header \r\n      className=\"header-glass sticky top-0 z-40 border-b-0 relative\" \r\n    >\r\n      <div className=\"page-container relative\" style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n        <div className=\"flex items-center justify-between min-h-16 py-4 gap-4 relative\">\r\n          {/* Logo and Brand Name - Left Side */}\r\n          <div className=\"flex items-center min-w-0 flex-shrink\">\r\n            <div className=\"flex items-center gap-3 min-w-0\">\r\n              {/* Enhanced Animated Logo */}\r\n              <div className=\"relative flex-shrink-0\">\r\n                <div className=\"logo-container w-10 h-10 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\">\r\n                  <svg className=\"w-5 h-5 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <defs>\r\n                      <linearGradient id=\"logo-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n                        <stop offset=\"0%\" stopColor=\"#a855f7\" />\r\n                        <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\r\n                        <stop offset=\"100%\" stopColor=\"#c084fc\" />\r\n                      </linearGradient>\r\n                    </defs>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              {/* Mobile-optimized branding */}\r\n              <div className=\"min-w-0\">\r\n                <h1 className=\"heading-4 truncate block sm:hidden\" style={{ color: 'var(--color-text-primary)', marginBottom: '0', fontSize: 'var(--text-lg)' }}>\r\n                  Hospital Finance\r\n                </h1>\r\n                <h1 className=\"heading-4 truncate hidden sm:block\" style={{ color: 'var(--color-text-primary)', marginBottom: '0' }}>\r\n                  Hospital Financial Dashboard\r\n                </h1>\r\n                <p className=\"text-caption hidden lg:block truncate\" style={{ color: 'var(--color-text-muted)', marginBottom: '0' }}>\r\n                  Real-time financial insights & analytics\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* All Controls - Right Side */}\r\n          <div className=\"hidden lg:flex items-center gap-3 flex-shrink-0\">\r\n            {/* Current Filter Indicators */}\r\n            <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n              <div className=\"hidden xl:flex items-center gap-3 px-3 py-1.5 rounded-lg\" style={{\r\n                background: 'rgba(255, 255, 255, 0.05)',\r\n                border: '1px solid var(--border-secondary)'\r\n              }}>\r\n                <div className=\"flex items-center gap-1.5\">\r\n                  <svg className=\"w-3 h-3\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                  </svg>\r\n                  <span className=\"text-xs font-medium\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                    {hospitals.find(h => h.id === selectedHospitalId)?.name || 'No Hospital'}\r\n                  </span>\r\n                </div>\r\n                <div className=\"w-px h-4\" style={{ backgroundColor: 'var(--border-secondary)' }}></div>\r\n                <div className=\"flex items-center gap-1.5\">\r\n                  <svg className=\"w-3 h-3\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                  </svg>\r\n                  <span className=\"text-xs font-medium\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                    {selectedYear}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center gap-2 flex-shrink-0\" data-filter-menu>\r\n              {/* Filter Button */}\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setIsFilterMenuOpen(!isFilterMenuOpen)}\r\n                  className=\"btn-base btn-secondary btn-sm flex items-center gap-2\"\r\n                  aria-label=\"Open filters menu\"\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\r\n                  </svg>\r\n                  <span className=\"hidden xl:inline\">Filters</span>\r\n                  <svg className=\"w-4 h-4 transition-transform\" style={{ \r\n                    transform: isFilterMenuOpen ? 'rotate(180deg)' : 'rotate(0deg)'\r\n                  }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                  </svg>\r\n                </button>\r\n\r\n                {/* Filter Dropdown Menu */}\r\n                {isFilterMenuOpen && (\r\n                  <div \r\n                    className=\"absolute left-0 top-full mt-2 min-w-max rounded-lg shadow-xl z-50 gradient-bg-primary\"\r\n                    style={{\r\n                      backdropFilter: 'blur(16px)',\r\n                      WebkitBackdropFilter: 'blur(16px)',\r\n                      border: '1px solid var(--border-secondary)',\r\n                      borderRadius: 'var(--radius-md)',\r\n                      minWidth: '320px'\r\n                    }}\r\n                  >\r\n                    {/* Filter Header */}\r\n                    <div className=\"px-4 py-3 border-b\" style={{ borderColor: 'var(--border-secondary)' }}>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <svg className=\"w-4 h-4\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\r\n                        </svg>\r\n                        <span className=\"text-sm font-medium\" style={{ color: 'var(--color-text-primary)' }}>\r\n                          Filter Data\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Filter Options */}\r\n                    <div className=\"p-4 space-y-4\">\r\n                      <div>\r\n                        <label className=\"text-overline block mb-2\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                          Hospital\r\n                        </label>\r\n                        <Dropdown\r\n                          options={hospitalOptions}\r\n                          value={localHospitalId}\r\n                          onChange={setLocalHospitalId}\r\n                          placeholder=\"Select Hospital\"\r\n                          className=\"w-full\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"text-overline block mb-2\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                          Year\r\n                        </label>\r\n                        <Dropdown\r\n                          options={yearOptions}\r\n                          value={localYear.toString()}\r\n                          onChange={(value) => setLocalYear(parseInt(value))}\r\n                          placeholder=\"Select Year\"\r\n                          className=\"w-full\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      {/* Apply Filters Button */}\r\n                      <div className=\"pt-2 border-t\" style={{ borderColor: 'var(--border-secondary)' }}>\r\n                        <button\r\n                          onClick={applyFilters}\r\n                          disabled={!hasFilterChanges}\r\n                          className={`w-full btn-base ${hasFilterChanges ? 'btn-primary' : 'btn-secondary opacity-50 cursor-not-allowed'} btn-sm`}\r\n                          aria-label=\"Apply selected filters\"\r\n                        >\r\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                          Apply Filters\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Highlighted Generate Analysis Button */}\r\n            <button\r\n              className=\"btn-base btn-primary btn-sm\"\r\n              aria-label=\"Generate AI-powered financial analysis\"\r\n            >\r\n              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\r\n              </svg>\r\n              <span className=\"hidden xl:inline ml-2\">Generate Analysis</span>\r\n            </button>\r\n            </div>\r\n            \r\n            {/* Theme Toggle and User Menu */}\r\n            <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n              <ThemeToggle />\r\n              \r\n              {user && (\r\n                <div className=\"relative\" data-user-menu>\r\n                  <button\r\n                    onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\r\n                    className=\"flex items-center gap-2 p-1 rounded-lg hover:bg-white/5 transition-colors interactive\"\r\n                    aria-label=\"User menu\"\r\n                  >\r\n                    <div className=\"avatar-circle w-8 h-8 border-2 shadow-lg bg-white/10 backdrop-blur-sm\" style={{ borderColor: 'var(--border-secondary)' }}>\r\n                      <img \r\n                        src={getAvatarUrl(user.name, 32, { backgroundColor: getUserAvatarColor(user.name) })}\r\n                        alt={`${user.name} profile picture`}\r\n                        loading=\"lazy\"\r\n                        onError={(e) => {\r\n                          // Fallback to local avatar on error\r\n                          const target = e.target as HTMLImageElement;\r\n                          target.src = generateLocalAvatar(user.name, 32);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    \r\n                    <svg className=\"w-4 h-4 transition-transform\" style={{ \r\n                      color: 'var(--color-text-secondary)',\r\n                      transform: isUserMenuOpen ? 'rotate(180deg)' : 'rotate(0deg)'\r\n                    }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                    </svg>\r\n                  </button>\r\n\r\n                  {/* User Dropdown Menu */}\r\n                  {isUserMenuOpen && (\r\n                    <div \r\n                      className=\"absolute right-0 top-full mt-2 min-w-max rounded-lg shadow-xl z-50 gradient-bg-primary\"\r\n                      style={{\r\n                        backdropFilter: 'blur(16px)',\r\n                        WebkitBackdropFilter: 'blur(16px)',\r\n                        border: '1px solid var(--border-secondary)',\r\n                        borderRadius: 'var(--radius-md)'\r\n                      }}\r\n                    >\r\n                      {/* User Info */}\r\n                      <div className=\"px-3 py-2.5 border-b\" style={{ borderColor: 'var(--border-secondary)' }}>\r\n                        <p className=\"text-sm font-medium whitespace-nowrap\" style={{ color: 'var(--color-text-primary)' }}>\r\n                          {user.name}\r\n                        </p>\r\n                        <p className=\"text-xs whitespace-nowrap\" style={{ color: 'var(--color-text-muted)' }}>\r\n                          {roleDescriptions[user.role]?.title || user.role}\r\n                        </p>\r\n                      </div>\r\n                      \r\n                      {/* Menu Options */}\r\n                      <div className=\"py-1\">\r\n                        <button\r\n                          onClick={() => {\r\n                            setIsUserMenuOpen(false);\r\n                          }}\r\n                          className=\"w-full px-3 py-2 text-left text-sm hover:bg-white/5 transition-colors flex items-center gap-2 whitespace-nowrap\"\r\n                          style={{ color: 'var(--color-text-primary)' }}\r\n                          aria-label=\"Export financial report\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                          </svg>\r\n                          Export Report\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            signOut();\r\n                            setIsUserMenuOpen(false);\r\n                          }}\r\n                          className=\"w-full px-3 py-2 text-left text-sm hover:bg-white/5 transition-colors flex items-center gap-2 whitespace-nowrap\"\r\n                          style={{ color: 'var(--color-text-primary)' }}\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                          </svg>\r\n                          Sign Out\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Enhanced Mobile Menu Button */}\r\n          <div className=\"lg:hidden flex items-center gap-3 flex-shrink-0\">\r\n            <ThemeToggle size=\"sm\" />\r\n            <button\r\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n              className=\"btn-base btn-secondary btn-sm w-12 h-12 flex items-center justify-center rounded-xl transition-all duration-300 hover:scale-105\"\r\n              aria-label={isMobileMenuOpen ? \"Close mobile menu\" : \"Open mobile menu\"}\r\n              style={{\r\n                background: 'linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(139, 92, 246, 0.1))',\r\n                border: '1px solid rgba(168, 85, 247, 0.2)',\r\n                backdropFilter: 'blur(8px)',\r\n                WebkitBackdropFilter: 'blur(8px)'\r\n              }}\r\n            >\r\n              <svg className=\"w-5 h-5 transition-transform duration-300\" style={{ \r\n                transform: isMobileMenuOpen ? 'rotate(90deg)' : 'rotate(0deg)',\r\n                color: 'var(--color-text-primary)'\r\n              }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                {isMobileMenuOpen ? (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                ) : (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced Mobile full-screen menu with full background */}\r\n      <div\r\n        className={`xl:hidden fixed inset-0 transition-transform duration-300 ease-in-out ${\r\n          isMobileMenuOpen ? 'translate-x-0' : 'translate-x-full'\r\n        }`}\r\n        id=\"mobile-menu\"\r\n        style={{\r\n          width: '100vw',\r\n          height: '100vh',\r\n          background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.98) 0%, rgba(168, 85, 247, 0.98) 50%, rgba(196, 132, 252, 0.98) 100%)',\r\n          backdropFilter: 'blur(20px)',\r\n          WebkitBackdropFilter: 'blur(20px)',\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          zIndex: 9999\r\n        }}\r\n      >\r\n        {/* Enhanced Header */}\r\n        <div className=\"flex items-center justify-between py-4\" style={{ paddingLeft: 'var(--space-4)', paddingRight: 'var(--space-4)' }}>\r\n          {/* Logo and Brand Name - Left Side */}\r\n          <div className=\"flex items-center min-w-0 flex-shrink\">\r\n            <div className=\"flex items-center gap-3 min-w-0\">\r\n              {/* Enhanced Animated Logo */}\r\n              <div className=\"relative flex-shrink-0\">\r\n                <div className=\"logo-container w-10 h-10 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\">\r\n                  <svg className=\"w-5 h-5 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <defs>\r\n                      <linearGradient id=\"logo-gradient-sidemenu\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n                        <stop offset=\"0%\" stopColor=\"#a855f7\" />\r\n                        <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\r\n                        <stop offset=\"100%\" stopColor=\"#c084fc\" />\r\n                      </linearGradient>\r\n                    </defs>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Mobile-optimized branding */}\r\n              <div className=\"min-w-0\">\r\n                <h1 className=\"heading-4 truncate\" style={{ color: 'var(--color-text-primary)', marginBottom: '0', fontSize: 'var(--text-lg)' }}>\r\n                  Hospital Finance\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Close Button - Right Side */}\r\n          <button\r\n            onClick={() => setIsMobileMenuOpen(false)}\r\n            className=\"btn-base btn-secondary btn-sm w-12 h-12 rounded-xl transition-all duration-300 hover:scale-105 flex items-center justify-center\" \r\n            aria-label=\"Close menu\"\r\n          >\r\n            <svg className=\"w-5 h-5 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Enhanced Content */}\r\n        <div className=\"flex flex-col h-full w-full\" style={{ paddingLeft: 'var(--space-4)', paddingRight: 'var(--space-4)' }}>\r\n          <div className=\"flex-1 overflow-y-auto py-4 space-y-6 w-full\">\r\n            {/* Enhanced User Profile Section */}\r\n            <div className=\"rounded-2xl p-6 border\" style={{ borderColor: 'var(--border-secondary)' }}>\r\n              <div className=\"flex items-center space-x-4 mb-6\">\r\n                <div className=\"relative\">\r\n                  <div className=\"avatar-gradient-border w-16 h-16 rounded-full p-0.5 shadow-2xl\">\r\n                    <div className=\"avatar-circle w-full h-full rounded-full\" style={{ backgroundColor: '#ffffff' }}>\r\n                      <img \r\n                        src={getAvatarUrl(user?.name || '', 60, { backgroundColor: getUserAvatarColor(user?.name || '') })}\r\n                        alt={`${user?.name} profile picture`}\r\n                        loading=\"lazy\"\r\n                        className=\"rounded-full\"\r\n                        onError={(e) => {\r\n                          // Fallback to local avatar on error\r\n                          const target = e.target as HTMLImageElement;\r\n                          target.src = generateLocalAvatar(user?.name || '', 60);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <h3 className=\"font-bold text-lg truncate\" style={{ color: 'var(--color-text-primary)' }}>{user?.name}</h3>\r\n                  <p className=\"text-sm text-white truncate font-medium\">\r\n                    {user?.role && roleDescriptions[user.role]?.title || user?.role?.replace('_', ' ')}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n                  \r\n              {/* Enhanced Sign Out Button */}\r\n              <button\r\n                onClick={signOut}\r\n                className=\"btn-base btn-secondary btn-md w-full flex items-center justify-center group\"\r\n                aria-label=\"Sign out of your account\"\r\n              >\r\n                <svg className=\"w-5 h-5 mr-3 group-hover:rotate-12 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                </svg>\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n\r\n            {/* Enhanced Actions Section */}\r\n            <div className=\"space-y-4\">\r\n              \r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                <button \r\n                  className=\"btn-base btn-secondary btn-sm w-full flex items-center justify-center\"\r\n                  aria-label=\"Export financial report\"\r\n                  onClick={() => setIsMobileMenuOpen(false)}\r\n                >\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  Export Report\r\n                </button>\r\n                \r\n            <button\r\n              className=\"btn-base btn-secondary btn-sm w-full flex items-center justify-center\"\r\n              aria-label=\"Generate AI-powered financial analysis\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            >\r\n              <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\r\n              </svg>\r\n              Generate Analysis\r\n            </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n","/**\r\n * Formats a number as a US currency string.\r\n * @param value The number to format.\r\n * @returns A string representing the formatted currency (e.g., \"$1,500\").\r\n */\r\nexport const formatCurrency = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(value);\r\n};\r\n\r\n/**\r\n * Formats a number as a percentage string.\r\n * @param value The number to format.\r\n * @returns A string representing the formatted percentage (e.g., \"15.4%\").\r\n */\r\nexport const formatPercentage = (value: number): string => {\r\n  return `${value.toFixed(1)}%`;\r\n};\r\n\r\n/**\r\n * Formats a number with commas as thousands separators.\r\n * @param value The number to format.\r\n * @returns A string representing the formatted number (e.g., \"1,500,000\").\r\n */\r\nexport const formatNumber = (value: number): string => {\r\n  return new Intl.NumberFormat('en-US').format(value);\r\n};\r\n\r\n/**\r\n * Formats a number into a compact currency string with 'M' for millions or 'K' for thousands.\r\n * @param value The number to format.\r\n * @returns A compact currency string (e.g., \"$1.5M\", \"$1.5K\").\r\n */\r\nexport const formatCompactCurrency = (value: number): string => {\r\n  if (value >= 1000000) {\r\n    return `$${(value / 1000000).toFixed(1)}M`;\r\n  }\r\n  if (value >= 1000) {\r\n    return `$${(value / 1000).toFixed(1)}K`;\r\n  }\r\n  return formatCurrency(value);\r\n};\r\n\r\n/**\r\n * Returns the Tailwind CSS color class based on the change type.\r\n * @param changeType The type of change, either 'increase' or 'decrease'.\r\n * @returns A Tailwind CSS class string for the color.\r\n */\r\nexport const getChangeColor = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? 'text-success-600' : 'text-danger-600';\r\n};\r\n\r\n/**\r\n * Returns an icon representing the change type.\r\n * @param changeType The type of change, either 'increase' or 'decrease'.\r\n * @returns An arrow icon string ('↗' for increase, '↘' for decrease).\r\n */\r\nexport const getChangeIcon = (changeType: 'increase' | 'decrease'): string => {\r\n  return changeType === 'increase' ? '↗' : '↘';\r\n};\r\n\r\n","/**\r\n * Accessibility utilities for the Hospital Finance Dashboard\r\n * \r\n * This module provides utilities for improving accessibility compliance,\r\n * including color contrast checking, ARIA label generation, and keyboard navigation helpers.\r\n */\r\n\r\n/**\r\n * Calculate relative luminance of a color\r\n * Used for WCAG contrast ratio calculations\r\n */\r\nfunction getRelativeLuminance(r: number, g: number, b: number): number {\r\n  const [rs, gs, bs] = [r, g, b].map(c => {\r\n    c = c / 255;\r\n    return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\r\n  });\r\n  return 0.2126 * (rs ?? 0) + 0.7152 * (gs ?? 0) + 0.0722 * (bs ?? 0);\r\n}\r\n\r\n/**\r\n * Convert hex color to RGB\r\n */\r\nfunction hexToRgb(hex: string): { r: number; g: number; b: number } | null {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1] ?? '0', 16),\r\n    g: parseInt(result[2] ?? '0', 16),\r\n    b: parseInt(result[3] ?? '0', 16)\r\n  } : null;\r\n}\r\n\r\n/**\r\n * Calculate contrast ratio between two colors\r\n * Returns a value between 1 and 21\r\n */\r\nexport function getContrastRatio(color1: string, color2: string): number {\r\n  const rgb1 = hexToRgb(color1);\r\n  const rgb2 = hexToRgb(color2);\r\n  \r\n  if (!rgb1 || !rgb2) return 1;\r\n  \r\n  const lum1 = getRelativeLuminance(rgb1.r, rgb1.g, rgb1.b);\r\n  const lum2 = getRelativeLuminance(rgb2.r, rgb2.g, rgb2.b);\r\n  \r\n  const brightest = Math.max(lum1, lum2);\r\n  const darkest = Math.min(lum1, lum2);\r\n  \r\n  return (brightest + 0.05) / (darkest + 0.05);\r\n}\r\n\r\n/**\r\n * Check if color combination meets WCAG guidelines\r\n */\r\nexport function meetsWCAGContrast(\r\n  foreground: string, \r\n  background: string, \r\n  level: 'AA' | 'AAA' = 'AA',\r\n  size: 'normal' | 'large' = 'normal'\r\n): boolean {\r\n  const ratio = getContrastRatio(foreground, background);\r\n  \r\n  if (level === 'AAA') {\r\n    return size === 'large' ? ratio >= 4.5 : ratio >= 7;\r\n  }\r\n  \r\n  return size === 'large' ? ratio >= 3 : ratio >= 4.5;\r\n}\r\n\r\n/**\r\n * Generate accessible color combinations for our dashboard theme\r\n */\r\nexport const accessibleColors = {\r\n  // Primary text colors that meet WCAG AA standards\r\n  text: {\r\n    primary: '#ffffff',      // White text - 21:1 ratio on dark backgrounds\r\n    secondary: '#e5e7eb',    // Light gray - 15.8:1 ratio on dark backgrounds\r\n    tertiary: '#9ca3af',     // Medium gray - 7.1:1 ratio on dark backgrounds\r\n    muted: '#6b7280',        // Darker gray - 4.5:1 ratio on dark backgrounds\r\n  },\r\n  \r\n  // Background colors optimized for contrast\r\n  backgrounds: {\r\n    primary: '#111827',      // Dark blue-gray\r\n    secondary: '#1f2937',    // Medium dark blue-gray\r\n    card: '#374151',         // Lighter blue-gray for cards\r\n    elevated: '#4b5563',     // Elevated surfaces\r\n  },\r\n  \r\n  // Status colors with high contrast\r\n  status: {\r\n    success: {\r\n      text: '#10b981',       // Green - 4.7:1 ratio on dark\r\n      background: '#064e3b', // Dark green background\r\n    },\r\n    warning: {\r\n      text: '#f59e0b',       // Amber - 5.2:1 ratio on dark\r\n      background: '#78350f', // Dark amber background\r\n    },\r\n    error: {\r\n      text: '#ef4444',       // Red - 4.8:1 ratio on dark\r\n      background: '#7f1d1d', // Dark red background\r\n    },\r\n    info: {\r\n      text: '#3b82f6',       // Blue - 4.6:1 ratio on dark\r\n      background: '#1e3a8a', // Dark blue background\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Generate ARIA label for financial metrics\r\n */\r\nexport function generateMetricAriaLabel(\r\n  title: string,\r\n  value: string,\r\n  change: number,\r\n  changeType: 'increase' | 'decrease',\r\n  period: string\r\n): string {\r\n  const changeDirection = changeType === 'increase' ? 'increased' : 'decreased';\r\n  return `${title}: ${value}. ${changeDirection} by ${Math.abs(change)}% ${period}`;\r\n}\r\n\r\n/**\r\n * Generate ARIA label for chart data points\r\n */\r\nexport function generateChartAriaLabel(\r\n  chartType: string,\r\n  dataPoint: string,\r\n  value: string,\r\n  context?: string\r\n): string {\r\n  const base = `${chartType} chart data point: ${dataPoint} with value ${value}`;\r\n  return context ? `${base}. ${context}` : base;\r\n}\r\n\r\n/**\r\n * Keyboard navigation helper for interactive elements\r\n */\r\nexport class KeyboardNavigationManager {\r\n  private focusableElements: HTMLElement[] = [];\r\n  private currentIndex = -1;\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.updateFocusableElements(container);\r\n  }\r\n\r\n  updateFocusableElements(container: HTMLElement): void {\r\n    const selector = [\r\n      'button:not([disabled])',\r\n      'input:not([disabled])',\r\n      'select:not([disabled])',\r\n      'textarea:not([disabled])',\r\n      'a[href]',\r\n      '[tabindex]:not([tabindex=\"-1\"])'\r\n    ].join(', ');\r\n\r\n    this.focusableElements = Array.from(container.querySelectorAll(selector)) as HTMLElement[];\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent): boolean {\r\n    switch (event.key) {\r\n      case 'ArrowDown':\r\n        this.focusNext();\r\n        event.preventDefault();\r\n        return true;\r\n        \r\n      case 'Tab':\r\n        if (event.shiftKey) {\r\n          this.focusPrevious();\r\n        } else {\r\n          this.focusNext();\r\n        }\r\n        event.preventDefault();\r\n        return true;\r\n      \r\n      case 'ArrowUp':\r\n        this.focusPrevious();\r\n        event.preventDefault();\r\n        return true;\r\n      \r\n      case 'Home':\r\n        this.focusFirst();\r\n        event.preventDefault();\r\n        return true;\r\n      \r\n      case 'End':\r\n        this.focusLast();\r\n        event.preventDefault();\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  private focusNext(): void {\r\n    if (this.focusableElements.length === 0) return;\r\n    this.currentIndex = (this.currentIndex + 1) % this.focusableElements.length;\r\n    this.focusableElements[this.currentIndex]?.focus();\r\n  }\r\n\r\n  private focusPrevious(): void {\r\n    if (this.focusableElements.length === 0) return;\r\n    this.currentIndex = this.currentIndex <= 0 \r\n      ? this.focusableElements.length - 1 \r\n      : this.currentIndex - 1;\r\n    this.focusableElements[this.currentIndex]?.focus();\r\n  }\r\n\r\n  private focusFirst(): void {\r\n    if (this.focusableElements.length === 0) return;\r\n    this.currentIndex = 0;\r\n    this.focusableElements[0]?.focus();\r\n  }\r\n\r\n  private focusLast(): void {\r\n    if (this.focusableElements.length === 0) return;\r\n    this.currentIndex = this.focusableElements.length - 1;\r\n    this.focusableElements[this.currentIndex]?.focus();\r\n  }\r\n}\r\n\r\n/**\r\n * Screen reader announcements utility\r\n */\r\nexport class ScreenReaderAnnouncer {\r\n  private announceElement: HTMLElement;\r\n\r\n  constructor() {\r\n    this.announceElement = this.createAnnounceElement();\r\n    document.body.appendChild(this.announceElement);\r\n  }\r\n\r\n  private createAnnounceElement(): HTMLElement {\r\n    const element = document.createElement('div');\r\n    element.setAttribute('aria-live', 'polite');\r\n    element.setAttribute('aria-atomic', 'true');\r\n    element.className = 'sr-only';\r\n    element.style.cssText = `\r\n      position: absolute !important;\r\n      width: 1px !important;\r\n      height: 1px !important;\r\n      padding: 0 !important;\r\n      margin: -1px !important;\r\n      overflow: hidden !important;\r\n      clip: rect(0, 0, 0, 0) !important;\r\n      white-space: nowrap !important;\r\n      border: 0 !important;\r\n    `;\r\n    return element;\r\n  }\r\n\r\n  announce(message: string, priority: 'polite' | 'assertive' = 'polite'): void {\r\n    this.announceElement.setAttribute('aria-live', priority);\r\n    this.announceElement.textContent = message;\r\n    \r\n    // Clear after announcement to allow repeated announcements\r\n    setTimeout(() => {\r\n      this.announceElement.textContent = '';\r\n    }, 1000);\r\n  }\r\n\r\n  announceDataUpdate(dataType: string, newValue: string): void {\r\n    this.announce(`${dataType} updated to ${newValue}`, 'polite');\r\n  }\r\n\r\n  announceError(error: string): void {\r\n    this.announce(`Error: ${error}`, 'assertive');\r\n  }\r\n\r\n  announceSuccess(message: string): void {\r\n    this.announce(`Success: ${message}`, 'polite');\r\n  }\r\n}\r\n\r\n/**\r\n * Focus management utilities\r\n */\r\nexport const focusUtils = {\r\n  /**\r\n   * Trap focus within a container (useful for modals)\r\n   */\r\n  trapFocus(container: HTMLElement): () => void {\r\n    const focusableElements = container.querySelectorAll(\r\n      'button:not([disabled]), input:not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], [tabindex]:not([tabindex=\"-1\"])'\r\n    ) as NodeListOf<HTMLElement>;\r\n\r\n    const firstElement = focusableElements[0];\r\n    const lastElement = focusableElements[focusableElements.length - 1];\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Tab') {\r\n        if (e.shiftKey) {\r\n          if (document.activeElement === firstElement) {\r\n            e.preventDefault();\r\n            lastElement?.focus();\r\n          }\r\n        } else {\r\n          if (document.activeElement === lastElement) {\r\n            e.preventDefault();\r\n            firstElement?.focus();\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    container.addEventListener('keydown', handleKeyDown);\r\n    firstElement?.focus();\r\n\r\n    return () => {\r\n      container.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Save and restore focus for temporary focus changes\r\n   */\r\n  createFocusManager() {\r\n    let savedFocus: HTMLElement | null = null;\r\n\r\n    return {\r\n      save(): void {\r\n        savedFocus = document.activeElement as HTMLElement;\r\n      },\r\n      restore(): void {\r\n        savedFocus?.focus();\r\n        savedFocus = null;\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// Export singleton instances\r\nexport const screenReader = new ScreenReaderAnnouncer();\r\n","import React from 'react';\r\nimport { FinancialMetric } from '../types/finance';\r\nimport { formatCurrency, formatPercentage, formatNumber, getChangeIcon } from '../utils/formatters';\r\nimport { generateMetricAriaLabel, screenReader } from '../utils/accessibility';\r\n\r\n/**\r\n * Props interface for the MetricCard component.\r\n * \r\n * @interface MetricCardProps\r\n * @category Component Props\r\n * @since 1.0.0\r\n * \r\n * @example\r\n * ```typescript\r\n * const props: MetricCardProps = {\r\n *   metric: {\r\n *     id: 'total-revenue',\r\n *     title: 'Total Revenue',\r\n *     value: 1500000,\r\n *     change: 12.5,\r\n *     changeType: 'increase',\r\n *     period: 'vs last month',\r\n *     format: 'currency'\r\n *   }\r\n * };\r\n * ```\r\n */\r\ninterface MetricCardProps {\r\n  /** \r\n   * Financial metric data to display in the card.\r\n   * @see FinancialMetric for detailed type information\r\n   */\r\n  metric: FinancialMetric;\r\n}\r\n\r\n/**\r\n * A visually appealing card component for displaying financial metrics with modern design elements.\r\n * \r\n * @component MetricCard\r\n * @category UI Components\r\n * @subcategory Data Display\r\n * @since 1.0.0\r\n * \r\n * @example\r\n * Basic usage:\r\n * ```tsx\r\n * <MetricCard \r\n *   metric={{\r\n *     id: 'total-revenue',\r\n *     title: 'Total Revenue',\r\n *     value: 1500000,\r\n *     change: 12.5,\r\n *     changeType: 'increase',\r\n *     period: 'vs last month',\r\n *     format: 'currency'\r\n *   }}\r\n * />\r\n * ```\r\n * \r\n * @example\r\n * With percentage format:\r\n * ```tsx\r\n * <MetricCard \r\n *   metric={{\r\n *     id: 'profit-margin',\r\n *     title: 'Profit Margin',\r\n *     value: 0.235,\r\n *     change: -0.02,\r\n *     changeType: 'decrease',\r\n *     period: 'vs last quarter',\r\n *     format: 'percentage'\r\n *   }}\r\n * />\r\n * ```\r\n * \r\n * @remarks\r\n * Features:\r\n * - Modern glassmorphism styling with backdrop blur\r\n * - Gradient backgrounds and glass effects\r\n * - Smooth hover animations and scaling\r\n * - Enhanced visual hierarchy with better typography\r\n * - Improved accessibility with proper ARIA labels\r\n * - Responsive design for all screen sizes\r\n * - Dark mode support\r\n * - Automatic formatting based on metric type\r\n * - Trend indicators with color coding\r\n * \r\n * Accessibility:\r\n * - Uses semantic HTML structure\r\n * - Includes proper ARIA labels and roles\r\n * - Supports keyboard navigation\r\n * - Color contrast meets WCAG guidelines\r\n * - Screen reader optimized content structure\r\n * \r\n * Performance:\r\n * - Memoized value formatting\r\n * - CSS-based animations for smooth performance\r\n * - Optimized re-renders using React.memo\r\n */\r\nconst MetricCard: React.FC<MetricCardProps> = ({ metric }) => {\r\n  /**\r\n   * Formats the metric value based on the specified format type.\r\n   */\r\n  const formatValue = (value: number, format: string) => {\r\n    switch (format) {\r\n      case 'currency':\r\n        return formatCurrency(value);\r\n      case 'percentage':\r\n        return formatPercentage(value);\r\n      case 'number':\r\n        return formatNumber(value);\r\n      default:\r\n        return value.toString();\r\n    }\r\n  };\r\n\r\n  // Generate comprehensive ARIA label\r\n  const ariaLabel = generateMetricAriaLabel(\r\n    metric.title,\r\n    formatValue(metric.value, metric.format),\r\n    metric.change,\r\n    metric.changeType,\r\n    metric.period\r\n  );\r\n\r\n  return (\r\n    <div \r\n      className=\"glass-card interactive animate-float group\"\r\n      style={{ padding: 'var(--space-4) var(--space-5)' }}\r\n      role=\"article\"\r\n      aria-label={ariaLabel}\r\n      tabIndex={0}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          screenReader.announce(ariaLabel, 'polite');\r\n        }\r\n      }}\r\n    >\r\n      {/* Card Header: Metric Title */}\r\n      <div className=\"flex items-center justify-between\" style={{ marginBottom: 'var(--space-4)' }}>\r\n        <h3 \r\n          id={`metric-title-${metric.id}`}\r\n          className=\"text-secondary font-semibold uppercase tracking-wider\"\r\n          style={{ fontSize: 'var(--text-sm)' }}\r\n        >\r\n          {metric.title}\r\n        </h3>\r\n      </div>\r\n      \r\n      {/* Main Value Display */}\r\n      <div style={{ marginBottom: 'var(--space-4)' }}>\r\n        <p \r\n          className=\"text-primary font-bold group-hover:scale-105 transition-transform duration-300\"\r\n          style={{ \r\n            fontSize: 'clamp(1.25rem, 3vw, 2rem)',\r\n            lineHeight: 'var(--line-height-tight)',\r\n            marginBottom: 'var(--space-1)',\r\n            wordSpacing: '-0.05em',\r\n            letterSpacing: '-0.025em'\r\n          }}\r\n          aria-label={`${metric.title} value: ${formatValue(metric.value, metric.format)}`}\r\n        >\r\n          {formatValue(metric.value, metric.format)}\r\n        </p>\r\n      </div>\r\n      \r\n      {/* Change Indicator and Period */}\r\n      <div className=\"flex items-center justify-between flex-wrap\" style={{ gap: 'var(--space-2)' }}>\r\n        {/* Change percentage with trend indicator */}\r\n        <div className=\"flex items-center\">\r\n          <span \r\n            id={`metric-change-${metric.id}`}\r\n            className={`flex items-center font-medium transition-colors ${\r\n              metric.changeType === 'increase' \r\n                ? 'text-green-400 hover:text-green-300' \r\n                : 'text-red-400 hover:text-red-300'\r\n            }`}\r\n            style={{ fontSize: 'var(--text-base)' }}\r\n            aria-label={`${metric.changeType === 'increase' ? 'Increased' : 'Decreased'} by ${formatPercentage(metric.change)} ${metric.period}`}\r\n          >\r\n            <span \r\n              className=\"transform group-hover:scale-110 transition-transform\" \r\n              style={{ marginRight: 'var(--space-2)' }}\r\n              aria-hidden=\"true\"\r\n            >\r\n              {getChangeIcon(metric.changeType)}\r\n            </span>\r\n            {formatPercentage(metric.change)}\r\n          </span>\r\n        </div>\r\n        \r\n        {/* Time period reference */}\r\n        <span \r\n          className=\"text-tertiary font-medium uppercase tracking-wide\"\r\n          style={{ fontSize: 'var(--text-sm)' }}\r\n        >\r\n          {metric.period}\r\n        </span>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricCard;\r\n\r\n","import React from 'react';\r\n\r\n/**\r\n * Props for the LoadingSpinner component.\r\n * \r\n * @interface LoadingSpinnerProps\r\n */\r\ninterface LoadingSpinnerProps {\r\n  /** Size variant of the spinner (default: 'md') */\r\n  size?: 'sm' | 'md' | 'lg';\r\n  \r\n  /** Main loading text displayed below the spinner (default: 'Loading...') */\r\n  text?: string;\r\n  \r\n  /** Optional secondary text for additional context */\r\n  subtext?: string;\r\n  \r\n  /** Additional CSS classes to apply to the container */\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Customizable loading spinner component with text and animations.\r\n * \r\n * Features:\r\n * - Multiple size options (small, medium, large)\r\n * - Customizable loading text and subtext\r\n * - Smooth spinning animation\r\n * - Dark mode support\r\n * - Responsive typography\r\n * - Centered layout with proper spacing\r\n * - Accessible with proper ARIA attributes\r\n * \r\n * Used throughout the application for loading states, data fetching,\r\n * and async operations to provide visual feedback to users.\r\n * \r\n * @component\r\n * @example\r\n * ```tsx\r\n * // Basic spinner\r\n * <LoadingSpinner />\r\n * \r\n * // Large spinner with custom text\r\n * <LoadingSpinner \r\n *   size=\"lg\" \r\n *   text=\"Loading Dashboard...\" \r\n *   subtext=\"Please wait while we fetch your data\"\r\n * />\r\n * \r\n * // Small spinner for inline loading\r\n * <LoadingSpinner \r\n *   size=\"sm\" \r\n *   text=\"Saving...\" \r\n *   className=\"py-2\"\r\n * />\r\n * \r\n * // Full screen loading overlay\r\n * <LoadingSpinner \r\n *   size=\"lg\"\r\n *   text=\"Initializing Application\"\r\n *   className=\"min-h-screen bg-gray-50 dark:bg-dark-bg\"\r\n * />\r\n * ```\r\n * \r\n * @param props - Component props\r\n * @returns React functional component rendering the loading spinner\r\n */\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \r\n  size = 'md', \r\n  text = 'Loading...', \r\n  subtext,\r\n  className = '' \r\n}) => {\r\n  // Size mapping for spinner dimensions\r\n  const sizeClasses = {\r\n    sm: 'h-6 w-6',   // 24x24px for inline/small spaces\r\n    md: 'h-12 w-12', // 48x48px for standard loading states\r\n    lg: 'h-16 w-16'  // 64x64px for prominent loading states\r\n  };\r\n\r\n  const spinnerSize = sizeClasses[size];\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center p-4 ${className}`} role=\"status\" aria-live=\"polite\">\r\n      <div className=\"text-center\">\r\n        {/* Animated spinner circle */}\r\n        <div \r\n          className={`animate-spin rounded-full ${spinnerSize} mx-auto mb-4`}\r\n          style={{\r\n            borderWidth: '2px',\r\n            borderStyle: 'solid',\r\n            borderColor: 'transparent',\r\n            borderBottomColor: 'rgba(255, 255, 255, 0.8)'\r\n          }}\r\n          aria-hidden=\"true\" // Decorative element, screen readers will use the text\r\n        />\r\n        \r\n        {/* Main loading text */}\r\n        {text && (\r\n          <p className=\"font-medium text-sm sm:text-base\" style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\r\n            {text}\r\n          </p>\r\n        )}\r\n        \r\n        {/* Optional secondary text for additional context */}\r\n        {subtext && (\r\n          <p className=\"text-xs sm:text-sm mt-1 max-w-xs mx-auto\" style={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n            {subtext}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { Hospital } from '../types/finance';\r\nimport { User } from '../types/auth';\r\n\r\ninterface DashboardLoadingProps {\r\n  hospitals: Hospital[];\r\n  selectedHospitalId: string;\r\n  selectedYear: number;\r\n  availableYears: number[];\r\n  onHospitalChange: (hospitalId: string) => void;\r\n  onYearChange: (year: number) => void;\r\n  user: User | null;\r\n  signOut: () => void;\r\n}\r\n\r\nconst DashboardLoading: React.FC<DashboardLoadingProps> = ({\r\n  hospitals,\r\n  selectedHospitalId,\r\n  selectedYear,\r\n  availableYears,\r\n  onHospitalChange,\r\n  onYearChange,\r\n}) => {\r\n  const selectedHospital = hospitals.find(h => h.id === selectedHospitalId);\r\n\r\n  return (\r\n    <div className=\"text-white dark:text-white\">\r\n      <Header\r\n        hospitals={hospitals}\r\n        selectedHospitalId={selectedHospitalId}\r\n        selectedYear={selectedYear}\r\n        availableYears={availableYears}\r\n        onHospitalChange={onHospitalChange}\r\n        onYearChange={onYearChange}\r\n      />\r\n      \r\n      <main>\r\n        <LoadingSpinner\r\n          size=\"md\"\r\n          text=\"Loading dashboard data...\"\r\n          subtext={selectedHospital ? `${selectedHospital.name} • ${selectedYear}` : ''}\r\n          className=\"min-h-96\"\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLoading;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { Hospital } from '../types/finance';\r\nimport { User } from '../types/auth';\r\n\r\ninterface DashboardNoDataProps {\r\n  hospitals: Hospital[];\r\n  selectedHospitalId: string;\r\n  selectedYear: number;\r\n  availableYears: number[];\r\n  onHospitalChange: (hospitalId: string) => void;\r\n  onYearChange: (year: number) => void;\r\n  user: User | null;\r\n  signOut: () => void;\r\n}\r\n\r\n/**\r\n * Renders the \"no data\" state of the dashboard.\r\n *\r\n * @param {DashboardNoDataProps} props The component props.\r\n * @returns {React.ReactElement} The rendered \"no data\" state.\r\n */\r\nconst DashboardNoData: React.FC<DashboardNoDataProps> = ({\r\n  hospitals,\r\n  selectedHospitalId,\r\n  selectedYear,\r\n  availableYears,\r\n  onHospitalChange,\r\n  onYearChange,\r\n}) => {\r\n  return (\r\n    <div className=\"text-white dark:text-white\">\r\n      <Header\r\n        hospitals={hospitals}\r\n        selectedHospitalId={selectedHospitalId}\r\n        selectedYear={selectedYear}\r\n        availableYears={availableYears}\r\n        onHospitalChange={onHospitalChange}\r\n        onYearChange={onYearChange}\r\n      />\r\n      \r\n      <main>\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"mb-4\" style={{ color: 'var(--color-text-muted)' }}>\r\n            <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-medium mb-2\" style={{ color: 'var(--color-text-primary)' }}>No Data Available</h3>\r\n          <p style={{ color: 'var(--color-text-secondary)' }}>\r\n            No financial data found for the selected hospital and year combination.\r\n          </p>\r\n          <p className=\"text-sm mt-2\" style={{ color: 'var(--color-text-muted)' }}>\r\n            Please select a different hospital or year.\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardNoData;\r\n","import React, { useState, useEffect, useCallback, useMemo, lazy, Suspense } from 'react';\r\nimport Header from './Header';\r\nimport MetricCard from './MetricCard';\r\nimport { logger } from '../utils/logger';\r\nimport {\r\n  hospitals,\r\n  availableYears,\r\n  getHospitalData\r\n} from '../data/mockData';\r\nimport { HospitalData } from '../types/finance';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport Dropdown from './Dropdown';\r\nimport DashboardLoading from './DashboardLoading';\r\nimport DashboardNoData from './DashboardNoData';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst RevenueChart = lazy(() => import('./RevenueChart'));\r\nconst ExpensePieChart = lazy(() => import('./ExpensePieChart'));\r\nconst CashFlowChart = lazy(() => import('./CashFlowChart'));\r\nconst PatientMetricsCard = lazy(() => import('./PatientMetricsCard'));\r\nconst DepartmentTable = lazy(() => import('./DepartmentTable'));\r\n\r\n/**\r\n * Main dashboard component providing a comprehensive financial overview for hospitals.\r\n * Features a modern glassmorphism design with responsive layout and role-based data access.\r\n * \r\n * @component\r\n * @category Core Components\r\n * @since 1.0.0\r\n * \r\n * @example\r\n * Basic usage within router:\r\n * ```tsx\r\n * <Route path=\"/dashboard\">\r\n *   <Dashboard />\r\n * </Route>\r\n * ```\r\n * \r\n * @remarks\r\n * This component serves as the main interface for the Hospital Finance Dashboard.\r\n * It manages:\r\n * - Hospital selection based on user permissions\r\n * - Year-based data filtering\r\n * - Dynamic loading of financial metrics and charts\r\n * - Responsive layout with mobile-friendly filters\r\n * - Error handling and loading states\r\n * \r\n * Performance optimizations:\r\n * - Lazy loading of heavy chart components\r\n * - Memoization of filtered hospital list\r\n * - Debounced data loading\r\n * - Suspense boundaries for code splitting\r\n * \r\n * Accessibility features:\r\n * - ARIA labels for interactive elements\r\n * - Keyboard navigation support\r\n * - Screen reader announcements for data updates\r\n * - High contrast mode compatibility\r\n */\r\nconst Dashboard: React.FC = () => {\r\n  // Authentication and access control\r\n  const { user, signOut, getAccessibleHospitals, canAccessHospital } = useAuth();\r\n  const accessibleHospitals = getAccessibleHospitals();\r\n  \r\n  // Filter hospitals based on user permissions\r\n  const filteredHospitals = useMemo(() => {\r\n    return hospitals.filter(h => accessibleHospitals.includes(h.id));\r\n  }, [accessibleHospitals]);\r\n  \r\n  // Dashboard state management\r\n  const [selectedHospitalId, setSelectedHospitalId] = useState<string>(\r\n    accessibleHospitals[0] || ''\r\n  );\r\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\r\n  const [currentData, setCurrentData] = useState<HospitalData | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  /**\r\n   * Effect to load dashboard data when hospital or year selection changes.\r\n   */\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n    \r\n    if (selectedHospitalId && selectedYear) {\r\n      setIsLoading(true);\r\n      logger.info('Loading dashboard data', {\r\n        context: 'Dashboard',\r\n        data: { hospitalId: selectedHospitalId, year: selectedYear }\r\n      });\r\n      \r\n      timeout = setTimeout(() => {\r\n        const data = getHospitalData(selectedHospitalId, selectedYear);\r\n        if (!data) {\r\n          logger.warn('No data available for hospital and year', {\r\n            context: 'Dashboard',\r\n            data: { hospitalId: selectedHospitalId, year: selectedYear }\r\n          });\r\n        }\r\n        setCurrentData(data || null);\r\n        setIsLoading(false);\r\n      }, 500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n    };\r\n  }, [selectedHospitalId, selectedYear]);\r\n\r\n  /**\r\n   * Handles hospital selection change with access control validation.\r\n   */\r\n  const handleHospitalChange = useCallback((hospitalId: string) => {\r\n    if (canAccessHospital(hospitalId)) {\r\n      logger.info('Hospital selection changed', {\r\n        context: 'Dashboard',\r\n        data: { hospitalId }\r\n      });\r\n      setSelectedHospitalId(hospitalId);\r\n    } else {\r\n      logger.warn('Unauthorized hospital access attempt', {\r\n        context: 'Dashboard',\r\n        data: { hospitalId, userId: user?.id }\r\n      });\r\n    }\r\n  }, [canAccessHospital, user?.id]);\r\n\r\n  /**\r\n   * Handles year selection change for financial data filtering.\r\n   */\r\n  const handleYearChange = useCallback((year: number) => {\r\n    logger.info('Year selection changed', {\r\n      context: 'Dashboard',\r\n      data: { year, previousYear: selectedYear }\r\n    });\r\n    setSelectedYear(year);\r\n  }, [selectedYear]);\r\n\r\n  const hospitalOptions = useMemo(() => {\r\n    return filteredHospitals.map(hospital => ({\r\n      value: hospital.id,\r\n      label: hospital.name,\r\n      subtitle: `${hospital.type} • ${hospital.location}`\r\n    }));\r\n  }, [filteredHospitals]);\r\n\r\n  const yearOptions = useMemo(() => {\r\n    return availableYears.map(year => ({\r\n      value: year.toString(),\r\n      label: year.toString()\r\n    }));\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <DashboardLoading \r\n        hospitals={filteredHospitals}\r\n        selectedHospitalId={selectedHospitalId}\r\n        selectedYear={selectedYear}\r\n        availableYears={availableYears}\r\n        onHospitalChange={handleHospitalChange}\r\n        onYearChange={handleYearChange}\r\n        user={user}\r\n        signOut={signOut}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!currentData) {\r\n    return (\r\n      <DashboardNoData\r\n        hospitals={filteredHospitals}\r\n        selectedHospitalId={selectedHospitalId}\r\n        selectedYear={selectedYear}\r\n        availableYears={availableYears}\r\n        onHospitalChange={handleHospitalChange}\r\n        onYearChange={handleYearChange}\r\n        user={user}\r\n        signOut={signOut}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-white dark:text-white relative\">\r\n      <Header\r\n        hospitals={filteredHospitals}\r\n        selectedHospitalId={selectedHospitalId}\r\n        selectedYear={selectedYear}\r\n        availableYears={availableYears}\r\n        onHospitalChange={handleHospitalChange}\r\n        onYearChange={handleYearChange}\r\n      />\r\n      \r\n      <main id=\"main-content\" className=\"mobile-safe-area\">\r\n        <div className=\"page-container\">\r\n          {/* Enhanced Mobile Filter Bar */}\r\n        <div className=\"xl:hidden mb-4 relative z-20\">\r\n          <button \r\n            onClick={() => setShowFilters(!showFilters)}\r\n            className=\"btn-base btn-primary btn-md w-full flex items-center justify-center gap-3\"\r\n            aria-expanded={showFilters}\r\n            aria-controls=\"mobile-filter-panel\"\r\n          >\r\n            <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n            </svg>\r\n            <span className=\"font-medium\" style={{ lineHeight: 'var(--line-height-snug)' }}>\r\n              {showFilters ? 'Hide' : 'Show'} Filters\r\n            </span>\r\n          </button>\r\n\r\n          {showFilters && (\r\n            <div id=\"mobile-filter-panel\" className=\"mt-4 glass-card-elevated rounded-2xl component-spacing relative z-20\">\r\n              <div className=\"flex flex-col gap-6 relative z-20\">\r\n                <div className=\"relative z-30\">\r\n                  <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\r\n                    Hospital\r\n                  </label>\r\n                  <Dropdown\r\n                    options={hospitalOptions}\r\n                    value={selectedHospitalId}\r\n                    onChange={handleHospitalChange}\r\n                    placeholder=\"Select Hospital\"\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"relative z-20\" style={{ overflow: 'visible' }}>\r\n                  <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\r\n                    Year\r\n                  </label>\r\n                  <Dropdown\r\n                    options={yearOptions}\r\n                    value={selectedYear.toString()}\r\n                    onChange={(value) => handleYearChange(parseInt(value))}\r\n                    placeholder=\"Select Year\"\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Enhanced Key Performance Indicators Section */}\r\n        <section aria-labelledby=\"kpi-heading\" className=\"section-spacing\">\r\n          <h2 \r\n            id=\"kpi-heading\"\r\n            className=\"heading-2 text-center mb-10\"\r\n          >\r\n            Key Performance Indicators\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-responsive-md\">\r\n            {currentData.financialMetrics.map((metric) => (\r\n              <MetricCard key={metric.id} metric={metric} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        <Suspense fallback={<LoadingSpinner text=\"Loading charts...\" />}>\r\n          {/* Enhanced Charts Section */}\r\n          <section className=\"section-spacing\" aria-labelledby=\"charts-heading\">\r\n            <h2 id=\"charts-heading\" className=\"sr-only\">Financial Data Visualization</h2>\r\n            \r\n            {/* Revenue Chart - Full Width */}\r\n            <div className=\"w-full mb-8\">\r\n              <RevenueChart data={currentData.revenueData} availableYears={availableYears} />\r\n            </div>\r\n\r\n            {/* Responsive charts - stacked on mobile, side-by-side on larger screens */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-responsive-md\">\r\n              <ExpensePieChart data={currentData.expenseBreakdown} />\r\n              <CashFlowChart data={currentData.cashFlowData} />\r\n            </div>\r\n          </section>\r\n\r\n          {/* Patient Metrics Section */}\r\n          <section className=\"section-spacing\" aria-labelledby=\"patient-metrics-heading\">\r\n            <h2 id=\"patient-metrics-heading\" className=\"sr-only\">Patient Metrics</h2>\r\n            <PatientMetricsCard metrics={currentData.patientMetrics} />\r\n          </section>\r\n\r\n          {/* Department Performance Section */}\r\n          <section className=\"section-spacing\" aria-labelledby=\"department-performance-heading\">\r\n            <h2 id=\"department-performance-heading\" className=\"sr-only\">Department Performance</h2>\r\n            <DepartmentTable departments={currentData.departmentFinances} />\r\n          </section>\r\n        </Suspense>\r\n\r\n          {/* Enhanced Footer */}\r\n          <footer className=\"section-spacing\">\r\n            <div className=\"chart-container footer-card\" style={{ borderRadius: 'var(--radius-lg)' }}>\r\n              <div className=\"flex flex-col sm:flex-row items-center justify-center sm:justify-between gap-4 text-center sm:text-left\">\r\n                <p className=\"text-tertiary font-medium\" style={{ \r\n                  fontSize: 'var(--text-base)', \r\n                  lineHeight: '1.4',\r\n                  margin: 0 \r\n                }}>\r\n                  © 2024 Hospital Finance Dashboard.<br />All rights reserved.\r\n                </p>\r\n                <p className=\"text-tertiary font-medium sm:text-right sm:whitespace-nowrap\" style={{ \r\n                  fontSize: 'var(--text-sm)', \r\n                  lineHeight: '1.4',\r\n                  margin: 0 \r\n                }}>\r\n                  Last updated: {currentData.lastUpdated}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n","/**\r\n * Security utilities for the Hospital Finance Dashboard\r\n * \r\n * This module provides comprehensive security functions including\r\n * password hashing, input validation, XSS prevention, and rate limiting.\r\n * \r\n * @module security\r\n */\r\n\r\nimport { z } from 'zod';\r\nimport { \r\n  hashPassword as browserHashPassword, \r\n  verifyPassword as browserVerifyPassword \r\n} from './browserCrypto';\r\n\r\n/**\r\n * Password configuration\r\n */\r\nconst PASSWORD_CONFIG = {\r\n  minLength: 8,\r\n  maxLength: 128\r\n} as const;\r\n\r\n/**\r\n * Rate limiting configuration\r\n */\r\nconst RATE_LIMIT_CONFIG = {\r\n  maxAttempts: 5,\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  lockoutMs: 15 * 60 * 1000  // 15 minutes\r\n} as const;\r\n\r\n/**\r\n * Hashes a password using bcrypt\r\n * \r\n * @param password - The plain text password to hash\r\n * @returns Promise<string> - The hashed password\r\n * \r\n * @example\r\n * ```typescript\r\n * const hashedPassword = await hashPassword('MySecurePassword123!');\r\n * console.log(hashedPassword); // $2a$12$...\r\n * ```\r\n */\r\nexport const hashPassword = async (password: string): Promise<string> => {\r\n  if (!password || typeof password !== 'string') {\r\n    throw new Error('Password must be a non-empty string');\r\n  }\r\n  \r\n  if (password.length < PASSWORD_CONFIG.minLength) {\r\n    throw new Error(`Password must be at least ${PASSWORD_CONFIG.minLength} characters long`);\r\n  }\r\n  \r\n  if (password.length > PASSWORD_CONFIG.maxLength) {\r\n    throw new Error(`Password must be no more than ${PASSWORD_CONFIG.maxLength} characters long`);\r\n  }\r\n  \r\n  return browserHashPassword(password);\r\n};\r\n\r\n/**\r\n * Verifies a password against its hash\r\n * \r\n * @param password - The plain text password to verify\r\n * @param hash - The hashed password to compare against\r\n * @returns Promise<boolean> - True if password matches, false otherwise\r\n * \r\n * @example\r\n * ```typescript\r\n * const isValid = await verifyPassword('MySecurePassword123!', hashedPassword);\r\n * console.log(isValid); // true or false\r\n * ```\r\n */\r\nexport const verifyPassword = async (password: string, hash: string): Promise<boolean> => {\r\n  if (!password || !hash) {\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    return browserVerifyPassword(password, hash);\r\n  } catch (error) {\r\n    console.error('Password verification error:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Rate limiter class for preventing brute force attacks\r\n */\r\nexport class RateLimiter {\r\n  private attempts: Map<string, { count: number; resetTime: number; lockoutTime?: number }> = new Map();\r\n  \r\n  /**\r\n   * Checks if an action is allowed for a given key\r\n   * \r\n   * @param key - Unique identifier for the rate limit (e.g., email address)\r\n   * @param maxAttempts - Maximum number of attempts allowed (default: 5)\r\n   * @param windowMs - Time window in milliseconds (default: 15 minutes)\r\n   * @returns boolean - True if action is allowed, false if rate limited\r\n   */\r\n  isAllowed(key: string, maxAttempts: number = RATE_LIMIT_CONFIG.maxAttempts, windowMs: number = RATE_LIMIT_CONFIG.windowMs): boolean {\r\n    const now = Date.now();\r\n    const record = this.attempts.get(key);\r\n    \r\n    // Check if key is currently locked out\r\n    if (record?.lockoutTime && now < record.lockoutTime) {\r\n      return false;\r\n    }\r\n    \r\n    // If no record or window has expired, reset\r\n    if (!record || now > record.resetTime) {\r\n      this.attempts.set(key, { count: 1, resetTime: now + windowMs });\r\n      return true;\r\n    }\r\n    \r\n    // If under limit, increment and allow\r\n    if (record.count < maxAttempts) {\r\n      record.count++;\r\n      return true;\r\n    }\r\n    \r\n    // If at limit, start lockout period\r\n    if (record.count >= maxAttempts) {\r\n      record.lockoutTime = now + RATE_LIMIT_CONFIG.lockoutMs;\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Resets the rate limit for a given key\r\n   * \r\n   * @param key - The key to reset\r\n   */\r\n  reset(key: string): void {\r\n    this.attempts.delete(key);\r\n  }\r\n  \r\n  /**\r\n   * Gets the remaining attempts for a key\r\n   * \r\n   * @param key - The key to check\r\n   * @param maxAttempts - Maximum number of attempts allowed\r\n   * @returns number - Remaining attempts (0 if locked out)\r\n   */\r\n  getRemainingAttempts(key: string, maxAttempts: number = RATE_LIMIT_CONFIG.maxAttempts): number {\r\n    const record = this.attempts.get(key);\r\n    if (!record) return maxAttempts;\r\n    \r\n    const now = Date.now();\r\n    if (record.lockoutTime && now < record.lockoutTime) {\r\n      return 0; // Locked out\r\n    }\r\n    \r\n    if (now > record.resetTime) {\r\n      return maxAttempts; // Window expired\r\n    }\r\n    \r\n    return Math.max(0, maxAttempts - record.count);\r\n  }\r\n  \r\n  /**\r\n   * Gets the time until the rate limit resets\r\n   * \r\n   * @param key - The key to check\r\n   * @returns number - Milliseconds until reset (0 if not rate limited)\r\n   */\r\n  getTimeUntilReset(key: string): number {\r\n    const record = this.attempts.get(key);\r\n    if (!record) return 0;\r\n    \r\n    const now = Date.now();\r\n    if (record.lockoutTime && now < record.lockoutTime) {\r\n      return record.lockoutTime - now;\r\n    }\r\n    \r\n    if (now > record.resetTime) {\r\n      return 0;\r\n    }\r\n    \r\n    return record.resetTime - now;\r\n  }\r\n}\r\n\r\n/**\r\n * Global rate limiter instance\r\n */\r\nexport const rateLimiter = new RateLimiter();\r\n\r\n/**\r\n * Sanitizes a string to prevent XSS attacks\r\n * \r\n * @param input - The string to sanitize\r\n * @returns string - The sanitized string\r\n * \r\n * @example\r\n * ```typescript\r\n * const sanitized = sanitizeString('<script>alert(\"xss\")</script>');\r\n * console.log(sanitized); // \"alert(\"xss\")\"\r\n * ```\r\n */\r\nexport const sanitizeString = (input: string): string => {\r\n  if (typeof input !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return input\r\n    .replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n    .replace(/<iframe[^>]*>.*?<\\/iframe>/gi, '')\r\n    .replace(/<object[^>]*>.*?<\\/object>/gi, '')\r\n    .replace(/<embed[^>]*>.*?<\\/embed>/gi, '')\r\n    .replace(/<link[^>]*>.*?<\\/link>/gi, '')\r\n    .replace(/<meta[^>]*>.*?<\\/meta>/gi, '')\r\n    .replace(/javascript:/gi, '')\r\n    .replace(/vbscript:/gi, '')\r\n    .replace(/on\\w+\\s*=/gi, '')\r\n    .replace(/<[^>]*>/g, '')\r\n    .trim();\r\n};\r\n\r\n/**\r\n * Sanitizes an error object for safe display\r\n * \r\n * @param error - The error to sanitize\r\n * @returns object - Sanitized error information\r\n */\r\nexport const sanitizeError = (error: Error): { name: string; message: string; stack?: string | undefined; timestamp: string } => {\r\n  return {\r\n    name: sanitizeString(error.name),\r\n    message: sanitizeString(error.message),\r\n    stack: error.stack ? sanitizeString(error.stack) : undefined,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n};\r\n\r\n/**\r\n * Validation schemas using Zod\r\n */\r\nexport const validationSchemas = {\r\n  email: z.string().email('Invalid email format').min(1).max(255),\r\n  \r\n  password: z.string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .max(128, 'Password must be no more than 128 characters')\r\n    .regex(/[A-Z]/, 'Password must contain at least one uppercase letter')\r\n    .regex(/[a-z]/, 'Password must contain at least one lowercase letter')\r\n    .regex(/[0-9]/, 'Password must contain at least one number')\r\n    .regex(/[^A-Za-z0-9]/, 'Password must contain at least one special character'),\r\n  \r\n  name: z.string().min(1, 'Name is required').max(100, 'Name must be no more than 100 characters'),\r\n  \r\n  userRole: z.enum(['admin', 'hospital_owner', 'branch_owner']),\r\n  \r\n  hospitalId: z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters'),\r\n  \r\n  user: z.object({\r\n    email: z.string().email('Invalid email address'),\r\n    password: z.string()\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .regex(/[A-Z]/, 'Password must contain at least one uppercase letter')\r\n      .regex(/[a-z]/, 'Password must contain at least one lowercase letter')\r\n      .regex(/\\d/, 'Password must contain at least one number')\r\n      .regex(/[!@#$%^&*(),.?\":{}|<>]/, 'Password must contain at least one special character'),\r\n    name: z.string().min(2, 'Name must be at least 2 characters long').max(100, 'Name must be no more than 100 characters'),\r\n    role: z.enum(['admin', 'hospital_owner', 'branch_owner']),\r\n    hospitalId: z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters').optional(),\r\n    hospitalIds: z.array(z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters')).optional()\r\n  }),\r\n  \r\n  signIn: z.object({\r\n    email: z.string().email('Invalid email address'),\r\n    password: z.string().min(1, 'Password is required')\r\n  })\r\n};\r\n\r\n/**\r\n * Validates input data against a schema\r\n * \r\n * @param data - The data to validate\r\n * @param schema - The Zod schema to validate against\r\n * @returns object - Validation result with success flag and data/errors\r\n * \r\n * @example\r\n * ```typescript\r\n * const result = validateInput({ email: 'test@example.com' }, validationSchemas.email);\r\n * if (result.success) {\r\n *   console.log('Valid email:', result.data);\r\n * } else {\r\n *   console.log('Validation errors:', result.errors);\r\n * }\r\n * ```\r\n */\r\nexport const validateInput = <T>(data: unknown, schema: z.ZodSchema<T>): { success: true; data: T } | { success: false; errors: string[] } => {\r\n  try {\r\n    const validatedData = schema.parse(data);\r\n    return { success: true, data: validatedData };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { \r\n        success: false, \r\n        errors: error.errors.map(err => `${err.path.join('.')}: ${err.message}`)\r\n      };\r\n    }\r\n    return { \r\n      success: false, \r\n      errors: ['Unknown validation error'] \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Generates a secure random token\r\n * \r\n * @param length - Length of the token (default: 32)\r\n * @returns string - Secure random token\r\n */\r\nexport const generateSecureToken = (length: number = 32): string => {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let result = '';\r\n  \r\n  for (let i = 0; i < length; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n/**\r\n * Checks if a string contains potentially malicious content\r\n * \r\n * @param input - The string to check\r\n * @returns boolean - True if potentially malicious, false otherwise\r\n */\r\nexport const isPotentiallyMalicious = (input: string): boolean => {\r\n  const maliciousPatterns = [\r\n    /<script[^>]*>/i,\r\n    /javascript:/i,\r\n    /vbscript:/i,\r\n    /on\\w+\\s*=/i,\r\n    /<iframe[^>]*>/i,\r\n    /<object[^>]*>/i,\r\n    /<embed[^>]*>/i\r\n  ];\r\n  \r\n  return maliciousPatterns.some(pattern => pattern.test(input));\r\n};\r\n\r\n/**\r\n * Escapes HTML special characters\r\n * \r\n * @param input - The string to escape\r\n * @returns string - HTML-escaped string\r\n */\r\nexport const escapeHtml = (input: string): string => {\r\n  const htmlEscapes: Record<string, string> = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '/': '&#x2F;'\r\n  };\r\n  \r\n  return input.replace(/[&<>\"'/]/g, (char) => htmlEscapes[char] || char);\r\n};\r\n","import React from 'react';\r\n\r\n/**\r\n * Button variant types defining the visual style and semantic meaning.\r\n * \r\n * @type ButtonVariant\r\n * - `primary`: Main action button with brand colors\r\n * - `secondary`: Secondary action with muted styling  \r\n * - `danger`: Destructive actions with red coloring\r\n * - `ghost`: Minimal styling for subtle actions\r\n */\r\nexport type ButtonVariant = 'primary' | 'secondary' | 'danger' | 'ghost';\r\n\r\n/**\r\n * Button size variants for different use cases.\r\n * \r\n * @type ButtonSize\r\n * - `sm`: Small button for compact spaces\r\n * - `md`: Default medium size for most use cases\r\n * - `lg`: Large button for prominent actions\r\n */\r\nexport type ButtonSize = 'sm' | 'md' | 'lg';\r\n\r\n/**\r\n * Props for the Button component extending standard HTML button attributes.\r\n * \r\n * @interface ButtonProps\r\n */\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** Visual variant of the button (default: 'primary') */\r\n  variant?: ButtonVariant;\r\n  \r\n  /** Size of the button (default: 'md') */\r\n  size?: ButtonSize;\r\n  \r\n  /** Whether the button is in a loading state with spinner */\r\n  isLoading?: boolean;\r\n  \r\n  /** Whether the button should take full width of its container */\r\n  fullWidth?: boolean;\r\n  \r\n  /** Button content (text, icons, or other React elements) */\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Flexible button component with multiple variants, sizes, and states.\r\n * \r\n * Features:\r\n * - Multiple visual variants (primary, secondary, danger, ghost)\r\n * - Responsive sizing options\r\n * - Loading state with spinner animation\r\n * - Full width option\r\n * - Hover and focus animations\r\n * - Dark mode support\r\n * - Accessibility compliant with proper focus states\r\n * \r\n * @component\r\n * @example\r\n * ```tsx\r\n * // Primary action button\r\n * <Button variant=\"primary\" size=\"lg\">\r\n *   Save Changes\r\n * </Button>\r\n * \r\n * // Secondary button with loading state\r\n * <Button variant=\"secondary\" isLoading={isSubmitting}>\r\n *   Cancel\r\n * </Button>\r\n * \r\n * // Danger button for destructive actions\r\n * <Button variant=\"danger\" onClick={handleDelete}>\r\n *   Delete Item\r\n * </Button>\r\n * \r\n * // Ghost button with custom styling\r\n * <Button variant=\"ghost\" className=\"text-purple-600\">\r\n *   Learn More\r\n * </Button>\r\n * \r\n * // Full width button for forms\r\n * <Button fullWidth size=\"lg\">\r\n *   Submit Form\r\n * </Button>\r\n * ```\r\n * \r\n * @param props - Button component props\r\n * @returns React functional component\r\n */\r\nconst Button: React.FC<ButtonProps> = ({\r\n  variant = 'primary',\r\n  size = 'md',\r\n  isLoading = false,\r\n  fullWidth = false,\r\n  className = '',\r\n  children,\r\n  disabled,\r\n  ...props\r\n}) => {\r\n  // Design System Button Implementation\r\n  const baseClasses = `\r\n    btn-base\r\n    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent\r\n    disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\r\n  `;\r\n  \r\n  // Design System Variant Classes\r\n  const variantClasses = {\r\n    primary: `\r\n      btn-primary\r\n      focus:ring-purple-400/50\r\n    `,\r\n    secondary: `\r\n      btn-secondary\r\n      focus:ring-purple-300/50\r\n    `,\r\n    danger: `\r\n      btn-danger\r\n      focus:ring-purple-500/50\r\n    `,\r\n    ghost: `\r\n      btn-ghost\r\n      focus:ring-purple-300/50\r\n    `\r\n  };\r\n\r\n  // Design System Size Classes\r\n  const sizeClasses = {\r\n    sm: 'btn-sm',\r\n    md: 'btn-md',\r\n    lg: 'btn-lg'\r\n  };\r\n\r\n  // Optional full width styling with proper responsive behavior\r\n  const widthClass = fullWidth ? 'w-full' : '';\r\n\r\n  // Combine all CSS classes for the button element\r\n  const combinedClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${widthClass} ${className}`.trim();\r\n\r\n  return (\r\n    <button\r\n      className={combinedClasses}\r\n      disabled={disabled || isLoading} // Disable during loading or when explicitly disabled\r\n      aria-busy={isLoading}\r\n      aria-disabled={disabled || isLoading}\r\n      {...props} // Spread remaining HTML button attributes\r\n    >\r\n      {isLoading ? (\r\n        // Enhanced loading state: show improved spinner and loading text\r\n        <>\r\n          <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white/30 border-t-white mr-3\" />\r\n          <span style={{ color: 'white' }}>Loading...</span>\r\n        </>\r\n      ) : (\r\n        // Normal state: show provided children content\r\n        children\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { logger } from '../utils/logger';\r\nimport { sanitizeError } from '../utils/security';\r\nimport Button from './Button';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  errorInfo?: ErrorInfo;\r\n}\r\n\r\n/**\r\n * A component that catches JavaScript errors anywhere in its child component tree,\r\n * logs those errors, and displays a fallback UI instead of the component tree that crashed.\r\n */\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  public override state: State = {\r\n    hasError: false\r\n  };\r\n\r\n  public static getDerivedStateFromError(error: Error): State {\r\n    // Update state so the next render will show the fallback UI\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  public override componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    const sanitizedError = sanitizeError(error);\r\n    logger.error('Uncaught error in component', {\r\n      context: 'ErrorBoundary',\r\n      data: {\r\n        error: sanitizedError,\r\n        componentStack: errorInfo.componentStack\r\n      }\r\n    });\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  public override render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center\" style={{ \r\n          background: 'linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%)'\r\n        }}>\r\n          {/* Animated Blob Background */}\r\n          <div className=\"animated-blob-bg\">\r\n            <div className=\"blob blob-center\"></div>\r\n          </div>\r\n          \r\n          <div className=\"max-w-md w-full mx-4 relative z-10\">\r\n            <div className=\"glass-card rounded-xl p-8 text-center\" style={{\r\n              background: 'rgba(255, 255, 255, 0.05)',\r\n              backdropFilter: 'blur(20px)',\r\n              WebkitBackdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.1)',\r\n              boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.5)'\r\n            }}>\r\n              <div className=\"w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\" style={{\r\n                background: 'rgba(239, 68, 68, 0.1)',\r\n                border: '1px solid rgba(239, 68, 68, 0.2)'\r\n              }}>\r\n                <svg className=\"w-8 h-8\" style={{ color: '#ef4444' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                </svg>\r\n              </div>\r\n              \r\n              <h2 className=\"text-xl font-bold text-white mb-2\">\r\n                Something went wrong\r\n              </h2>\r\n              \r\n              <p className=\"text-white/70 mb-6\">\r\n                We encountered an unexpected error. Please try refreshing the page or contact support if the problem persists.\r\n              </p>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <Button\r\n                  onClick={() => window.location.reload()}\r\n                  fullWidth\r\n                >\r\n                  Refresh Page\r\n                </Button>\r\n                \r\n                <Button\r\n                  onClick={() => this.setState({ hasError: false })}\r\n                  variant=\"secondary\"\r\n                  fullWidth\r\n                >\r\n                  Try Again\r\n                </Button>\r\n              </div>\r\n\r\n              {import.meta.env.DEV && this.state.error && (\r\n                <details className=\"mt-6 text-left\">\r\n                  <summary className=\"cursor-pointer text-sm text-white/50 mb-2 hover:text-white/70 transition-colors\">\r\n                    Error Details (Development)\r\n                  </summary>\r\n                  <div className=\"rounded-lg p-3 text-xs overflow-auto\" style={{\r\n                    background: 'rgba(0, 0, 0, 0.2)',\r\n                    border: '1px solid rgba(255, 255, 255, 0.1)'\r\n                  }}>\r\n                    <pre className=\"whitespace-pre-wrap text-red-400 font-mono\">\r\n                      {sanitizeError(this.state.error).message}\r\n                      {this.state.errorInfo?.componentStack}\r\n                    </pre>\r\n                  </div>\r\n                </details>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","// NOTE: These credentials are for demo purposes only\r\n// In a real application, these would be managed through a secure backend\r\nexport const demoAccounts = [\r\n  { \r\n    role: 'Admin',\r\n    email: import.meta.env.VITE_DEMO_ADMIN_EMAIL || 'admin@hospitalfinance.com',\r\n    password: import.meta.env.VITE_DEMO_ADMIN_PASSWORD || 'UsamaHF2024!'\r\n  },\r\n  {\r\n    role: 'Hospital Owner',\r\n    email: import.meta.env.VITE_DEMO_OWNER_EMAIL || 'owner@metrogeneral.com',\r\n    password: import.meta.env.VITE_DEMO_OWNER_PASSWORD || 'OwnerMG2024!'\r\n  },\r\n  {\r\n    role: 'Branch Manager',\r\n    email: import.meta.env.VITE_DEMO_MANAGER_EMAIL || 'manager@metrogeneral.com',\r\n    password: import.meta.env.VITE_DEMO_MANAGER_PASSWORD || 'ManagerMG2024!'\r\n  }\r\n];","import React, { useState } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport { validatePassword, formatAuthError } from '../../utils/auth';\r\nimport { demoAccounts } from '../../config/demo';\r\nimport { logger } from '../../utils/logger';\r\n\r\ninterface SignInPageProps {\r\n  onSwitchToSignUp: () => void;\r\n}\r\n\r\nconst SignInPage: React.FC<SignInPageProps> = ({ onSwitchToSignUp }: SignInPageProps) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { signIn, isLoading } = useAuth();\r\n  const { resolvedTheme } = useTheme();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n\r\n    const validation = validatePassword(password);\r\n    if (!validation.isValid) {\r\n      setErrorMessage(validation.errors[0] || 'Invalid password');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      logger.info('Sign in attempt', { context: 'SignInPage', data: { email } });\r\n      await signIn(email, password);\r\n      logger.info('Sign in successful', { context: 'SignInPage', data: { email } });\r\n    } catch (error) {\r\n      logger.error('Sign in failed', { context: 'SignInPage', data: { email, error } });\r\n      setErrorMessage(formatAuthError(error));\r\n    }\r\n  };\r\n\r\n  const fillDemo = (email: string, password: string) => {\r\n    setEmail(email);\r\n    setPassword(password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-white dark:text-white relative flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      {/* Background with glassmorphism */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"blob-container\">\r\n          <div className=\"blob blob-center\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"max-w-md w-full relative z-10\">\r\n        <div className=\"text-center mb-8 animate-fade-in-down\">\r\n          <div className=\"flex justify-center mb-4\">\r\n            <div \r\n              className=\"w-16 h-16 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\"\r\n              style={{\r\n                background: resolvedTheme === 'light' \r\n                  ? 'white' \r\n                  : 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.3))',\r\n                border: resolvedTheme === 'light' \r\n                  ? '2px solid rgba(139, 92, 246, 0.2)' \r\n                  : '1px solid rgba(255, 255, 255, 0.2)'\r\n              }}\r\n            >\r\n              <svg className=\"w-8 h-8 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <defs>\r\n                  <linearGradient id=\"logo-gradient-signin\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n                    <stop offset=\"0%\" stopColor=\"#a855f7\" />\r\n                    <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\r\n                    <stop offset=\"100%\" stopColor=\"#c084fc\" />\r\n                  </linearGradient>\r\n                </defs>\r\n                <path \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\" \r\n                  strokeWidth={2} \r\n                  stroke={resolvedTheme === 'light' ? \"url(#logo-gradient-signin)\" : \"white\"} \r\n                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" \r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"text-3xl font-bold tracking-tight\" style={{ color: 'var(--color-text-primary)' }}>Welcome back</h2>\r\n          <p className=\"mt-2\" style={{ color: 'var(--color-text-secondary)' }}>Sign in to your Hospital Finance Dashboard</p>\r\n        </div>\r\n\r\n        <div className=\"glass-card rounded-xl mb-6 animate-fade-in-up\" style={{ padding: 'var(--space-4)' }}>\r\n          <h3 className=\"text-sm font-medium mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\r\n            Quick Demo Access:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\r\n            {demoAccounts.map((account, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => fillDemo(account.email, account.password)}\r\n                className=\"btn-base btn-secondary btn-sm text-xs interactive\"\r\n              >\r\n                <span className=\"capitalize font-medium\">\r\n                  {account.role.replace('_', ' ')}\r\n                </span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"glass-card rounded-xl animate-fade-in-up animation-delay-200 component-spacing-lg\">\r\n          <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n            {errorMessage && (\r\n              <div className=\"glass-card rounded-lg p-4\" style={{ \r\n                background: 'linear-gradient(145deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1))',\r\n                border: '1px solid rgba(239, 68, 68, 0.3)',\r\n                color: 'rgba(239, 68, 68, 0.9)'\r\n              }}>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                  <span className=\"body-small font-medium\">{errorMessage}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex flex-col gap-4\">\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Email Address\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                  style={{\r\n                    border: '1px solid var(--border-secondary)',\r\n                  }}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"password\" className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Password\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Enter your password\"\r\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                    style={{\r\n                      border: '1px solid var(--border-secondary)',\r\n                    }}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\r\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                  >\r\n                    {showPassword ? (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"btn-base btn-primary btn-lg w-full\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center justify-center gap-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                  <span style={{ color: 'white' }}>Signing In...</span>\r\n                </div>\r\n              ) : (\r\n                'Sign In'\r\n              )}\r\n            </button>\r\n          </form>\r\n          \r\n          <div className=\"mt-6\">\r\n            <div className=\"glass-card rounded-lg p-4\">\r\n              <p className=\"text-sm mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                Don't have an account?\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onSwitchToSignUp}\r\n                className=\"btn-base btn-secondary btn-md w-full interactive\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" />\r\n                </svg>\r\n                Create Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center text-xs mt-8 animate-fade-in-up animation-delay-400\" style={{ color: 'var(--color-text-muted)' }}>\r\n          <p>© 2024 Hospital Finance Dashboard.<br />All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","import React, { useState } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport { UserRole, SignUpData } from '../../types/auth';\r\nimport { hospitals } from '../../data/mockData';\r\nimport { roleDescriptions } from '../../data/mockUsers';\r\nimport Dropdown from '../Dropdown';\r\n\r\ninterface SignUpPageProps {\r\n  onSwitchToSignIn: () => void;\r\n}\r\n\r\nconst SignUpPage: React.FC<SignUpPageProps> = ({ onSwitchToSignIn }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: 'branch_owner' as UserRole,\r\n    hospitalId: '',\r\n    hospitalIds: [] as string[]\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const { signUp, isLoading } = useAuth();\r\n  const { resolvedTheme } = useTheme();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (formData.password.length < 6) {\r\n      setError('Password must be at least 6 characters long');\r\n      return;\r\n    }\r\n\r\n    if (formData.role === 'branch_owner' && !formData.hospitalId) {\r\n      setError('Please select a hospital for branch manager role');\r\n      return;\r\n    }\r\n\r\n    if (formData.role === 'hospital_owner' && formData.hospitalIds.length === 0) {\r\n      setError('Please select at least one hospital for hospital owner role');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const signUpData: SignUpData = {\r\n        name: formData.name,\r\n        email: formData.email,\r\n        password: formData.password,\r\n        role: formData.role\r\n      };\r\n\r\n      if (formData.role === 'branch_owner' && formData.hospitalId) {\r\n        signUpData.hospitalId = formData.hospitalId;\r\n      }\r\n      \r\n      if (formData.role === 'hospital_owner' && formData.hospitalIds.length > 0) {\r\n        signUpData.hospitalIds = formData.hospitalIds;\r\n      }\r\n\r\n      await signUp(signUpData);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: string, value: string | string[]) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleHospitalSelection = (hospitalId: string, checked: boolean) => {\r\n    if (checked) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        hospitalIds: [...prev.hospitalIds, hospitalId]\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        hospitalIds: prev.hospitalIds.filter(id => id !== hospitalId)\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen text-white dark:text-white relative flex items-center justify-center py-6 sm:py-12 px-4 sm:px-6 lg:px-8\">\r\n      {/* Background with glassmorphism */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"blob-container\">\r\n          <div className=\"blob blob-center\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"max-w-lg w-full relative z-10\">\r\n        <div className=\"text-center mb-8 animate-fade-in-down\">\r\n          <div className=\"flex justify-center mb-4\">\r\n            <div \r\n              className=\"w-16 h-16 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\"\r\n              style={{\r\n                background: resolvedTheme === 'light' \r\n                  ? 'white' \r\n                  : 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.3))',\r\n                border: resolvedTheme === 'light' \r\n                  ? '2px solid rgba(139, 92, 246, 0.2)' \r\n                  : '1px solid rgba(255, 255, 255, 0.2)'\r\n              }}\r\n            >\r\n              <svg className=\"w-8 h-8 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <defs>\r\n                  <linearGradient id=\"logo-gradient-signup\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n                    <stop offset=\"0%\" stopColor=\"#a855f7\" />\r\n                    <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\r\n                    <stop offset=\"100%\" stopColor=\"#c084fc\" />\r\n                  </linearGradient>\r\n                </defs>\r\n                <path \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\" \r\n                  strokeWidth={2} \r\n                  stroke={resolvedTheme === 'light' ? \"url(#logo-gradient-signup)\" : \"white\"} \r\n                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" \r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"text-3xl font-bold tracking-tight\" style={{ color: 'var(--color-text-primary)' }}>Create an Account</h2>\r\n          <p className=\"mt-2\" style={{ color: 'var(--color-text-secondary)' }}>Join the Hospital Finance Dashboard</p>\r\n        </div>\r\n\r\n        <div className=\"glass-card rounded-xl animate-fade-in-up component-spacing-lg\">\r\n          <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\r\n            {error && (\r\n              <div className=\"glass-card rounded-lg\" style={{ \r\n                padding: 'var(--space-4)',\r\n                background: 'linear-gradient(145deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1))',\r\n                border: '1px solid rgba(239, 68, 68, 0.3)',\r\n                color: 'rgba(239, 68, 68, 0.9)'\r\n              }}>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                  <span className=\"body-small font-medium\">{error}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Full Name\r\n                </label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.name}\r\n                  onChange={(e) => handleInputChange('name', e.target.value)}\r\n                  placeholder=\"Enter your full name\"\r\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                  style={{\r\n                    border: '1px solid var(--border-secondary)',\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Email Address\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  required\r\n                  value={formData.email}\r\n                  onChange={(e) => handleInputChange('email', e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                  style={{\r\n                    border: '1px solid var(--border-secondary)',\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Password\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    required\r\n                    value={formData.password}\r\n                    onChange={(e) => handleInputChange('password', e.target.value)}\r\n                    placeholder=\"Create a password\"\r\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                    style={{\r\n                      border: '1px solid var(--border-secondary)',\r\n                    }}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\r\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                  >\r\n                    {showPassword ? (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Confirm Password\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    id=\"confirmPassword\"\r\n                    type={showConfirmPassword ? \"text\" : \"password\"}\r\n                    required\r\n                    value={formData.confirmPassword}\r\n                    onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\r\n                    placeholder=\"Confirm your password\"\r\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\r\n                    style={{\r\n                      border: '1px solid var(--border-secondary)',\r\n                    }}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\r\n                    aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                  >\r\n                    {showConfirmPassword ? (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\r\n                Account Type\r\n              </label>\r\n              <div className=\"flex flex-col gap-3\">\r\n                {(Object.keys(roleDescriptions) as UserRole[]).map((role) => (\r\n                  <div key={role} className=\"glass-card rounded-lg p-3 interactive\" style={{ \r\n                    background: formData.role === role ? 'rgba(139, 92, 246, 0.2)' : 'rgba(255, 255, 255, 0.05)',\r\n                    border: `1px solid ${formData.role === role ? 'var(--brand-primary)' : 'var(--border-secondary)'}`,\r\n                    opacity: role === 'admin' ? 0.5 : 1\r\n                  }}>\r\n                    <div className=\"flex items-start\">\r\n                      <input\r\n                        id={role}\r\n                        type=\"radio\"\r\n                        name=\"role\"\r\n                        value={role}\r\n                        checked={formData.role === role}\r\n                        onChange={(e) => handleInputChange('role', e.target.value as UserRole)}\r\n                        className=\"custom-radio mt-1\"\r\n                        disabled={role === 'admin'}\r\n                      />\r\n                      <div className=\"ml-3\">\r\n                        <label htmlFor={role} className=\"body-base font-medium form-label-interactive\" style={{ color: 'var(--color-text-primary)', display: 'block' }}>\r\n                          {roleDescriptions[role].title}\r\n                          {role === 'admin' && <span style={{ color: 'var(--color-text-muted)' }} className=\"ml-2\">(Contact admin)</span>}\r\n                        </label>\r\n                        <p className=\"text-xs mt-1\" style={{ color: 'var(--color-text-muted)' }}>\r\n                          {roleDescriptions[role].description}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {formData.role === 'branch_owner' && (\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Select Hospital\r\n                </label>\r\n                <Dropdown\r\n                  options={hospitals.map(hospital => ({\r\n                    value: hospital.id,\r\n                    label: hospital.name,\r\n                    subtitle: `${hospital.type} • ${hospital.location}`\r\n                  }))}\r\n                  value={formData.hospitalId}\r\n                  onChange={(value) => handleInputChange('hospitalId', value)}\r\n                  placeholder=\"Choose a hospital...\"\r\n                  className=\"w-full\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {formData.role === 'hospital_owner' && (\r\n              <div>\r\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\r\n                  Select Hospitals (you can select multiple)\r\n                </label>\r\n                <div className=\"flex flex-col gap-2 max-h-32 overflow-y-auto glass-card rounded-lg p-3\">\r\n                  {hospitals.map((hospital) => (\r\n                    <div key={hospital.id} className=\"flex items-center p-2 rounded hover:bg-white/5 transition-colors\">\r\n                      <input\r\n                        id={`hospital-${hospital.id}`}\r\n                        type=\"checkbox\"\r\n                        checked={formData.hospitalIds.includes(hospital.id)}\r\n                        onChange={(e) => handleHospitalSelection(hospital.id, e.target.checked)}\r\n                        className=\"custom-checkbox\"\r\n                      />\r\n                      <label htmlFor={`hospital-${hospital.id}`} className=\"ml-2 text-sm form-label-interactive\" style={{ color: 'var(--color-text-primary)' }}>\r\n                        {hospital.name}\r\n                        <span style={{ color: 'var(--color-text-muted)' }} className=\"ml-1\">({hospital.type} • {hospital.location})</span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"btn-base btn-primary btn-lg w-full\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center justify-center gap-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                  <span style={{ color: 'white' }}>Creating Account...</span>\r\n                </div>\r\n              ) : (\r\n                'Create Account'\r\n              )}\r\n            </button>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"glass-card rounded-lg p-4\">\r\n                <p className=\"text-sm mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\r\n                  Already have an account?\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onSwitchToSignIn}\r\n                  className=\"btn-base btn-secondary btn-md w-full interactive\"\r\n                >\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                  </svg>\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"text-center text-xs mt-8 animate-fade-in-up animation-delay-200\" style={{ color: 'var(--color-text-muted)' }}>\r\n          <p>© 2024 Hospital Finance Dashboard.<br />All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React, { useState } from 'react';\r\nimport SignInPage from './SignInPage';\r\nimport SignUpPage from './SignUpPage';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface AuthWrapperProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * A component that wraps the main application and handles authentication.\r\n * It displays a loading spinner while checking the user's authentication status,\r\n * and shows the sign-in or sign-up page if the user is not authenticated.\r\n *\r\n * @param {AuthWrapperProps} props The component props.\r\n * @param {React.ReactNode} props.children The child components to render if the user is authenticated.\r\n * @returns {React.ReactElement} The rendered component.\r\n */\r\nconst AuthWrapper: React.FC<AuthWrapperProps> = ({ children }) => {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <LoadingSpinner\r\n        size=\"md\"\r\n        text=\"Loading...\"\r\n        className=\"min-h-screen\"\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return isSignUp ? (\r\n      <SignUpPage onSwitchToSignIn={() => setIsSignUp(false)} />\r\n    ) : (\r\n      <SignInPage onSwitchToSignUp={() => setIsSignUp(true)} />\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import { Suspense } from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\nimport AuthWrapper from './components/auth/AuthWrapper';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <ThemeProvider>\r\n        <AuthProvider>\r\n          <div className=\"App min-h-screen text-white dark:text-white transition-colors duration-300\">\r\n            {/* Skip Navigation Link for Accessibility */}\r\n            <a \r\n              href=\"#main-content\" \r\n              className=\"sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-primary-600 focus:text-white focus:rounded-lg focus:shadow-lg focus:outline-none focus:ring-2 focus:ring-primary-400 transition-all\"\r\n              tabIndex={1}\r\n            >\r\n              Skip to main content\r\n            </a>\r\n            \r\n            {/* Preload theme styles to prevent first-time abrupt changes */}\r\n            <div className=\"preload-themes absolute opacity-0 pointer-events-none -z-50\" aria-hidden=\"true\">\r\n              <div className=\"glass-card btn-base btn-primary btn-secondary theme-toggle animate-pulse-glow\">\r\n                <div className=\"dropdown-button dropdown-options gradient-bg-primary\"></div>\r\n                <div className=\"logo-container logo-container-inverted\"></div>\r\n                <div className=\"avatar-gradient-border performance-insight-card\"></div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Animated Blob Background */}\r\n            <div className=\"animated-blob-bg\">\r\n              <div className=\"blob blob-center\"></div>\r\n            </div>\r\n            \r\n            <AuthWrapper>\r\n              <Suspense fallback={<LoadingSpinner text=\"Loading Dashboard...\" className=\"min-h-screen\" />}>\r\n                <Dashboard />\r\n              </Suspense>\r\n            </AuthWrapper>\r\n          </div>\r\n        </AuthProvider>\r\n      </ThemeProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * Creates a debounced function that delays invoking the target function\r\n * until after wait milliseconds have elapsed since the last time it was invoked.\r\n * \r\n * @param fn - Function to debounce\r\n * @param wait - Number of milliseconds to delay\r\n * @param options - Configuration options\r\n * @returns Debounced function\r\n */\r\nexport function debounce<Args extends unknown[], R>(\r\n  fn: (...args: Args) => R,\r\n  wait = 100,\r\n  options: { leading?: boolean; trailing?: boolean } = {}\r\n): ((...args: Args) => void) & { cancel: () => void } {\r\n  let timeout: ReturnType<typeof setTimeout> | null = null;\r\n  let lastArgs: Args | null = null;\r\n\r\n  const debouncedFn = function(this: unknown, ...args: Args) {\r\n    lastArgs = args;\r\n\r\n    const later = () => {\r\n      timeout = null;\r\n      // Only make trailing call if leading is false and trailing is not explicitly false\r\n      if (!options.leading && options.trailing !== false && lastArgs) {\r\n        fn.apply(this, lastArgs);\r\n        lastArgs = null;\r\n      }\r\n    };\r\n\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    } else if (options.leading) {\r\n      fn.apply(this, args);\r\n    }\r\n\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n\r\n  Object.defineProperty(debouncedFn, 'cancel', {\r\n    value: () => {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n        lastArgs = null;\r\n      }\r\n    },\r\n    enumerable: false,\r\n    writable: false,\r\n    configurable: true\r\n  });\r\n\r\n  return debouncedFn as ((...args: Args) => void) & { cancel: () => void };\r\n}\r\n\r\n/**\r\n * Performance metrics interface\r\n */\r\nexport interface PerformanceMetrics {\r\n  name: string;\r\n  startTime: number;\r\n  endTime?: number;\r\n  duration?: number;\r\n  metadata?: Record<string, unknown>;\r\n}\r\n\r\n/**\r\n * Performance monitoring class\r\n */\r\nexport class PerformanceMonitor {\r\n  private metrics: Map<string, PerformanceMetrics> = new Map();\r\n  private webVitalsStarted = false;\r\n\r\n  /**\r\n   * Starts timing a performance metric\r\n   */\r\n  startTiming(name: string, metadata?: Record<string, unknown>): void {\r\n    if (this.metrics.has(name)) {\r\n      logger.warn(`Performance metric '${name}' already exists`, {\r\n        context: 'PerformanceMonitor',\r\n        data: { name }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.metrics.set(name, {\r\n      name,\r\n      startTime: performance.now(),\r\n      metadata: metadata || {}\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ends timing a performance metric\r\n   */\r\n  endTiming(name: string): PerformanceMetrics | undefined {\r\n    const metric = this.metrics.get(name);\r\n    if (!metric) {\r\n      logger.warn(`Performance metric '${name}' not found`, {\r\n        context: 'PerformanceMonitor',\r\n        data: { name }\r\n      });\r\n      return undefined;\r\n    }\r\n\r\n    const endTime = performance.now();\r\n    const duration = endTime - metric.startTime;\r\n\r\n    const completedMetric: PerformanceMetrics = {\r\n      ...metric,\r\n      endTime,\r\n      duration\r\n    };\r\n\r\n    this.metrics.set(name, completedMetric);\r\n    return completedMetric;\r\n  }\r\n\r\n  /**\r\n   * Gets all metrics\r\n   */\r\n  getAllMetrics(): PerformanceMetrics[] {\r\n    return Array.from(this.metrics.values());\r\n  }\r\n\r\n  /**\r\n   * Clears all metrics\r\n   */\r\n  clearMetrics(): void {\r\n    this.metrics.clear();\r\n  }\r\n\r\n  /**\r\n   * Starts web vitals monitoring\r\n   */\r\n  startWebVitalsMonitoring(): void {\r\n    if (this.webVitalsStarted) return;\r\n\r\n    import('./webVitals').then(({ webVitals }) => {\r\n      webVitals.startMonitoring();\r\n      this.webVitalsStarted = true;\r\n    }).catch(error => {\r\n      logger.error('Failed to start web vitals monitoring', {\r\n        context: 'PerformanceMonitor',\r\n        data: { error }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops web vitals monitoring\r\n   */\r\n  stopWebVitalsMonitoring(): void {\r\n    if (!this.webVitalsStarted) return;\r\n\r\n    import('./webVitals').then(({ webVitals }) => {\r\n      webVitals.stopMonitoring();\r\n      this.webVitalsStarted = false;\r\n    }).catch(error => {\r\n      logger.error('Failed to stop web vitals monitoring', {\r\n        context: 'PerformanceMonitor',\r\n        data: { error }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Global performance monitor instance\r\n */\r\nexport const performanceMonitor = new PerformanceMonitor();\r\n\r\nexport * from './performanceUtils';\r\n\r\n/**\r\n * React hook for measuring component render performance\r\n */\r\nexport function useRenderPerformance(componentName: string): void {\r\n  React.useEffect(() => {\r\n    // SSR check - don't run performance monitoring on server\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    performanceMonitor.startTiming(`${componentName}-render`);\r\n    \r\n    return () => {\r\n      performanceMonitor.endTiming(`${componentName}-render`);\r\n    };\r\n  });\r\n}","/**\r\n * Web Vitals monitoring module\r\n * \r\n * This module implements PerformanceObserver to track Core Web Vitals and\r\n * other key performance metrics with optimized, debounced reporting to reduce overhead.\r\n */\r\n\r\nimport { logger } from './logger';\r\nimport { performanceMonitor, debounce } from './performance';\r\n\r\n// Performance Entry Types\r\ninterface LayoutShift extends PerformanceEntry {\r\n  value: number;\r\n  hadRecentInput: boolean;\r\n}\r\n\r\ninterface PerformanceEventTiming extends PerformanceEntry {\r\n  processingStart?: number;\r\n}\r\n\r\n/**\r\n * Web Vitals metric types\r\n */\r\nexport type WebVitalMetricType = \r\n  | 'CLS'  // Cumulative Layout Shift\r\n  | 'FID'  // First Input Delay\r\n  | 'LCP'  // Largest Contentful Paint\r\n  | 'FCP'  // First Contentful Paint\r\n  | 'TTFB' // Time to First Byte\r\n  | 'INP'; // Interaction to Next Paint\r\n\r\n/**\r\n * Web Vitals metric value with optional navigation timing\r\n */\r\nexport interface WebVitalMetric {\r\n  name: WebVitalMetricType;\r\n  value: number;\r\n  rating: 'good' | 'needs-improvement' | 'poor';\r\n  navigationType?: NavigationTimingType | undefined;\r\n}\r\n\r\n/**\r\n * Thresholds for Web Vitals metrics\r\n */\r\nconst thresholds = {\r\n  CLS: { good: 100, poor: 250 },  // Values are adjusted for our scale\r\n  FID: { good: 100, poor: 300 },\r\n  LCP: { good: 2500, poor: 4000 },\r\n  FCP: { good: 1800, poor: 3000 },\r\n  TTFB: { good: 800, poor: 1800 },\r\n  INP: { good: 200, poor: 500 }\r\n};\r\n\r\n/**\r\n * Gets the rating for a metric value based on thresholds\r\n */\r\nfunction getRating(name: WebVitalMetricType, value: number): WebVitalMetric['rating'] {\r\n  const threshold = thresholds[name];\r\n  if (value <= threshold.good) return 'good';\r\n  if (value <= threshold.poor) return 'needs-improvement';\r\n  return 'poor';\r\n}\r\n\r\n/**\r\n * Web Vitals monitor that implements debounced reporting and metric aggregation\r\n */\r\nexport class WebVitalsMonitor {\r\n  private observers: PerformanceObserver[] = [];\r\n  private metrics: Map<WebVitalMetricType, WebVitalMetric> = new Map();\r\n  private aggregatedMetrics: Map<WebVitalMetricType, number[]> = new Map();\r\n  private debouncedProcessMetrics!: ((metric: WebVitalMetric) => void) & { cancel(): void };\r\n  \r\n  constructor() {\r\n    // Initialize debounced processing - aggregate over 5 second windows\r\n    const processMetric = (metric: WebVitalMetric) => this.processMetric(metric);\r\n    this.debouncedProcessMetrics = debounce(processMetric, 5000, { leading: false, trailing: true });\r\n  }\r\n\r\n  /**\r\n   * Starts monitoring Web Vitals\r\n   */\r\n  startMonitoring(): void {\r\n    // Clear old metrics and start fresh\r\n    this.metrics.clear();\r\n    this.aggregatedMetrics.clear();\r\n    \r\n    // Layout Shifts (CLS)\r\n    this.observe(['layout-shift'], (entries) => {\r\n      for (const entry of entries) {\r\n        const layoutShift = entry as LayoutShift;\r\n        if (!layoutShift.hadRecentInput && layoutShift.value) {\r\n          this.updateMetric('CLS', layoutShift.value * 1000); // Scale to match our thresholds\r\n        }\r\n      }\r\n    });\r\n\r\n    // First Input Delay (FID)\r\n    this.observe(['first-input'], (entries) => {\r\n      const firstInput = entries[0] as PerformanceEventTiming;\r\n      if (firstInput?.processingStart && firstInput?.startTime) {\r\n        const value = firstInput.processingStart - firstInput.startTime;\r\n        this.updateMetric('FID', value);\r\n      }\r\n    });\r\n\r\n    // Largest Contentful Paint (LCP)\r\n    this.observe(['largest-contentful-paint'], (entries) => {\r\n      const lastEntry = entries[entries.length - 1];\r\n      if (lastEntry) {\r\n        this.updateMetric('LCP', lastEntry.startTime);\r\n      }\r\n    });\r\n\r\n    // First Contentful Paint (FCP)\r\n    this.observe(['paint'], (entries) => {\r\n      for (const entry of entries) {\r\n        if (entry.name === 'first-contentful-paint') {\r\n          this.updateMetric('FCP', entry.startTime);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Time to First Byte (TTFB)\r\n    this.observe(['navigation'], (entries) => {\r\n      const navigationEntry = entries[0] as PerformanceNavigationTiming;\r\n      if (navigationEntry) {\r\n        this.updateMetric('TTFB', navigationEntry.responseStart);\r\n      }\r\n    });\r\n\r\n    // Interaction to Next Paint (INP)\r\n    this.observe(['event'], (entries) => {\r\n      let maxDuration = 0;\r\n      for (const entry of entries) {\r\n        maxDuration = Math.max(maxDuration, entry.duration);\r\n      }\r\n      this.updateMetric('INP', maxDuration);\r\n    });\r\n\r\n    logger.info('Web Vitals monitoring started', {\r\n      context: 'WebVitalsMonitor'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stops monitoring Web Vitals\r\n   */\r\n  stopMonitoring(): void {\r\n    this.observers.forEach(observer => observer.disconnect());\r\n    this.observers = [];\r\n    this.metrics.clear();\r\n    this.aggregatedMetrics.clear();\r\n    this.debouncedProcessMetrics.cancel();\r\n\r\n    logger.info('Web Vitals monitoring stopped', {\r\n      context: 'WebVitalsMonitor'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets all collected metrics\r\n   */\r\n  getMetrics(): WebVitalMetric[] {\r\n    return Array.from(this.metrics.values());\r\n  }\r\n\r\n  /**\r\n   * Helper to safely create PerformanceObserver\r\n   */\r\n  private observe(\r\n    entryTypes: string[],\r\n    callback: (entries: PerformanceEntry[]) => void\r\n  ): void {\r\n    try {\r\n      const observer = new PerformanceObserver((list) => {\r\n        callback(list.getEntries());\r\n      });\r\n\r\n      observer.observe({ entryTypes, buffered: true });\r\n      this.observers.push(observer);\r\n    } catch (error) {\r\n      logger.warn(`Failed to create PerformanceObserver for ${entryTypes.join(', ')}`, {\r\n        context: 'WebVitalsMonitor',\r\n        data: { error }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates and processes a Web Vital metric\r\n   */\r\n  private updateMetric(name: WebVitalMetricType, value: number): void {\r\n    // Create new metric with navigation timing\r\n    let navigationType: NavigationTimingType | undefined;\r\n    \r\n    try {\r\n      if (typeof window !== 'undefined' && window.performance) {\r\n        const entries = window.performance.getEntriesByType('navigation');\r\n        if (entries?.[0]) {\r\n          const navEntry = entries[0] as PerformanceNavigationTiming;\r\n          navigationType = navEntry.type;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (process.env.NODE_ENV !== 'test') {\r\n        logger.warn('Failed to get navigation timing', {\r\n          context: 'WebVitalsMonitor',\r\n          data: { error }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Create metric object\r\n    const metric: WebVitalMetric = {\r\n      name,\r\n      value,\r\n      rating: getRating(name, value),\r\n      navigationType\r\n    };\r\n\r\n    // Store raw value in aggregation buffer\r\n    const values = this.aggregatedMetrics.get(name) ?? [];\r\n    values.push(value);\r\n    this.aggregatedMetrics.set(name, values);\r\n\r\n    // Update current metrics\r\n    this.metrics.set(name, metric);\r\n    \r\n    // Track timing and trigger debounced processing\r\n    const timingKey = `webvital-${name.toLowerCase()}`;\r\n    performanceMonitor.startTiming(timingKey);\r\n    this.debouncedProcessMetrics(metric);\r\n    performanceMonitor.endTiming(timingKey);\r\n\r\n    // Log individual update\r\n    logger.info('Web Vital metric updated', {\r\n      context: 'WebVitalsMonitor',\r\n      data: {\r\n        name,\r\n        value,\r\n        rating: metric.rating\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Processes aggregated metrics for the collection window\r\n   */\r\n  private processMetric(metric: WebVitalMetric): void {\r\n    const values = this.aggregatedMetrics.get(metric.name);\r\n    if (!values?.length) return;\r\n    \r\n    // Calculate aggregated statistics\r\n    const avg = values.reduce((a, b) => a + b, 0) / values.length;\r\n    const max = Math.max(...values);\r\n    const min = Math.min(...values);\r\n    \r\n    // Track timing metrics for the aggregation window\r\n    const metricBase = `webvital-${metric.name.toLowerCase()}-window`;\r\n    performanceMonitor.startTiming(metricBase);\r\n    \r\n    // Log the aggregated metrics\r\n    logger.info('Web Vital metrics aggregated', {\r\n      context: 'WebVitalsMonitor',\r\n      data: {\r\n        metric: metric.name,\r\n        currentValue: metric.value,\r\n        average: avg,\r\n        maximum: max,\r\n        minimum: min,\r\n        sampleCount: values.length,\r\n        rating: getRating(metric.name, avg)\r\n      }\r\n    });\r\n    \r\n    performanceMonitor.endTiming(metricBase);\r\n    \r\n    // Clear the aggregation buffer for the next window\r\n    this.aggregatedMetrics.set(metric.name, []);\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const webVitals = new WebVitalsMonitor();","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\n// Import Web Vitals monitoring\r\nimport { webVitals } from './utils/webVitals'\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nif (!rootElement) {\r\n  throw new Error('Failed to find root element. Check if the HTML includes a div with id=\"root\"');\r\n}\r\n\r\n// Initialize React app\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// Start Web Vitals monitoring after app initialization\r\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'production') {\r\n  // Small delay to ensure DOM is ready\r\n  setTimeout(() => {\r\n    webVitals.startMonitoring();\r\n  }, 100);\r\n}\r\n"],"file":"assets/main-Y9UVih5p.js"}