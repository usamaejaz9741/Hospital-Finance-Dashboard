{"version":3,"mappings":"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","names":["Dropdown","options","value","onChange","placeholder","className","isOpen","setIsOpen","useState","dropdownRef","useRef","selectedOption","find","option","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","jsxs","ref","style","overflow","children","jsx","type","borderRadius","padding","onClick","marginBottom","label","subtitle","marginTop","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","role","zIndex","position","top","left","right","maxHeight","length","map","handleOptionClick","optionValue","fontSize","ThemeContext","createContext","ThemeProvider","theme","setThemeState","resolvedTheme","setResolvedTheme","isTransitioning","setIsTransitioning","getSystemTheme","useCallback","window","matchMedia","matches","applyTheme","newResolvedTheme","root","documentElement","classList","add","setTimeout","remove","body","offsetHeight","querySelectorAll","forEach","el","getComputedStyle","backgroundColor","color","borderColor","animationPlayState","resolveTheme","themeValue","forceStyleComputation","classes","testElement","createElement","visibility","pointerEvents","appendChild","lightStyle","boxShadow","backgroundImage","backdropFilter","filter","textShadow","darkStyle","removeChild","getPropertyValue","initialTheme","localStorage","getItem","initialResolvedTheme","mediaQuery","handleChange","e","systemTheme","setTheme","newTheme","setItem","toggleTheme","Provider","useTheme","context","useContext","Error","ThemeToggle","size","iconSize","sm","md","lg","disabled","background","border","WebkitBackdropFilter","title","Fragment","validatePassword","password","errors","push","test","isValid","mockUsers","id","email","name","createdAt","lastLogin","hospitalIds","hospitalId","roleDescriptions","admin","description","permissions","hospital_owner","branch_owner","logger","isDev","formatMessage","level","message","timestamp","Date","toISOString","toUpperCase","log","this","handleProductionError","data","info","warn","error","hospitals","location","availableYears","generateVariation","baseValue","variationPercent","variation","Math","round","random","hospitalDataByYear","hospital","year","baseMultiplier","hospitalData","lastUpdated","toLocaleDateString","month","day","financialMetrics","change","changeType","period","format","revenueData","revenue","expenses","netIncome","departmentFinances","emergencyRevenue","emergencyExpenses","emergencyProfit","department","profit","profitMargin","surgeryRevenue","surgeryExpenses","surgeryProfit","cardiologyRevenue","cardiologyExpenses","cardiologyProfit","deptRevenue","deptExpenses","deptProfit","orthoRevenue","orthoExpenses","orthoProfit","patientMetrics","totalPatients","inpatients","outpatients","emergencyVisits","averageStayDuration","occupancyRate","expenseBreakdown","salariesAmount","suppliesAmount","equipmentAmount","utilitiesAmount","maintenanceAmount","otherAmount","totalAmount","category","amount","percentage","cashFlowData","date","operatingCashFlow","investingCashFlow","financingCashFlow","netCashFlow","AuthContext","AuthProvider","user","setUser","isLoading","setIsLoading","storedUser","parsedUser","JSON","parse","removeItem","isAuthenticated","signIn","async","userData","Promise","resolve","passwordValidation","u","attemptKey","attempts","parseInt","lockoutTime","now","includes","toString","authService","stringify","signUp","newUser","signOut","userId","canAccessHospital","getAccessibleHospitals","h","useAuth","getUserAvatarColor","colors","hash","i","charCodeAt","abs","Header","selectedHospitalId","selectedYear","onHospitalChange","onYearChange","isMobileMenuOpen","setIsMobileMenuOpen","isUserMenuOpen","setIsUserMenuOpen","isFilterMenuOpen","setIsFilterMenuOpen","localHospitalId","setLocalHospitalId","localYear","setLocalYear","hasFilterChanges","closest","hospitalOptions","yearOptions","paddingTop","paddingBottom","x1","y1","x2","y2","offset","stopColor","transform","minWidth","src","encodeURIComponent","alt","loading","width","height","bottom","paddingLeft","paddingRight","replace","formatCurrency","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","formatPercentage","toFixed","formatNumber","MetricCard","metric","formatValue","lineHeight","wordSpacing","letterSpacing","gap","marginRight","LoadingSpinner","text","subtext","spinnerSize","borderWidth","borderStyle","borderBottomColor","DashboardLoading","selectedHospital","DashboardNoData","RevenueChart","lazy","__vitePreload","import","__VITE_PRELOAD__","ExpensePieChart","CashFlowChart","PatientMetricsCard","DepartmentTable","Dashboard","accessibleHospitals","filteredHospitals","useMemo","setSelectedHospitalId","setSelectedYear","currentData","setCurrentData","showFilters","setShowFilters","timeout","clearTimeout","handleHospitalChange","handleYearChange","previousYear","display","Suspense","fallback","metrics","departments","margin","sanitizeString","input","trim","z.string","min","max","regex","z.enum","z.object","optional","z.array","Button","variant","fullWidth","props","combinedClasses","primary","secondary","danger","ghost","ErrorBoundary","Component","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","sanitizedError","stack","sanitizeError","componentStack","setState","render","reload","demoAccounts","SignInPage","onSwitchToSignUp","setEmail","setPassword","showPassword","setShowPassword","errorMessage","setErrorMessage","account","index","fillDemo","onSubmit","preventDefault","validation","formatAuthError","required","SignUpPage","onSwitchToSignIn","formData","setFormData","confirmPassword","setError","showConfirmPassword","setShowConfirmPassword","handleInputChange","field","prev","signUpData","err","keys","opacity","checked","htmlFor","handleHospitalSelection","AuthWrapper","isSignUp","setIsSignUp","App","ReactDOM","createRoot","getElementById","React","StrictMode"],"ignoreList":[],"sources":["../../src/components/Dropdown.tsx","../../src/contexts/ThemeContext.tsx","../../src/hooks/useTheme.ts","../../src/components/ThemeToggle.tsx","../../src/utils/auth.ts","../../src/data/mockUsers.ts","../../src/utils/logger.ts","../../src/data/mockData.ts","../../src/contexts/AuthContext.tsx","../../src/hooks/useAuth.ts","../../src/components/Header.tsx","../../src/utils/formatters.ts","../../src/components/MetricCard.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/DashboardLoading.tsx","../../src/components/DashboardNoData.tsx","../../src/components/Dashboard.tsx","../../src/utils/security.ts","../../src/components/Button.tsx","../../src/components/ErrorBoundary.tsx","../../src/config/demo.ts","../../src/components/auth/SignInPage.tsx","../../src/components/auth/SignUpPage.tsx","../../src/components/auth/AuthWrapper.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\ninterface DropdownOption {\n  value: string;\n  label: string;\n  subtitle?: string;\n}\n\ninterface DropdownProps {\n  options: DropdownOption[];\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  className?: string;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ \n  options, \n  value, \n  onChange, \n  placeholder, \n  className = '' \n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const selectedOption = options.find(option => option.value === value);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleOptionClick = (optionValue: string) => {\n    onChange(optionValue);\n    setIsOpen(false);\n  };\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div \n      ref={dropdownRef} \n      className={`relative ${className}`}\n      style={{ overflow: 'visible' }}\n    >\n      <button\n        type=\"button\"\n        className=\"w-full dropdown-button text-secondary hover:text-primary text-left shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400/50 interactive\"\n        style={{\n          borderRadius: 'var(--radius-md)',\n          padding: 'var(--space-2) var(--space-4)'\n        }}\n        onClick={handleToggle}\n        aria-haspopup=\"listbox\"\n        aria-expanded={isOpen}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"min-w-0 flex-1\">\n            {selectedOption ? (\n              <div className=\"min-w-0\">\n                <div className=\"body-base font-medium text-primary truncate\" style={{ marginBottom: '0' }}>{selectedOption.label}</div>\n                {selectedOption.subtitle && (\n                  <div className=\"text-caption text-tertiary truncate\" style={{ marginTop: 'var(--space-1)', marginBottom: '0' }}>{selectedOption.subtitle}</div>\n                )}\n              </div>\n            ) : (\n              <span className=\"body-base text-tertiary truncate\">{placeholder}</span>\n            )}\n          </div>\n          <div className=\"ml-2 flex-shrink-0\">\n            <svg\n              className={`w-4 h-4 text-white/60 transition-transform duration-200 ${\n                isOpen ? 'transform rotate-180' : ''\n              }`}\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n        </div>\n      </button>\n\n      <div \n        className={`dropdown-options gradient-bg-primary absolute w-full overflow-hidden transition-all duration-300 ease-in-out ${\n          isOpen ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-2 pointer-events-none'\n        }`}\n        role=\"listbox\"\n        style={{ \n          zIndex: 99999,\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          right: 0,\n          maxHeight: options.length > 4 ? '300px' : 'auto',\n          marginTop: 'var(--space-2)',\n          borderRadius: 'var(--radius-md)'\n        }}\n      >\n        <div className={options.length > 4 ? 'overflow-y-auto' : ''} style={{ maxHeight: options.length > 4 ? '300px' : 'auto' }}>\n          {options.map((option) => (\n              <button\n                key={option.value}\n                type=\"button\"\n                className={`dropdown-option w-full text-left focus:outline-none transition-colors duration-150 interactive ${\n                  option.value === value ? 'selected' : ''\n                }`}\n                style={{ padding: 'var(--space-2) var(--space-4)' }}\n                onClick={() => handleOptionClick(option.value)}\n                role=\"option\"\n                aria-selected={option.value === value}\n              >\n              <div className=\"min-w-0\">\n                <div className=\"font-medium truncate text-primary\" style={{ fontSize: 'var(--text-base)' }}>{option.label}</div>\n                {option.subtitle && (\n                  <div className=\"text-tertiary truncate\" style={{ fontSize: 'var(--text-xs)', marginTop: 'var(--space-1)' }}>{option.subtitle}</div>\n                )}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { Theme, ThemeContextType, ResolvedTheme } from '../types/theme';\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>('auto');\n  const [resolvedTheme, setResolvedTheme] = useState<ResolvedTheme>('light');\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  // Get system preference\n  const getSystemTheme = useCallback((): ResolvedTheme => {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }, []);\n\n  // Apply theme to DOM with smooth transition and loading state\n  const applyTheme = useCallback((newResolvedTheme: ResolvedTheme) => {\n    const root = document.documentElement;\n    \n    // Set loading state\n    setIsTransitioning(true);\n    \n    // Add transition class for smooth theme switching\n    root.classList.add('transitioning');\n    \n    // Switch theme at 1.2s (during deep black phase when opacity is 95%+)\n    setTimeout(() => {\n      if (newResolvedTheme === 'dark') {\n        root.classList.add('dark');\n      } else {\n        root.classList.remove('dark');\n      }\n      \n      // Force a reflow to ensure DOM changes are applied instantly\n      document.body.offsetHeight;\n      \n      // Force re-computation of all critical styles during black phase\n      const criticalElements = document.querySelectorAll('.glass-card, .btn-base, .dropdown-button, .theme-toggle, .blob, .animate-float');\n      criticalElements.forEach(el => {\n        window.getComputedStyle(el as Element).backgroundColor;\n        window.getComputedStyle(el as Element).color;\n        window.getComputedStyle(el as Element).borderColor;\n      });\n    }, 1200); // Deep in black phase (40% of 3s animation)\n    \n    // Extended transition duration for three-phase transition\n    setTimeout(() => {\n      root.classList.remove('transitioning');\n      setIsTransitioning(false);\n      \n      // Re-enable animations after transition is complete\n      const animatedElements = document.querySelectorAll('.blob, .animate-float, [class*=\"animate-\"]');\n      animatedElements.forEach(el => {\n        (el as HTMLElement).style.animationPlayState = 'running';\n      });\n    }, 3500); // Longer total duration for smoother fade out\n  }, []);\n\n  // Resolve the actual theme (light/dark) from the theme setting\n  const resolveTheme = useCallback((themeValue: Theme): ResolvedTheme => {\n    if (themeValue === 'auto') {\n      return getSystemTheme();\n    }\n    return themeValue as ResolvedTheme;\n  }, [getSystemTheme]);\n\n  // Enhanced preload system to force both themes to be fully computed\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    // Disable transitions during preload\n    root.classList.add('no-transitions');\n    \n    // Force browser to compute and cache both light and dark mode CSS\n    const forceStyleComputation = () => {\n      // Create comprehensive test elements for all component types\n      const componentClasses = [\n        'preload-themes glass-card btn-base btn-primary btn-secondary btn-danger btn-ghost',\n        'dropdown-button dropdown-options dropdown-option theme-toggle header-glass',\n        'animate-float animate-pulse-glow blob blob-center performance-insight-card',\n        'logo-container logo-container-inverted avatar-gradient-border',\n        'interactive glass-card-hover card badge alert nav panel tooltip',\n        'form-input-focus custom-radio custom-checkbox custom-select',\n        'mobile-menu-overlay sidebar-glass user-profile-dropdown'\n      ];\n      \n      componentClasses.forEach(classes => {\n        const testElement = document.createElement('div');\n        testElement.style.position = 'absolute';\n        testElement.style.visibility = 'hidden';\n        testElement.style.pointerEvents = 'none';\n        testElement.style.top = '-9999px';\n        testElement.className = classes;\n        document.body.appendChild(testElement);\n        \n        // Force light mode computation for all properties\n        root.classList.remove('dark');\n        const lightStyle = window.getComputedStyle(testElement);\n        lightStyle.backgroundColor;\n        lightStyle.color;\n        lightStyle.borderColor;\n        lightStyle.boxShadow;\n        lightStyle.backgroundImage;\n        lightStyle.backdropFilter;\n        lightStyle.filter;\n        lightStyle.textShadow;\n        lightStyle.stroke;\n        lightStyle.fill;\n        \n        // Force dark mode computation for all properties\n        root.classList.add('dark');\n        const darkStyle = window.getComputedStyle(testElement);\n        darkStyle.backgroundColor;\n        darkStyle.color;\n        darkStyle.borderColor;\n        darkStyle.boxShadow;\n        darkStyle.backgroundImage;\n        darkStyle.backdropFilter;\n        darkStyle.filter;\n        darkStyle.textShadow;\n        darkStyle.stroke;\n        darkStyle.fill;\n        \n        // Clean up\n        document.body.removeChild(testElement);\n      });\n      \n      // Force computation of CSS variables in both modes\n      root.classList.remove('dark');\n      window.getComputedStyle(root).getPropertyValue('--color-purple-500');\n      window.getComputedStyle(root).getPropertyValue('--gradient-bg-primary');\n      window.getComputedStyle(root).getPropertyValue('--surface-primary');\n      \n      root.classList.add('dark');\n      window.getComputedStyle(root).getPropertyValue('--color-purple-500');\n      window.getComputedStyle(root).getPropertyValue('--gradient-bg-primary');\n      window.getComputedStyle(root).getPropertyValue('--surface-primary');\n    };\n    \n    // Multiple passes to ensure complete preloading\n    forceStyleComputation();\n    \n    // Additional delay to ensure CSS is fully processed\n    setTimeout(() => {\n      forceStyleComputation(); // Second pass\n      \n      setTimeout(() => {\n        const storedTheme = localStorage.getItem('hospitalFinanceTheme') as Theme;\n        const initialTheme = storedTheme || 'auto';\n        const initialResolvedTheme = resolveTheme(initialTheme);\n        \n        // Apply initial theme without transition\n        if (initialResolvedTheme === 'dark') {\n          root.classList.add('dark');\n        } else {\n          root.classList.remove('dark');\n        }\n        \n        setThemeState(initialTheme);\n        setResolvedTheme(initialResolvedTheme);\n        \n        // Re-enable transitions after complete setup\n        setTimeout(() => {\n          root.classList.remove('no-transitions');\n        }, 200);\n      }, 100);\n    }, 100);\n  }, [resolveTheme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e: MediaQueryListEvent) => {\n      const systemTheme = e.matches ? 'dark' : 'light';\n      \n      // Only update if current theme is 'auto'\n      if (theme === 'auto') {\n        setResolvedTheme(systemTheme);\n        applyTheme(systemTheme);\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme, applyTheme]);\n\n  const setTheme = useCallback((newTheme: Theme) => {\n    const newResolvedTheme = resolveTheme(newTheme);\n    \n    setThemeState(newTheme);\n    setResolvedTheme(newResolvedTheme);\n    localStorage.setItem('hospitalFinanceTheme', newTheme);\n    applyTheme(newResolvedTheme);\n  }, [resolveTheme, applyTheme]);\n\n  const toggleTheme = useCallback(() => {\n    if (theme === 'auto') {\n      // If auto, switch to the opposite of current resolved theme\n      const newTheme = resolvedTheme === 'light' ? 'dark' : 'light';\n      setTheme(newTheme);\n    } else {\n      // Toggle between light and dark\n      const newTheme = theme === 'light' ? 'dark' : 'light';\n      setTheme(newTheme);\n    }\n  }, [theme, resolvedTheme, setTheme]);\n\n  const value: ThemeContextType = {\n    theme,\n    resolvedTheme,\n    toggleTheme,\n    setTheme,\n    isTransitioning,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n","import { useContext } from 'react';\nimport { ThemeContext } from '../contexts/ThemeContext';\nimport { ThemeContextType } from '../types/theme';\n\n/**\n * Custom hook to access the theme context for managing light/dark mode.\n * \n * This hook provides access to the current theme state and methods for\n * changing themes. It handles both explicit theme preferences and\n * automatic system preference detection.\n * \n * @description Features:\n * - Get current theme preference ('light', 'dark', 'auto')\n * - Get resolved theme (actual active theme)\n * - Toggle between light and dark themes\n * - Set specific theme preference\n * - Automatic system preference detection when theme is 'auto'\n * - Persistent theme storage in localStorage\n * \n * @throws {Error} Throws an error if used outside of a ThemeProvider\n * \n * @returns {ThemeContextType} The theme context containing:\n *   - theme: Current theme preference setting\n *   - resolvedTheme: Actual active theme (light or dark)\n *   - toggleTheme: Function to toggle between light and dark\n *   - setTheme: Function to set a specific theme preference\n * \n * @example\n * ```tsx\n * function ThemeToggleButton() {\n *   const { theme, resolvedTheme, toggleTheme, setTheme } = useTheme();\n *   \n *   return (\n *     <div>\n *       <p>Current theme: {theme}</p>\n *       <p>Active theme: {resolvedTheme}</p>\n *       \n *       <button onClick={toggleTheme}>\n *         Switch to {resolvedTheme === 'light' ? 'dark' : 'light'} mode\n *       </button>\n *       \n *       <button onClick={() => setTheme('auto')}>\n *         Use system preference\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n * \n * @example\n * ```tsx\n * function ConditionalStyling() {\n *   const { resolvedTheme } = useTheme();\n *   \n *   const iconColor = resolvedTheme === 'dark' ? '#ffffff' : '#2d1b69';\n *   \n *   return (\n *     <div className={resolvedTheme === 'dark' ? 'dark-styles' : 'light-styles'}>\n *       <Icon color={iconColor} />\n *     </div>\n *   );\n * }\n * ```\n */\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  \n  // Ensure hook is used within ThemeProvider\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider. Make sure to wrap your component tree with <ThemeProvider>.');\n  }\n  \n  return context;\n};\n\n","import React from 'react';\nimport { useTheme } from '../hooks/useTheme';\n\ninterface ThemeToggleProps {\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\n/**\n * Modern glassmorphism theme toggle button with smooth animations.\n */\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ className = '', size = 'md' }) => {\n  const { resolvedTheme, setTheme, isTransitioning } = useTheme();\n\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5',\n    lg: 'w-6 h-6'\n  };\n\n  const iconSize = sizeClasses[size];\n\n  return (\n    <button\n      onClick={() => setTheme(resolvedTheme === 'light' ? 'dark' : 'light')}\n      disabled={isTransitioning}\n      className={`\n        theme-toggle relative w-12 h-12 rounded-xl\n        text-white/80 hover:text-white\n        focus:outline-none focus:ring-2 focus:ring-white/30 focus:ring-offset-2 \n        focus:ring-offset-transparent\n        group overflow-hidden\n        transition-all duration-300 hover:scale-105\n        ${isTransitioning ? 'animate-pulse cursor-wait' : ''}\n        ${className}\n      `}\n      style={{\n        background: 'linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(139, 92, 246, 0.1))',\n        border: '1px solid rgba(168, 85, 247, 0.2)',\n        backdropFilter: 'blur(8px)',\n        WebkitBackdropFilter: 'blur(8px)',\n        zIndex: '30'\n      }}\n      title={isTransitioning ? 'Switching theme...' : (resolvedTheme === 'light' ? 'Switch to dark mode' : 'Switch to light mode')}\n      aria-label={isTransitioning ? 'Switching theme...' : (resolvedTheme === 'light' ? 'Switch to dark mode' : 'Switch to light mode')}\n    >\n      \n      {/* Icon container with smooth transition and loading state */}\n      <div className=\"relative z-10 flex items-center justify-center\">\n        {isTransitioning ? (\n          /* Loading spinner during transition */\n          <div className=\"relative\">\n            <div className=\"w-5 h-5 border-2 border-white/20 border-t-white rounded-full animate-spin\"></div>\n            <div className=\"absolute inset-0 border-2 border-transparent border-t-purple-300 rounded-full animate-spin animation-delay-200\"></div>\n          </div>\n        ) : (\n          <>\n            <div className={`\n              transition-all duration-500 transform\n              ${resolvedTheme === 'light' ? 'rotate-0 opacity-100' : 'rotate-180 opacity-0 absolute'}\n            `}>\n              <svg \n                className={`${iconSize} drop-shadow-lg`} \n                style={{ color: 'var(--color-text-primary)' }}\n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" \n                />\n              </svg>\n            </div>\n            \n            <div className={`\n              transition-all duration-500 transform\n              ${resolvedTheme === 'dark' ? 'rotate-0 opacity-100' : 'rotate-180 opacity-0 absolute'}\n            `}>\n              <svg \n                className={`${iconSize} drop-shadow-lg`} \n                style={{ color: 'var(--color-text-primary)' }}\n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" \n                />\n              </svg>\n            </div>\n          </>\n        )}\n      </div>\n    </button>\n  );\n};\n\nexport default ThemeToggle;\n\n","/**\r\n * Password validation configuration\r\n */\r\nconst passwordConfig = {\r\n  minLength: 8,\r\n  requireUppercase: true,\r\n  requireLowercase: true,\r\n  requireNumbers: true,\r\n  requireSpecial: true,\r\n  maxLength: 128\r\n};\r\n\r\nexport interface PasswordValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n}\r\n\r\n/**\r\n * Validates a password against security requirements\r\n * @param password The password to validate\r\n * @returns Validation result with error messages if any\r\n */\r\nexport const validatePassword = (password: string): PasswordValidationResult => {\r\n  const errors: string[] = [];\r\n\r\n  // Check for empty password\r\n  if (!password) {\r\n    return {\r\n      isValid: false,\r\n      errors: ['Password is required']\r\n    };\r\n  }\r\n\r\n  // Check length requirements\r\n  if (password.length < passwordConfig.minLength) {\r\n    errors.push(`Password must be at least ${passwordConfig.minLength} characters long`);\r\n  }\r\n  if (password.length > passwordConfig.maxLength) {\r\n    errors.push(`Password cannot be longer than ${passwordConfig.maxLength} characters`);\r\n  }\r\n\r\n  // Check character requirements\r\n  if (passwordConfig.requireUppercase && !/[A-Z]/.test(password)) {\r\n    errors.push('Password must contain at least one uppercase letter');\r\n  }\r\n  if (passwordConfig.requireLowercase && !/[a-z]/.test(password)) {\r\n    errors.push('Password must contain at least one lowercase letter');\r\n  }\r\n  if (passwordConfig.requireNumbers && !/\\d/.test(password)) {\r\n    errors.push('Password must contain at least one number');\r\n  }\r\n  if (passwordConfig.requireSpecial && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n    errors.push('Password must contain at least one special character');\r\n  }\r\n\r\n  // Check for common patterns\r\n  if (/(.)\\1{2,}/.test(password)) {\r\n    errors.push('Password cannot contain repeating characters (3 or more times)');\r\n  }\r\n  if (/12345|qwerty|password|admin/i.test(password)) {\r\n    errors.push('Password contains a common pattern');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Ensures consistent error message formatting\r\n * @param error The error to format\r\n * @returns A user-friendly error message\r\n */\r\nexport const formatAuthError = (error: unknown): string => {\r\n  if (error instanceof Error) {\r\n    // Hide implementation details from users\r\n    if (error.message.includes('Invalid credentials')) {\r\n      return 'Invalid email or password';\r\n    }\r\n    if (error.message.includes('Rate limit')) {\r\n      return 'Too many attempts. Please try again later';\r\n    }\r\n    return 'An error occurred during authentication';\r\n  }\r\n  return 'An unexpected error occurred';\r\n};","import { User, UserRole } from '../types/auth';\r\nimport { validatePassword } from '../utils/auth';\r\n\r\nexport const mockUsers: User[] = [\r\n  {\r\n    id: 'admin-1',\r\n    email: 'admin@hospitalfinance.com',\r\n    name: 'System Administrator',\r\n    role: 'admin',\r\n    createdAt: '2024-01-15T08:00:00Z',\r\n    lastLogin: '2024-12-15T10:30:00Z'\r\n  },\r\n  {\r\n    id: 'owner-1',\r\n    email: 'owner@metrogeneral.com',\r\n    name: 'Sarah Johnson',\r\n    role: 'hospital_owner',\r\n    hospitalIds: ['general-1', 'cardio-1'], // Owns multiple hospitals\r\n    createdAt: '2024-02-01T09:00:00Z',\r\n    lastLogin: '2024-12-14T15:45:00Z'\r\n  },\r\n  {\r\n    id: 'owner-2',\r\n    email: 'owner@childrensmed.com',\r\n    name: 'Dr. Michael Chen',\r\n    role: 'hospital_owner',\r\n    hospitalIds: ['pediatric-1'],\r\n    createdAt: '2024-02-15T10:00:00Z',\r\n    lastLogin: '2024-12-13T12:20:00Z'\r\n  },\r\n  {\r\n    id: 'branch-1',\r\n    email: 'manager@metrogeneral.com',\r\n    name: 'John Doe',\r\n    role: 'branch_owner',\r\n    hospitalId: 'general-1',\r\n    createdAt: '2024-03-01T11:00:00Z',\r\n    lastLogin: '2024-12-15T08:15:00Z'\r\n  },\r\n  {\r\n    id: 'branch-2',\r\n    email: 'manager@heartcenter.com',\r\n    name: 'Dr. Emily Rodriguez',\r\n    role: 'branch_owner',\r\n    hospitalId: 'cardio-1',\r\n    createdAt: '2024-03-10T12:00:00Z',\r\n    lastLogin: '2024-12-14T16:30:00Z'\r\n  },\r\n  {\r\n    id: 'branch-3',\r\n    email: 'manager@childrensmed.com',\r\n    name: 'Lisa Thompson',\r\n    role: 'branch_owner',\r\n    hospitalId: 'pediatric-1',\r\n    createdAt: '2024-03-20T13:00:00Z',\r\n    lastLogin: '2024-12-12T14:45:00Z'\r\n  },\r\n  {\r\n    id: 'branch-4',\r\n    email: 'manager@traumacenter.com',\r\n    name: 'Dr. Robert Kim',\r\n    role: 'branch_owner',\r\n    hospitalId: 'trauma-1',\r\n    createdAt: '2024-04-01T14:00:00Z',\r\n    lastLogin: '2024-12-11T11:20:00Z'\r\n  },\r\n  {\r\n    id: 'admin-2',\r\n    email: 'usama@alviglobal.com',\r\n    name: 'Usama',\r\n    role: 'admin',\r\n    createdAt: '2024-01-10T08:00:00Z',\r\n    lastLogin: '2024-12-18T10:00:00Z'\r\n  }\r\n];\r\n\r\n// Mock authentication service\r\nexport const authService = {\r\n  signIn: async (email: string, password: string): Promise<User> => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Check password strength using proper validation\r\n    const passwordValidation = validatePassword(password);\r\n    if (!passwordValidation.isValid) {\r\n      throw new Error(passwordValidation.errors[0]);\r\n    }\r\n    \r\n    const user = mockUsers.find(u => u.email === email);\r\n    if (!user) {\r\n      throw new Error('No account found with this email address');\r\n    }\r\n    \r\n    // Simulate rate limiting (in real app, this would be server-side)\r\n    const attemptKey = `login_attempts_${email}`;\r\n    const attempts = parseInt(localStorage.getItem(attemptKey) || '0');\r\n    if (attempts >= 5) {\r\n      const lockoutTime = localStorage.getItem(`lockout_${email}`);\r\n      if (lockoutTime && Date.now() - parseInt(lockoutTime) < 15 * 60 * 1000) {\r\n        throw new Error('Account temporarily locked due to too many failed attempts. Try again in 15 minutes.');\r\n      } else {\r\n        // Reset attempts after lockout period\r\n        localStorage.removeItem(attemptKey);\r\n        localStorage.removeItem(`lockout_${email}`);\r\n      }\r\n    }\r\n    \r\n    // For demo purposes, we'll accept any password that meets strength requirements\r\n    // In a real app, you would hash and verify against stored password hash\r\n    const demoPasswords = [\r\n      'UsamaHF2024!',\r\n      'OwnerMG2024!', \r\n      'ManagerMG2024!',\r\n      'Demo123!@#' // Added a demo password that meets requirements\r\n    ];\r\n    \r\n    if (!demoPasswords.includes(password)) {\r\n      // Increment failed attempts\r\n      localStorage.setItem(attemptKey, (attempts + 1).toString());\r\n      if (attempts + 1 >= 5) {\r\n        localStorage.setItem(`lockout_${email}`, Date.now().toString());\r\n      }\r\n      throw new Error('Incorrect password');\r\n    }\r\n    \r\n    // Clear failed attempts on successful login\r\n    localStorage.removeItem(attemptKey);\r\n    localStorage.removeItem(`lockout_${email}`);\r\n    \r\n    // Update last login time\r\n    user.lastLogin = new Date().toISOString();\r\n    return user;\r\n  },\r\n  \r\n  signUp: async (userData: {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    role: UserRole;\r\n    hospitalId?: string;\r\n    hospitalIds?: string[];\r\n  }): Promise<User> => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1200));\r\n    \r\n    // Check if user already exists\r\n    const existingUser = mockUsers.find(u => u.email === userData.email);\r\n    if (existingUser) {\r\n      throw new Error('User with this email already exists');\r\n    }\r\n    \r\n    // Create new user with proper handling of optional properties\r\n    const newUser: User = {\r\n      id: `user-${Date.now()}`,\r\n      email: userData.email,\r\n      name: userData.name,\r\n      role: userData.role,\r\n      createdAt: new Date().toISOString(),\r\n      lastLogin: new Date().toISOString(),\r\n      ...(userData.hospitalId && { hospitalId: userData.hospitalId }),\r\n      ...(userData.hospitalIds && { hospitalIds: userData.hospitalIds })\r\n    };\r\n    \r\n    // Add to mock users (in real app, this would be API call)\r\n    mockUsers.push(newUser);\r\n    \r\n    return newUser;\r\n  }\r\n};\r\n\r\n// Role descriptions for UI\r\nexport const roleDescriptions = {\r\n  admin: {\r\n    title: 'System Administrator',\r\n    description: 'Full access to all hospitals and system-wide analytics',\r\n    permissions: ['View all hospitals', 'Manage users', 'System configuration']\r\n  },\r\n  hospital_owner: {\r\n    title: 'Hospital Owner',\r\n    description: 'Access to owned hospitals across multiple locations',\r\n    permissions: ['Manage owned hospitals', 'View financial reports', 'Manage branch managers']\r\n  },\r\n  // Internal role name is branch_owner but displayed as Branch Manager for consistency\r\n  branch_owner: {\r\n    title: 'Branch Manager',\r\n    description: 'Access to specific hospital location data only',\r\n    permissions: ['View branch data', 'Generate reports', 'Monitor performance']\r\n  }\r\n};\r\n\r\n","/**\n * Available logging levels for the application.\n * \n * @type LogLevel\n * - `info`: General information and debugging\n * - `warn`: Warning messages for potential issues\n * - `error`: Error messages for failures and exceptions\n */\nexport type LogLevel = 'info' | 'warn' | 'error';\n\n/**\n * Options for log entries to provide additional context and data.\n * \n * @interface LogOptions\n */\ninterface LogOptions {\n  /** Context identifier (e.g., component name, module) */\n  context?: string;\n  \n  /** Additional data to log (objects, arrays, etc.) */\n  data?: unknown;\n}\n\n/**\n * Centralized logging system for the Hospital Finance Dashboard.\n * \n * Features:\n * - Environment-aware logging (development vs production)\n * - Structured log formatting with timestamps\n * - Context-aware logging with component/module identification\n * - Automatic error handling for production environments\n * - Future-ready for external logging service integration\n * - Type-safe logging methods with proper TypeScript support\n * \n * The logger automatically adjusts behavior based on the environment:\n * - Development: All logs are output to console with full detail\n * - Production: Only errors are logged, with structured format for monitoring\n * \n * @class Logger\n * @example\n * ```typescript\n * import { logger } from '../utils/logger';\n * \n * // Basic logging\n * logger.info('User signed in successfully');\n * logger.warn('Slow API response detected');\n * logger.error('Failed to load user data');\n * \n * // Contextual logging\n * logger.info('Dashboard data loaded', {\n *   context: 'Dashboard',\n *   data: { hospitalId: 'general-001', recordCount: 150 }\n * });\n * \n * // Error logging with context\n * logger.error('Authentication failed', {\n *   context: 'AuthService',\n *   data: { email: 'user@example.com', errorCode: 'INVALID_CREDENTIALS' }\n * });\n * ```\n */\nclass Logger {\n  /** Flag indicating if running in development mode */\n  private isDev = import.meta.env.DEV;\n\n  /**\n   * Formats a log message with timestamp, level, and context.\n   * \n   * @private\n   * @param level - The log level\n   * @param message - The log message\n   * @param options - Additional logging options\n   * @returns Formatted log message string\n   */\n  private formatMessage(level: LogLevel, message: string, options?: LogOptions): string {\n    const timestamp = new Date().toISOString();\n    const context = options?.context ? `[${options.context}]` : '';\n    return `${timestamp} ${level.toUpperCase()} ${context} ${message}`;\n  }\n\n  /**\n   * Core logging method that handles all log levels.\n   * \n   * @private\n   * @param level - The log level (info, warn, error)\n   * @param message - The log message\n   * @param options - Additional logging options\n   */\n  private log(level: LogLevel, message: string, options?: LogOptions): void {\n    // Only log in development unless it's an error\n    if (!this.isDev && level !== 'error') return;\n\n    const formattedMessage = this.formatMessage(level, message, options);\n\n    switch (level) {\n      case 'info':\n        // Info logs only in development\n        if (this.isDev) console.log(formattedMessage, options?.data || '');\n        break;\n      case 'warn':\n        // Warning logs only in development\n        if (this.isDev) console.warn(formattedMessage, options?.data || '');\n        break;\n      case 'error':\n        // Always log errors, but handle them appropriately in production\n        if (this.isDev) {\n          console.error(formattedMessage, options?.data || '');\n        } else {\n          // In production, send to error tracking service\n          this.handleProductionError(message, options?.data);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Handles error logging in production environment.\n   * Formats errors for external monitoring services.\n   * \n   * @private\n   * @param message - The error message\n   * @param data - Additional error data\n   */\n  private handleProductionError(message: string, data?: unknown): void {\n    // TODO: Integrate with error tracking service (Sentry, LogRocket, etc.)\n    // For now, log in structured format suitable for log aggregators\n    console.error({\n      message,\n      timestamp: new Date().toISOString(),\n      environment: 'production',\n      data\n    });\n  }\n\n  /**\n   * Logs an informational message.\n   * Only outputs in development environment.\n   * \n   * @param message - The message to log\n   * @param options - Additional logging options\n   * \n   * @example\n   * ```typescript\n   * logger.info('User data loaded successfully');\n   * logger.info('API call completed', {\n   *   context: 'DataService',\n   *   data: { endpoint: '/api/users', duration: '250ms' }\n   * });\n   * ```\n   */\n  info(message: string, options?: LogOptions): void {\n    this.log('info', message, options);\n  }\n\n  /**\n   * Logs a warning message.\n   * Only outputs in development environment.\n   * \n   * @param message - The warning message to log\n   * @param options - Additional logging options\n   * \n   * @example\n   * ```typescript\n   * logger.warn('API response time is slow');\n   * logger.warn('Deprecated function used', {\n   *   context: 'LegacyComponent',\n   *   data: { functionName: 'oldCalculateTotal' }\n   * });\n   * ```\n   */\n  warn(message: string, options?: LogOptions): void {\n    this.log('warn', message, options);\n  }\n\n  /**\n   * Logs an error message.\n   * Outputs in both development and production environments.\n   * In production, errors are formatted for external monitoring.\n   * \n   * @param message - The error message to log\n   * @param options - Additional logging options\n   * \n   * @example\n   * ```typescript\n   * logger.error('Failed to authenticate user');\n   * logger.error('Database connection failed', {\n   *   context: 'DatabaseService',\n   *   data: { connectionString: 'mongodb://localhost', error: e.message }\n   * });\n   * ```\n   */\n  error(message: string, options?: LogOptions): void {\n    this.log('error', message, options);\n  }\n}\n\n/**\n * Singleton logger instance for application-wide logging.\n * \n * This is the main logger instance that should be used throughout\n * the application for consistent logging behavior.\n * \n * @constant\n * @example\n * ```typescript\n * import { logger } from '../utils/logger';\n * \n * // Use in any component or utility\n * logger.info('Operation completed successfully');\n * logger.error('Operation failed', { context: 'ComponentName' });\n * ```\n */\nexport const logger = new Logger();","import { \n  FinancialMetric, \n  RevenueData, \n  DepartmentFinance, \n  PatientMetrics, \n  ExpenseBreakdown, \n  CashFlowData,\n  Hospital,\n  HospitalData\n} from '../types/finance';\n\nexport const financialMetrics: FinancialMetric[] = [\n  {\n    id: 'total-revenue',\n    title: 'Total Revenue',\n    value: 12500000,\n    change: 8.5,\n    changeType: 'increase',\n    period: 'vs last month',\n    format: 'currency'\n  },\n  {\n    id: 'net-profit',\n    title: 'Net Profit',\n    value: 2100000,\n    change: 12.3,\n    changeType: 'increase',\n    period: 'vs last month',\n    format: 'currency'\n  },\n  {\n    id: 'profit-margin',\n    title: 'Profit Margin',\n    value: 16.8,\n    change: 2.1,\n    changeType: 'increase',\n    period: 'vs last month',\n    format: 'percentage'\n  },\n  {\n    id: 'operating-expenses',\n    title: 'Operating Expenses',\n    value: 9800000,\n    change: 3.2,\n    changeType: 'increase',\n    period: 'vs last month',\n    format: 'currency'\n  }\n];\n\nexport const revenueData: RevenueData[] = [\n  { month: 'Jan', revenue: 8500000, expenses: 6200000, netIncome: 2300000 },\n  { month: 'Feb', revenue: 9200000, expenses: 7100000, netIncome: 2100000 },\n  { month: 'Mar', revenue: 15600000, expenses: 11800000, netIncome: 3800000 },\n  { month: 'Apr', revenue: 7800000, expenses: 5900000, netIncome: 1900000 },\n  { month: 'May', revenue: 18200000, expenses: 13500000, netIncome: 4700000 },\n  { month: 'Jun', revenue: 6900000, expenses: 5400000, netIncome: 1500000 },\n  { month: 'Jul', revenue: 21400000, expenses: 15800000, netIncome: 5600000 },\n  { month: 'Aug', revenue: 11200000, expenses: 8600000, netIncome: 2600000 },\n  { month: 'Sep', revenue: 16800000, expenses: 12200000, netIncome: 4600000 },\n  { month: 'Oct', revenue: 9600000, expenses: 7300000, netIncome: 2300000 },\n  { month: 'Nov', revenue: 19500000, expenses: 14100000, netIncome: 5400000 },\n  { month: 'Dec', revenue: 13700000, expenses: 10200000, netIncome: 3500000 }\n];\n\nexport const departmentFinances: DepartmentFinance[] = [\n  {\n    department: 'Emergency',\n    revenue: 3200000,\n    expenses: 2400000,\n    profit: 800000,\n    profitMargin: 25.0\n  },\n  {\n    department: 'Surgery',\n    revenue: 4500000,\n    expenses: 3100000,\n    profit: 1400000,\n    profitMargin: 31.1\n  },\n  {\n    department: 'Cardiology',\n    revenue: 2800000,\n    expenses: 1900000,\n    profit: 900000,\n    profitMargin: 32.1\n  },\n  {\n    department: 'Oncology',\n    revenue: 1900000,\n    expenses: 1400000,\n    profit: 500000,\n    profitMargin: 26.3\n  },\n  {\n    department: 'Pediatrics',\n    revenue: 1100000,\n    expenses: 800000,\n    profit: 300000,\n    profitMargin: 27.3\n  }\n];\n\nexport const patientMetrics: PatientMetrics = {\n  totalPatients: 15420,\n  inpatients: 2180,\n  outpatients: 11850,\n  emergencyVisits: 1390,\n  averageStayDuration: 4.2,\n  occupancyRate: 87.5\n};\n\nexport const expenseBreakdown: ExpenseBreakdown[] = [\n  { category: 'Salaries & Benefits', amount: 5200000, percentage: 53.1, color: '#f59e0b' }, // Amber - main expense\n  { category: 'Medical Supplies', amount: 1800000, percentage: 18.4, color: '#3b82f6' }, // Blue - medical\n  { category: 'Equipment', amount: 1200000, percentage: 12.2, color: '#22c55e' }, // Green - equipment\n  { category: 'Utilities', amount: 600000, percentage: 6.1, color: '#06b6d4' }, // Cyan - utilities\n  { category: 'Maintenance', amount: 500000, percentage: 5.1, color: '#ef4444' }, // Red - maintenance\n  { category: 'Other', amount: 500000, percentage: 5.1, color: '#14b8a6' } // Teal - other\n];\n\nexport const cashFlowData: CashFlowData[] = [\n  {\n    date: '2024-01',\n    operatingCashFlow: 2100000,\n    investingCashFlow: -800000,\n    financingCashFlow: -300000,\n    netCashFlow: 1000000\n  },\n  {\n    date: '2024-02',\n    operatingCashFlow: 1950000,\n    investingCashFlow: -200000,\n    financingCashFlow: -400000,\n    netCashFlow: 1350000\n  },\n  {\n    date: '2024-03',\n    operatingCashFlow: 2300000,\n    investingCashFlow: -1200000,\n    financingCashFlow: -200000,\n    netCashFlow: 900000\n  },\n  {\n    date: '2024-04',\n    operatingCashFlow: 2200000,\n    investingCashFlow: -300000,\n    financingCashFlow: -350000,\n    netCashFlow: 1550000\n  },\n  {\n    date: '2024-05',\n    operatingCashFlow: 2500000,\n    investingCashFlow: -150000,\n    financingCashFlow: -300000,\n    netCashFlow: 2050000\n  },\n  {\n    date: '2024-06',\n    operatingCashFlow: 2350000,\n    investingCashFlow: -600000,\n    financingCashFlow: -250000,\n    netCashFlow: 1500000\n  }\n];\n\nexport const hospitals: Hospital[] = [\n  {\n    id: 'general-1',\n    name: 'Metro General Hospital',\n    location: 'Downtown',\n    type: 'General'\n  },\n  {\n    id: 'cardio-1',\n    name: 'Heart & Vascular Institute',\n    location: 'Midtown',\n    type: 'Specialty'\n  },\n  {\n    id: 'pediatric-1',\n    name: 'Children\\'s Medical Center',\n    location: 'Westside',\n    type: 'Pediatric'\n  },\n  {\n    id: 'trauma-1',\n    name: 'Regional Trauma Center',\n    location: 'Northside',\n    type: 'Trauma'\n  }\n];\n\nexport const availableYears = [2021, 2022, 2023, 2024];\n\n/**\n * Generates a random variation of a base value within a specified percentage range.\n * \n * @description This function creates realistic variations in financial data by applying\n * a random percentage change to a base value. The variation is symmetrical (both positive\n * and negative changes are possible).\n * \n * @param {number} baseValue - The base value to vary\n * @param {number} [variationPercent=15] - The maximum percentage variation (default: 15%)\n * @returns {number} A rounded number representing the varied value\n * \n * @example\n * ```typescript\n * const baseRevenue = 1000000;\n * const variedRevenue = generateVariation(baseRevenue, 20); // Could be between 800,000 and 1,200,000\n * ```\n */\nconst generateVariation = (baseValue: number, variationPercent: number = 15): number => {\n  const variation = baseValue * (variationPercent / 100);\n  return Math.round(baseValue + (Math.random() - 0.5) * 2 * variation);\n};\n\n// Generate hospital data for all combinations\nexport const hospitalDataByYear: HospitalData[] = [];\n\nhospitals.forEach(hospital => {\n  availableYears.forEach(year => {\n    const yearMultiplier = year === 2024 ? 1 : year === 2023 ? 0.92 : year === 2022 ? 0.85 : 0.78;\n    const hospitalMultiplier = hospital.type === 'General' ? 1 : \n                               hospital.type === 'Specialty' ? 0.7 : \n                               hospital.type === 'Pediatric' ? 0.5 : 0.8;\n\n    const baseMultiplier = yearMultiplier * hospitalMultiplier;\n\n    const hospitalData: HospitalData = {\n      hospitalId: hospital.id,\n      year: year,\n      lastUpdated: new Date(year, 11, 31).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      }),\n      financialMetrics: [\n        {\n          id: 'total-revenue',\n          title: 'Total Revenue',\n          value: generateVariation(12500000 * baseMultiplier),\n          change: generateVariation(8.5, 50),\n          changeType: Math.random() > 0.3 ? 'increase' : 'decrease',\n          period: 'vs last month',\n          format: 'currency'\n        },\n        {\n          id: 'net-profit',\n          title: 'Net Profit',\n          value: generateVariation(2100000 * baseMultiplier),\n          change: generateVariation(12.3, 60),\n          changeType: Math.random() > 0.25 ? 'increase' : 'decrease',\n          period: 'vs last month',\n          format: 'currency'\n        },\n        {\n          id: 'profit-margin',\n          title: 'Profit Margin',\n          value: generateVariation(16.8, 25),\n          change: generateVariation(2.1, 80),\n          changeType: Math.random() > 0.4 ? 'increase' : 'decrease',\n          period: 'vs last month',\n          format: 'percentage'\n        },\n        {\n          id: 'operating-expenses',\n          title: 'Operating Expenses',\n          value: generateVariation(9800000 * baseMultiplier),\n          change: generateVariation(3.2, 40),\n          changeType: Math.random() > 0.6 ? 'increase' : 'decrease',\n          period: 'vs last month',\n          format: 'currency'\n        }\n      ],\n      revenueData: [\n        { month: 'Jan', revenue: generateVariation(8500000 * baseMultiplier), expenses: generateVariation(6200000 * baseMultiplier), netIncome: generateVariation(2300000 * baseMultiplier) },\n        { month: 'Feb', revenue: generateVariation(9200000 * baseMultiplier), expenses: generateVariation(7100000 * baseMultiplier), netIncome: generateVariation(2100000 * baseMultiplier) },\n        { month: 'Mar', revenue: generateVariation(15600000 * baseMultiplier), expenses: generateVariation(11800000 * baseMultiplier), netIncome: generateVariation(3800000 * baseMultiplier) },\n        { month: 'Apr', revenue: generateVariation(7800000 * baseMultiplier), expenses: generateVariation(5900000 * baseMultiplier), netIncome: generateVariation(1900000 * baseMultiplier) },\n        { month: 'May', revenue: generateVariation(18200000 * baseMultiplier), expenses: generateVariation(13500000 * baseMultiplier), netIncome: generateVariation(4700000 * baseMultiplier) },\n        { month: 'Jun', revenue: generateVariation(6900000 * baseMultiplier), expenses: generateVariation(5400000 * baseMultiplier), netIncome: generateVariation(1500000 * baseMultiplier) },\n        { month: 'Jul', revenue: generateVariation(21400000 * baseMultiplier), expenses: generateVariation(15800000 * baseMultiplier), netIncome: generateVariation(5600000 * baseMultiplier) },\n        { month: 'Aug', revenue: generateVariation(11200000 * baseMultiplier), expenses: generateVariation(8600000 * baseMultiplier), netIncome: generateVariation(2600000 * baseMultiplier) },\n        { month: 'Sep', revenue: generateVariation(16800000 * baseMultiplier), expenses: generateVariation(12200000 * baseMultiplier), netIncome: generateVariation(4600000 * baseMultiplier) },\n        { month: 'Oct', revenue: generateVariation(9600000 * baseMultiplier), expenses: generateVariation(7300000 * baseMultiplier), netIncome: generateVariation(2300000 * baseMultiplier) },\n        { month: 'Nov', revenue: generateVariation(19500000 * baseMultiplier), expenses: generateVariation(14100000 * baseMultiplier), netIncome: generateVariation(5400000 * baseMultiplier) },\n        { month: 'Dec', revenue: generateVariation(13700000 * baseMultiplier), expenses: generateVariation(10200000 * baseMultiplier), netIncome: generateVariation(3500000 * baseMultiplier) }\n      ],\n      departmentFinances: (() => {\n        const emergencyRevenue = generateVariation(3200000 * baseMultiplier);\n        const emergencyExpenses = generateVariation(2400000 * baseMultiplier);\n        const emergencyProfit = emergencyRevenue - emergencyExpenses;\n        \n        return [\n        {\n          department: 'Emergency',\n          revenue: emergencyRevenue,\n          expenses: emergencyExpenses,\n          profit: emergencyProfit,\n          profitMargin: (emergencyProfit / emergencyRevenue) * 100\n        },\n        (() => {\n          const surgeryRevenue = generateVariation(4500000 * baseMultiplier);\n          const surgeryExpenses = generateVariation(3100000 * baseMultiplier);\n          const surgeryProfit = surgeryRevenue - surgeryExpenses;\n          \n          return {\n            department: 'Surgery',\n            revenue: surgeryRevenue,\n            expenses: surgeryExpenses,\n            profit: surgeryProfit,\n            profitMargin: (surgeryProfit / surgeryRevenue) * 100\n          };\n        })(),\n        (() => {\n          const cardiologyRevenue = generateVariation(2800000 * baseMultiplier);\n          const cardiologyExpenses = generateVariation(1900000 * baseMultiplier);\n          const cardiologyProfit = cardiologyRevenue - cardiologyExpenses;\n          \n          return {\n            department: 'Cardiology',\n            revenue: cardiologyRevenue,\n            expenses: cardiologyExpenses,\n            profit: cardiologyProfit,\n            profitMargin: (cardiologyProfit / cardiologyRevenue) * 100\n          };\n        })(),\n        (() => {\n          const deptRevenue = generateVariation(1900000 * baseMultiplier);\n          const deptExpenses = generateVariation(1400000 * baseMultiplier);\n          const deptProfit = deptRevenue - deptExpenses;\n          \n          return {\n            department: hospital.type === 'Pediatric' ? 'Pediatrics' : 'Oncology',\n            revenue: deptRevenue,\n            expenses: deptExpenses,\n            profit: deptProfit,\n            profitMargin: (deptProfit / deptRevenue) * 100\n          };\n        })(),\n        (() => {\n          const orthoRevenue = generateVariation(1100000 * baseMultiplier);\n          const orthoExpenses = generateVariation(800000 * baseMultiplier);\n          const orthoProfit = orthoRevenue - orthoExpenses;\n          \n          return {\n            department: hospital.type === 'Trauma' ? 'Trauma' : 'Orthopedics',\n            revenue: orthoRevenue,\n            expenses: orthoExpenses,\n            profit: orthoProfit,\n            profitMargin: (orthoProfit / orthoRevenue) * 100\n          };\n        })()\n      ]; })(),\n      patientMetrics: {\n        totalPatients: generateVariation(15420 * baseMultiplier, 20),\n        inpatients: generateVariation(2180 * baseMultiplier, 25),\n        outpatients: generateVariation(11850 * baseMultiplier, 20),\n        emergencyVisits: generateVariation(1390 * baseMultiplier, 30),\n        averageStayDuration: generateVariation(4.2 * 10, 15) / 10,\n        occupancyRate: generateVariation(87.5, 10)\n      },\n      expenseBreakdown: (() => {\n        const salariesAmount = generateVariation(5200000 * baseMultiplier);\n        const suppliesAmount = generateVariation(1800000 * baseMultiplier);\n        const equipmentAmount = generateVariation(1200000 * baseMultiplier);\n        const utilitiesAmount = generateVariation(600000 * baseMultiplier);\n        const maintenanceAmount = generateVariation(500000 * baseMultiplier);\n        const otherAmount = generateVariation(500000 * baseMultiplier);\n        \n        const totalAmount = salariesAmount + suppliesAmount + equipmentAmount + utilitiesAmount + maintenanceAmount + otherAmount;\n        \n        return [\n          { category: 'Salaries & Benefits', amount: salariesAmount, percentage: Math.round((salariesAmount / totalAmount) * 100 * 10) / 10, color: '#f59e0b' },\n          { category: 'Medical Supplies', amount: suppliesAmount, percentage: Math.round((suppliesAmount / totalAmount) * 100 * 10) / 10, color: '#3b82f6' },\n          { category: 'Equipment', amount: equipmentAmount, percentage: Math.round((equipmentAmount / totalAmount) * 100 * 10) / 10, color: '#22c55e' },\n          { category: 'Utilities', amount: utilitiesAmount, percentage: Math.round((utilitiesAmount / totalAmount) * 100 * 10) / 10, color: '#06b6d4' },\n          { category: 'Maintenance', amount: maintenanceAmount, percentage: Math.round((maintenanceAmount / totalAmount) * 100 * 10) / 10, color: '#ef4444' },\n          { category: 'Other', amount: otherAmount, percentage: Math.round((otherAmount / totalAmount) * 100 * 10) / 10, color: '#14b8a6' }\n        ];\n      })(),\n      cashFlowData: [\n        {\n          date: `${year}-01`,\n          operatingCashFlow: generateVariation(2100000 * baseMultiplier),\n          investingCashFlow: generateVariation(-800000 * baseMultiplier),\n          financingCashFlow: generateVariation(-300000 * baseMultiplier),\n          netCashFlow: generateVariation(1000000 * baseMultiplier)\n        },\n        {\n          date: `${year}-02`,\n          operatingCashFlow: generateVariation(1950000 * baseMultiplier),\n          investingCashFlow: generateVariation(-200000 * baseMultiplier),\n          financingCashFlow: generateVariation(-400000 * baseMultiplier),\n          netCashFlow: generateVariation(1350000 * baseMultiplier)\n        },\n        {\n          date: `${year}-03`,\n          operatingCashFlow: generateVariation(2300000 * baseMultiplier),\n          investingCashFlow: generateVariation(-1200000 * baseMultiplier),\n          financingCashFlow: generateVariation(-200000 * baseMultiplier),\n          netCashFlow: generateVariation(900000 * baseMultiplier)\n        },\n        {\n          date: `${year}-04`,\n          operatingCashFlow: generateVariation(2200000 * baseMultiplier),\n          investingCashFlow: generateVariation(-300000 * baseMultiplier),\n          financingCashFlow: generateVariation(-350000 * baseMultiplier),\n          netCashFlow: generateVariation(1550000 * baseMultiplier)\n        },\n        {\n          date: `${year}-05`,\n          operatingCashFlow: generateVariation(2500000 * baseMultiplier),\n          investingCashFlow: generateVariation(-150000 * baseMultiplier),\n          financingCashFlow: generateVariation(-300000 * baseMultiplier),\n          netCashFlow: generateVariation(2050000 * baseMultiplier)\n        },\n        {\n          date: `${year}-06`,\n          operatingCashFlow: generateVariation(2350000 * baseMultiplier),\n          investingCashFlow: generateVariation(-600000 * baseMultiplier),\n          financingCashFlow: generateVariation(-250000 * baseMultiplier),\n          netCashFlow: generateVariation(1500000 * baseMultiplier)\n        }\n      ]\n    };\n\n    hospitalDataByYear.push(hospitalData);\n  });\n});\n\n/**\n * Retrieves hospital financial data for a specific hospital and year.\n * \n * @description This function searches through the generated hospital data to find\n * matching records for a specific hospital ID and year combination. The data includes\n * financial metrics, revenue data, department finances, patient metrics, expense breakdown,\n * and cash flow data.\n * \n * @param {string} hospitalId - The unique identifier of the hospital\n * @param {number} year - The year for which to retrieve data (e.g., 2024)\n * @returns {HospitalData | undefined} The hospital data object if found, undefined otherwise\n * \n * @example\n * ```typescript\n * const hospitalData = getHospitalData('general-1', 2024);\n * if (hospitalData) {\n *   console.log('Total Revenue:', hospitalData.financialMetrics[0].value);\n *   console.log('Last Updated:', hospitalData.lastUpdated);\n * }\n * ```\n */\nexport const getHospitalData = (hospitalId: string, year: number): HospitalData | undefined => {\n  return hospitalDataByYear.find(data => data.hospitalId === hospitalId && data.year === year);\n};\n\n","import React, { createContext, useState, useEffect } from 'react';\nimport { User, AuthContextType, SignUpData } from '../types/auth';\nimport { authService } from '../data/mockUsers';\nimport { logger } from '../utils/logger';\nimport { hospitals } from '../data/mockData';\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\n/**\n * Authentication Provider Component\n * \n * Provides comprehensive authentication state and functionality throughout the application.\n * This context manages user sessions, role-based access control, and persistent authentication.\n * \n * Features:\n * - User authentication (sign-in/sign-up/sign-out)\n * - Persistent sessions with localStorage\n * - Role-based access control (Admin, Hospital Owner, Branch Manager)\n * - Multi-hospital access management\n * - Automatic session validation and cleanup\n * \n * @component\n * @example\n * ```tsx\n * // Wrap your app with the AuthProvider\n * <AuthProvider>\n *   <App />\n * </AuthProvider>\n * \n * // Use in components via useAuth hook\n * const { user, signIn, signOut, canAccessHospital } = useAuth();\n * ```\n * \n * @param children - Child components that will have access to auth context\n */\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  // Authentication state\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /**\n   * Initialize authentication state from localStorage on app start.\n   * Validates stored user data and handles corrupted/invalid sessions.\n   */\n  useEffect(() => {\n    const storedUser = localStorage.getItem('hospitalFinanceUser');\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        // Validate that the parsed object has the expected User structure\n        if (parsedUser && typeof parsedUser === 'object' && 'id' in parsedUser && 'email' in parsedUser) {\n          setUser(parsedUser as User);\n        } else {\n          logger.warn('Invalid user data in localStorage, removing...', { context: 'AuthContext' });\n          localStorage.removeItem('hospitalFinanceUser');\n        }\n      } catch (error) {\n        logger.error('Failed to parse stored user data', { context: 'AuthContext', data: error });\n        localStorage.removeItem('hospitalFinanceUser');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  /**\n   * Signs in a user with the provided email and password.\n   * On successful authentication, the user data is stored in state and localStorage.\n   * @param email The user's email.\n   * @param password The user's password.\n   * @throws Will throw an error if sign-in fails.\n   */\n  const signIn = async (email: string, password: string): Promise<void> => {\n    setIsLoading(true);\n    try {\n      const userData = await authService.signIn(email, password);\n      if (!userData || !userData.id || !userData.email) {\n        throw new Error('Invalid user data received from authentication service');\n      }\n      setUser(userData);\n      localStorage.setItem('hospitalFinanceUser', JSON.stringify(userData));\n    } catch (error) {\n      logger.error('Sign in failed', { context: 'AuthContext', data: error });\n      throw error; // Re-throw to let the component handle the error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Signs up a new user with the provided data.\n   * On successful registration, the new user data is stored in state and localStorage.\n   * @param userData The user data for registration.\n   * @throws Will throw an error if sign-up fails.\n   */\n  const signUp = async (userData: SignUpData): Promise<void> => {\n    setIsLoading(true);\n    try {\n      const newUser = await authService.signUp(userData);\n      if (!newUser || !newUser.id || !newUser.email) {\n        throw new Error('Invalid user data received from registration service');\n      }\n      setUser(newUser);\n      localStorage.setItem('hospitalFinanceUser', JSON.stringify(newUser));\n    } catch (error) {\n      logger.error('Sign up failed', { context: 'AuthContext', data: error });\n      throw error; // Re-throw to let the component handle the error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Signs out the current user.\n   * Clears user data from state and localStorage.\n   */\n  const signOut = () => {\n    logger.info('User signed out', { context: 'AuthContext', data: { userId: user?.id } });\n    setUser(null);\n    localStorage.removeItem('hospitalFinanceUser');\n  };\n\n  /**\n   * Checks if the current user can access a specific hospital.\n   * @param hospitalId The ID of the hospital to check.\n   * @returns `true` if the user has access, `false` otherwise.\n   */\n  const canAccessHospital = (hospitalId: string): boolean => {\n    if (!user) return false;\n    \n    switch (user.role) {\n      case 'admin':\n        return true; // Admin can access all hospitals\n      case 'hospital_owner':\n        return user.hospitalIds?.includes(hospitalId) || false;\n      case 'branch_owner':\n        return user.hospitalId === hospitalId;\n      default:\n        return false;\n    }\n  };\n\n  /**\n   * Gets a list of hospital IDs that the current user can access.\n   * @returns An array of hospital ID strings.\n   */\n  const getAccessibleHospitals = (): string[] => {\n    if (!user) return [];\n    \n    switch (user.role) {\n      case 'admin':\n        return hospitals.map(h => h.id); // All hospitals\n      case 'hospital_owner':\n        return user.hospitalIds || [];\n      case 'branch_owner':\n        return user.hospitalId ? [user.hospitalId] : [];\n      default:\n        return [];\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    signIn,\n    signUp,\n    signOut,\n    canAccessHospital,\n    getAccessibleHospitals\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { AuthContextType } from '../types/auth';\r\n\r\n/**\r\n * Custom hook to access the authentication context.\r\n * \r\n * @description This hook provides access to the current authentication state and methods\r\n * for signing in, signing up, and signing out users. It also provides utilities for\r\n * checking user permissions and accessible hospitals.\r\n * \r\n * @returns {AuthContextType} The authentication context containing:\r\n *   - user: Current authenticated user or null\r\n *   - isAuthenticated: Boolean indicating if user is authenticated\r\n *   - isLoading: Boolean indicating if authentication is in progress\r\n *   - signIn: Function to authenticate a user\r\n *   - signUp: Function to register a new user\r\n *   - signOut: Function to sign out the current user\r\n *   - canAccessHospital: Function to check if user can access a specific hospital\r\n *   - getAccessibleHospitals: Function to get list of hospitals user can access\r\n * \r\n * @throws {Error} Throws an error if used outside of an AuthProvider\r\n * \r\n * @example\r\n * ```tsx\r\n * function MyComponent() {\r\n *   const { user, isAuthenticated, signOut } = useAuth();\r\n *   \r\n *   if (!isAuthenticated) {\r\n *     return <div>Please sign in</div>;\r\n *   }\r\n *   \r\n *   return (\r\n *     <div>\r\n *       Welcome, {user?.name}!\r\n *       <button onClick={signOut}>Sign Out</button>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport ThemeToggle from './ThemeToggle';\nimport { Hospital } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\nimport { roleDescriptions } from '../data/mockUsers';\n\n// Generate consistent background colors for users - Purple only\nconst getUserAvatarColor = (name: string): string => {\n  const colors = [\n    'a855f7', // Bright purple\n    '8b5cf6', // Purple\n    'c084fc', // Light lavender\n    'd8b4fe', // Pale purple\n    '9333ea', // Rich purple\n    '7c3aed', // Deep purple\n    'e9d5ff', // Very light purple\n    'f3e8ff', // Lightest purple\n    '6b21a8', // Dark purple\n    '581c87', // Darkest purple\n    '4c1d95', // Very dark purple\n    '3b0764', // Deepest purple\n    '2e1065', // Ultra dark purple\n    '5b4b8a', // Medium purple\n    '4c3d7a', // Dark medium purple\n  ];\n  \n  // Generate hash from name for consistent color selection\n  let hash = 0;\n  for (let i = 0; i < name.length; i++) {\n    const char = name.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  \n  const colorIndex = Math.abs(hash) % colors.length;\n  return colors[colorIndex] || 'a855f7'; // Fallback to purple\n};\n\ninterface HeaderProps {\n  hospitals: Hospital[];\n  selectedHospitalId: string;\n  selectedYear: number;\n  availableYears: number[];\n  onHospitalChange: (hospitalId: string) => void;\n  onYearChange: (year: number) => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({\n  hospitals,\n  selectedHospitalId,\n  selectedYear,\n  availableYears,\n  onHospitalChange,\n  onYearChange\n}) => {\n  const { user, signOut } = useAuth();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [isFilterMenuOpen, setIsFilterMenuOpen] = useState(false);\n  \n  // Local filter state to prevent immediate updates\n  const [localHospitalId, setLocalHospitalId] = useState(selectedHospitalId);\n  const [localYear, setLocalYear] = useState(selectedYear);\n\n  // Sync local state when props change (for initial load or external changes)\n  useEffect(() => {\n    setLocalHospitalId(selectedHospitalId);\n  }, [selectedHospitalId]);\n\n  useEffect(() => {\n    setLocalYear(selectedYear);\n  }, [selectedYear]);\n\n  // Apply filters function\n  const applyFilters = () => {\n    onHospitalChange(localHospitalId);\n    onYearChange(localYear);\n    setIsFilterMenuOpen(false);\n  };\n\n  // Check if filters have changed\n  const hasFilterChanges = localHospitalId !== selectedHospitalId || localYear !== selectedYear;\n\n  // Handle body scroll when mobile menu is open\n  useEffect(() => {\n    if (isMobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    // Cleanup on unmount\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isMobileMenuOpen]);\n\n  // Handle click outside for user menu and filter menu\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (isUserMenuOpen && !target.closest('[data-user-menu]')) {\n        setIsUserMenuOpen(false);\n      }\n      if (isFilterMenuOpen && !target.closest('[data-filter-menu]')) {\n        setIsFilterMenuOpen(false);\n      }\n    };\n\n    if (isUserMenuOpen || isFilterMenuOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isUserMenuOpen, isFilterMenuOpen]);\n  const hospitalOptions = hospitals.map(hospital => ({\n    value: hospital.id,\n    label: hospital.name,\n    subtitle: `${hospital.type} • ${hospital.location}`\n  }));\n\n  const yearOptions = availableYears.map(year => ({\n    value: year.toString(),\n    label: year.toString()\n  }));\n\n\n  return (\n    <header \n      className=\"header-glass sticky top-0 z-40 border-b-0\" \n      style={{ \n        overflow: 'visible'\n      }}\n    >\n      <div className=\"page-container\" style={{ overflow: 'visible', paddingTop: 0, paddingBottom: 0 }}>\n        <div className=\"flex items-center justify-between min-h-16 py-4 gap-4\" style={{ overflow: 'visible' }}>\n          {/* Logo and Brand Name - Left Side */}\n          <div className=\"flex items-center min-w-0 flex-shrink\">\n            <div className=\"flex items-center gap-3 min-w-0\">\n              {/* Enhanced Animated Logo */}\n              <div className=\"relative flex-shrink-0\">\n                <div className=\"logo-container w-10 h-10 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\">\n                  <svg className=\"w-5 h-5 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <defs>\n                      <linearGradient id=\"logo-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"#a855f7\" />\n                        <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\n                        <stop offset=\"100%\" stopColor=\"#c084fc\" />\n                      </linearGradient>\n                    </defs>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n              </div>\n              {/* Mobile-optimized branding */}\n              <div className=\"min-w-0\">\n                <h1 className=\"heading-4 truncate block sm:hidden\" style={{ color: 'var(--color-text-primary)', marginBottom: '0', fontSize: 'var(--text-lg)' }}>\n                  Hospital Finance\n                </h1>\n                <h1 className=\"heading-4 truncate hidden sm:block\" style={{ color: 'var(--color-text-primary)', marginBottom: '0' }}>\n                  Hospital Financial Dashboard\n                </h1>\n                <p className=\"text-caption hidden lg:block truncate\" style={{ color: 'var(--color-text-muted)', marginBottom: '0' }}>\n                  Real-time financial insights & analytics\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* All Controls - Right Side */}\n          <div className=\"hidden lg:flex items-center gap-3 flex-shrink-0\">\n            {/* Current Filter Indicators */}\n            <div className=\"flex items-center gap-2 flex-shrink-0\">\n              <div className=\"hidden xl:flex items-center gap-3 px-3 py-1.5 rounded-lg\" style={{\n                background: 'rgba(255, 255, 255, 0.05)',\n                border: '1px solid var(--border-secondary)'\n              }}>\n                <div className=\"flex items-center gap-1.5\">\n                  <svg className=\"w-3 h-3\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                  <span className=\"text-xs font-medium\" style={{ color: 'var(--color-text-secondary)' }}>\n                    {hospitals.find(h => h.id === selectedHospitalId)?.name || 'No Hospital'}\n                  </span>\n                </div>\n                <div className=\"w-px h-4\" style={{ backgroundColor: 'var(--border-secondary)' }}></div>\n                <div className=\"flex items-center gap-1.5\">\n                  <svg className=\"w-3 h-3\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  <span className=\"text-xs font-medium\" style={{ color: 'var(--color-text-secondary)' }}>\n                    {selectedYear}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex items-center gap-2 flex-shrink-0\" data-filter-menu>\n              {/* Filter Button */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setIsFilterMenuOpen(!isFilterMenuOpen)}\n                  className=\"btn-base btn-secondary btn-sm flex items-center gap-2\"\n                  aria-label=\"Open filters menu\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\n                  </svg>\n                  <span className=\"hidden xl:inline\">Filters</span>\n                  <svg className=\"w-4 h-4 transition-transform\" style={{ \n                    transform: isFilterMenuOpen ? 'rotate(180deg)' : 'rotate(0deg)'\n                  }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n\n                {/* Filter Dropdown Menu */}\n                {isFilterMenuOpen && (\n                  <div \n                    className=\"absolute left-0 top-full mt-2 min-w-max rounded-lg shadow-xl z-50 gradient-bg-primary\"\n                    style={{\n                      backdropFilter: 'blur(16px)',\n                      WebkitBackdropFilter: 'blur(16px)',\n                      border: '1px solid var(--border-secondary)',\n                      borderRadius: 'var(--radius-md)',\n                      minWidth: '320px'\n                    }}\n                  >\n                    {/* Filter Header */}\n                    <div className=\"px-4 py-3 border-b\" style={{ borderColor: 'var(--border-secondary)' }}>\n                      <div className=\"flex items-center gap-2\">\n                        <svg className=\"w-4 h-4\" style={{ color: 'var(--color-text-secondary)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\" />\n                        </svg>\n                        <span className=\"text-sm font-medium\" style={{ color: 'var(--color-text-primary)' }}>\n                          Filter Data\n                        </span>\n                      </div>\n                    </div>\n                    \n                    {/* Filter Options */}\n                    <div className=\"p-4 space-y-4\">\n                      <div>\n                        <label className=\"text-overline block mb-2\" style={{ color: 'var(--color-text-secondary)' }}>\n                          Hospital\n                        </label>\n                        <Dropdown\n                          options={hospitalOptions}\n                          value={localHospitalId}\n                          onChange={setLocalHospitalId}\n                          placeholder=\"Select Hospital\"\n                          className=\"w-full\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"text-overline block mb-2\" style={{ color: 'var(--color-text-secondary)' }}>\n                          Year\n                        </label>\n                        <Dropdown\n                          options={yearOptions}\n                          value={localYear.toString()}\n                          onChange={(value) => setLocalYear(parseInt(value))}\n                          placeholder=\"Select Year\"\n                          className=\"w-full\"\n                        />\n                      </div>\n                      \n                      {/* Apply Filters Button */}\n                      <div className=\"pt-2 border-t\" style={{ borderColor: 'var(--border-secondary)' }}>\n                        <button\n                          onClick={applyFilters}\n                          disabled={!hasFilterChanges}\n                          className={`w-full btn-base ${hasFilterChanges ? 'btn-primary' : 'btn-secondary opacity-50 cursor-not-allowed'} btn-sm`}\n                          aria-label=\"Apply selected filters\"\n                        >\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                          Apply Filters\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Highlighted Generate Analysis Button */}\n            <button\n              className=\"btn-base btn-primary btn-sm\"\n              aria-label=\"Generate AI-powered financial analysis\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\n              </svg>\n              <span className=\"hidden xl:inline ml-2\">Generate Analysis</span>\n            </button>\n            </div>\n            \n            {/* Theme Toggle and User Menu */}\n            <div className=\"flex items-center gap-2 flex-shrink-0\">\n              <ThemeToggle />\n              \n              {user && (\n                <div className=\"relative\" data-user-menu>\n                  <button\n                    onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                    className=\"flex items-center gap-2 p-1 rounded-lg hover:bg-white/5 transition-colors interactive\"\n                    aria-label=\"User menu\"\n                  >\n                    <div className=\"avatar-circle w-8 h-8 border-2 shadow-lg bg-white/10 backdrop-blur-sm\" style={{ borderColor: 'var(--border-secondary)' }}>\n                      <img \n                        src={`https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&size=32&background=${getUserAvatarColor(user.name)}&color=ffffff&bold=true&format=png`}\n                        alt={`${user.name} profile picture`}\n                        loading=\"lazy\"\n                      />\n                    </div>\n                    \n                    <svg className=\"w-4 h-4 transition-transform\" style={{ \n                      color: 'var(--color-text-secondary)',\n                      transform: isUserMenuOpen ? 'rotate(180deg)' : 'rotate(0deg)'\n                    }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </button>\n\n                  {/* User Dropdown Menu */}\n                  {isUserMenuOpen && (\n                    <div \n                      className=\"absolute right-0 top-full mt-2 min-w-max rounded-lg shadow-xl z-50 gradient-bg-primary\"\n                      style={{\n                        backdropFilter: 'blur(16px)',\n                        WebkitBackdropFilter: 'blur(16px)',\n                        border: '1px solid var(--border-secondary)',\n                        borderRadius: 'var(--radius-md)'\n                      }}\n                    >\n                      {/* User Info */}\n                      <div className=\"px-3 py-2.5 border-b\" style={{ borderColor: 'var(--border-secondary)' }}>\n                        <p className=\"text-sm font-medium whitespace-nowrap\" style={{ color: 'var(--color-text-primary)' }}>\n                          {user.name}\n                        </p>\n                        <p className=\"text-xs whitespace-nowrap\" style={{ color: 'var(--color-text-muted)' }}>\n                          {roleDescriptions[user.role]?.title || user.role}\n                        </p>\n                      </div>\n                      \n                      {/* Menu Options */}\n                      <div className=\"py-1\">\n                        <button\n                          onClick={() => {\n                            setIsUserMenuOpen(false);\n                          }}\n                          className=\"w-full px-3 py-2 text-left text-sm hover:bg-white/5 transition-colors flex items-center gap-2 whitespace-nowrap\"\n                          style={{ color: 'var(--color-text-primary)' }}\n                          aria-label=\"Export financial report\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                          </svg>\n                          Export Report\n                        </button>\n                        <button\n                          onClick={() => {\n                            signOut();\n                            setIsUserMenuOpen(false);\n                          }}\n                          className=\"w-full px-3 py-2 text-left text-sm hover:bg-white/5 transition-colors flex items-center gap-2 whitespace-nowrap\"\n                          style={{ color: 'var(--color-text-primary)' }}\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                          </svg>\n                          Sign Out\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Enhanced Mobile Menu Button */}\n          <div className=\"lg:hidden flex items-center gap-3 flex-shrink-0\">\n            <ThemeToggle size=\"sm\" />\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"btn-base btn-secondary btn-sm w-12 h-12 flex items-center justify-center rounded-xl transition-all duration-300 hover:scale-105\"\n              aria-label={isMobileMenuOpen ? \"Close mobile menu\" : \"Open mobile menu\"}\n              style={{\n                background: 'linear-gradient(135deg, rgba(168, 85, 247, 0.1), rgba(139, 92, 246, 0.1))',\n                border: '1px solid rgba(168, 85, 247, 0.2)',\n                backdropFilter: 'blur(8px)',\n                WebkitBackdropFilter: 'blur(8px)'\n              }}\n            >\n              <svg className=\"w-5 h-5 transition-transform duration-300\" style={{ \n                transform: isMobileMenuOpen ? 'rotate(90deg)' : 'rotate(0deg)',\n                color: 'var(--color-text-primary)'\n              }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                {isMobileMenuOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Mobile full-screen menu with full background */}\n      <div\n        className={`xl:hidden fixed inset-0 transition-transform duration-300 ease-in-out ${\n          isMobileMenuOpen ? 'translate-x-0' : 'translate-x-full'\n        }`}\n        id=\"mobile-menu\"\n        style={{\n          width: '100vw',\n          height: '100vh',\n          background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.98) 0%, rgba(168, 85, 247, 0.98) 50%, rgba(196, 132, 252, 0.98) 100%)',\n          backdropFilter: 'blur(20px)',\n          WebkitBackdropFilter: 'blur(20px)',\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: 9999\n        }}\n      >\n        {/* Enhanced Header */}\n        <div className=\"flex items-center justify-between py-4\" style={{ paddingLeft: 'var(--space-4)', paddingRight: 'var(--space-4)' }}>\n          {/* Logo and Brand Name - Left Side */}\n          <div className=\"flex items-center min-w-0 flex-shrink\">\n            <div className=\"flex items-center gap-3 min-w-0\">\n              {/* Enhanced Animated Logo */}\n              <div className=\"relative flex-shrink-0\">\n                <div className=\"logo-container w-10 h-10 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\">\n                  <svg className=\"w-5 h-5 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <defs>\n                      <linearGradient id=\"logo-gradient-sidemenu\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                        <stop offset=\"0%\" stopColor=\"#a855f7\" />\n                        <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\n                        <stop offset=\"100%\" stopColor=\"#c084fc\" />\n                      </linearGradient>\n                    </defs>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n              </div>\n              \n              {/* Mobile-optimized branding */}\n              <div className=\"min-w-0\">\n                <h1 className=\"heading-4 truncate\" style={{ color: 'var(--color-text-primary)', marginBottom: '0', fontSize: 'var(--text-lg)' }}>\n                  Hospital Finance\n                </h1>\n              </div>\n            </div>\n          </div>\n\n          {/* Close Button - Right Side */}\n          <button\n            onClick={() => setIsMobileMenuOpen(false)}\n            className=\"btn-base btn-secondary btn-sm w-12 h-12 rounded-xl transition-all duration-300 hover:scale-105 flex items-center justify-center\" \n            aria-label=\"Close menu\"\n          >\n            <svg className=\"w-5 h-5 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Enhanced Content */}\n        <div className=\"flex flex-col h-full w-full\" style={{ paddingLeft: 'var(--space-4)', paddingRight: 'var(--space-4)' }}>\n          <div className=\"flex-1 overflow-y-auto py-4 space-y-6 w-full\">\n            {/* Enhanced User Profile Section */}\n            <div className=\"rounded-2xl p-6 border\" style={{ borderColor: 'var(--border-secondary)' }}>\n              <div className=\"flex items-center space-x-4 mb-6\">\n                <div className=\"relative\">\n                  <div className=\"avatar-gradient-border w-16 h-16 rounded-full p-0.5 shadow-2xl\">\n                    <div className=\"avatar-circle w-full h-full rounded-full\" style={{ backgroundColor: '#ffffff' }}>\n                      <img \n                        src={`https://ui-avatars.com/api/?name=${encodeURIComponent(user?.name || '')}&size=60&background=${getUserAvatarColor(user?.name || '')}&color=ffffff&bold=true&format=png`}\n                        alt={`${user?.name} profile picture`}\n                        loading=\"lazy\"\n                        className=\"rounded-full\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <h3 className=\"font-bold text-lg truncate\" style={{ color: 'var(--color-text-primary)' }}>{user?.name}</h3>\n                  <p className=\"text-sm text-white truncate font-medium\">\n                    {user?.role && roleDescriptions[user.role]?.title || user?.role?.replace('_', ' ')}\n                  </p>\n                </div>\n              </div>\n                  \n              {/* Enhanced Sign Out Button */}\n              <button\n                onClick={signOut}\n                className=\"btn-base btn-secondary btn-md w-full flex items-center justify-center group\"\n                aria-label=\"Sign out of your account\"\n              >\n                <svg className=\"w-5 h-5 mr-3 group-hover:rotate-12 transition-transform duration-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                Sign Out\n              </button>\n            </div>\n\n            {/* Enhanced Actions Section */}\n            <div className=\"space-y-4\">\n              \n              <div className=\"grid grid-cols-1 gap-4\">\n                <button \n                  className=\"btn-base btn-secondary btn-sm w-full flex items-center justify-center\"\n                  aria-label=\"Export financial report\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  Export Report\n                </button>\n                \n            <button\n              className=\"btn-base btn-secondary btn-sm w-full flex items-center justify-center\"\n              aria-label=\"Generate AI-powered financial analysis\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                <path d=\"M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z\"/>\n              </svg>\n              Generate Analysis\n            </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\n","/**\n * Formats a number as a US currency string.\n * @param value The number to format.\n * @returns A string representing the formatted currency (e.g., \"$1,500\").\n */\nexport const formatCurrency = (value: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(value);\n};\n\n/**\n * Formats a number as a percentage string.\n * @param value The number to format.\n * @returns A string representing the formatted percentage (e.g., \"15.4%\").\n */\nexport const formatPercentage = (value: number): string => {\n  return `${value.toFixed(1)}%`;\n};\n\n/**\n * Formats a number with commas as thousands separators.\n * @param value The number to format.\n * @returns A string representing the formatted number (e.g., \"1,500,000\").\n */\nexport const formatNumber = (value: number): string => {\n  return new Intl.NumberFormat('en-US').format(value);\n};\n\n/**\n * Formats a number into a compact currency string with 'M' for millions or 'K' for thousands.\n * @param value The number to format.\n * @returns A compact currency string (e.g., \"$1.5M\", \"$1.5K\").\n */\nexport const formatCompactCurrency = (value: number): string => {\n  if (value >= 1000000) {\n    return `$${(value / 1000000).toFixed(1)}M`;\n  }\n  if (value >= 1000) {\n    return `$${(value / 1000).toFixed(1)}K`;\n  }\n  return formatCurrency(value);\n};\n\n/**\n * Returns the Tailwind CSS color class based on the change type.\n * @param changeType The type of change, either 'increase' or 'decrease'.\n * @returns A Tailwind CSS class string for the color.\n */\nexport const getChangeColor = (changeType: 'increase' | 'decrease'): string => {\n  return changeType === 'increase' ? 'text-success-600' : 'text-danger-600';\n};\n\n/**\n * Returns an icon representing the change type.\n * @param changeType The type of change, either 'increase' or 'decrease'.\n * @returns An arrow icon string ('↗' for increase, '↘' for decrease).\n */\nexport const getChangeIcon = (changeType: 'increase' | 'decrease'): string => {\n  return changeType === 'increase' ? '↗' : '↘';\n};\n\n","import React from 'react';\nimport { FinancialMetric } from '../types/finance';\nimport { formatCurrency, formatPercentage, formatNumber, getChangeIcon } from '../utils/formatters';\n\n/**\n * Props for the MetricCard component.\n * \n * @interface MetricCardProps\n */\ninterface MetricCardProps {\n  /** Financial metric data to display in the card */\n  metric: FinancialMetric;\n}\n\n/**\n * Financial metric card component with glassmorphism design.\n * \n * Features:\n * - Modern glassmorphism styling with backdrop blur\n * - Gradient backgrounds and glass effects\n * - Smooth hover animations and scaling\n * - Enhanced visual hierarchy with better typography\n * - Improved accessibility with proper ARIA labels\n * - Responsive design for all screen sizes\n * \n * @component\n */\nconst MetricCard: React.FC<MetricCardProps> = ({ metric }) => {\n  /**\n   * Formats the metric value based on the specified format type.\n   */\n  const formatValue = (value: number, format: string) => {\n    switch (format) {\n      case 'currency':\n        return formatCurrency(value);\n      case 'percentage':\n        return formatPercentage(value);\n      case 'number':\n        return formatNumber(value);\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div \n      className=\"glass-card interactive animate-float group\"\n      style={{ padding: 'var(--space-4) var(--space-5)' }}\n      role=\"article\"\n      aria-labelledby={`metric-title-${metric.id}`}\n      aria-describedby={`metric-change-${metric.id}`}\n    >\n      {/* Card Header: Metric Title */}\n      <div className=\"flex items-center justify-between\" style={{ marginBottom: 'var(--space-4)' }}>\n        <h3 \n          id={`metric-title-${metric.id}`}\n          className=\"text-secondary font-semibold uppercase tracking-wider\"\n          style={{ fontSize: 'var(--text-sm)' }}\n        >\n          {metric.title}\n        </h3>\n      </div>\n      \n      {/* Main Value Display */}\n      <div style={{ marginBottom: 'var(--space-4)' }}>\n        <p \n          className=\"text-primary font-bold group-hover:scale-105 transition-transform duration-300\"\n          style={{ \n            fontSize: 'clamp(1.25rem, 3vw, 2rem)',\n            lineHeight: 'var(--line-height-tight)',\n            marginBottom: 'var(--space-1)',\n            wordSpacing: '-0.05em',\n            letterSpacing: '-0.025em'\n          }}\n          aria-label={`${metric.title} value: ${formatValue(metric.value, metric.format)}`}\n        >\n          {formatValue(metric.value, metric.format)}\n        </p>\n      </div>\n      \n      {/* Change Indicator and Period */}\n      <div className=\"flex items-center justify-between flex-wrap\" style={{ gap: 'var(--space-2)' }}>\n        {/* Change percentage with trend indicator */}\n        <div className=\"flex items-center\">\n          <span \n            id={`metric-change-${metric.id}`}\n            className={`flex items-center font-medium transition-colors ${\n              metric.changeType === 'increase' \n                ? 'text-green-400 hover:text-green-300' \n                : 'text-red-400 hover:text-red-300'\n            }`}\n            style={{ fontSize: 'var(--text-base)' }}\n            aria-label={`${metric.changeType === 'increase' ? 'Increased' : 'Decreased'} by ${formatPercentage(metric.change)} ${metric.period}`}\n          >\n            <span \n              className=\"transform group-hover:scale-110 transition-transform\" \n              style={{ marginRight: 'var(--space-2)' }}\n              aria-hidden=\"true\"\n            >\n              {getChangeIcon(metric.changeType)}\n            </span>\n            {formatPercentage(metric.change)}\n          </span>\n        </div>\n        \n        {/* Time period reference */}\n        <span \n          className=\"text-tertiary font-medium uppercase tracking-wide\"\n          style={{ fontSize: 'var(--text-sm)' }}\n        >\n          {metric.period}\n        </span>\n      </div>\n\n    </div>\n  );\n};\n\nexport default MetricCard;\n\n","import React from 'react';\n\n/**\n * Props for the LoadingSpinner component.\n * \n * @interface LoadingSpinnerProps\n */\ninterface LoadingSpinnerProps {\n  /** Size variant of the spinner (default: 'md') */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /** Main loading text displayed below the spinner (default: 'Loading...') */\n  text?: string;\n  \n  /** Optional secondary text for additional context */\n  subtext?: string;\n  \n  /** Additional CSS classes to apply to the container */\n  className?: string;\n}\n\n/**\n * Customizable loading spinner component with text and animations.\n * \n * Features:\n * - Multiple size options (small, medium, large)\n * - Customizable loading text and subtext\n * - Smooth spinning animation\n * - Dark mode support\n * - Responsive typography\n * - Centered layout with proper spacing\n * - Accessible with proper ARIA attributes\n * \n * Used throughout the application for loading states, data fetching,\n * and async operations to provide visual feedback to users.\n * \n * @component\n * @example\n * ```tsx\n * // Basic spinner\n * <LoadingSpinner />\n * \n * // Large spinner with custom text\n * <LoadingSpinner \n *   size=\"lg\" \n *   text=\"Loading Dashboard...\" \n *   subtext=\"Please wait while we fetch your data\"\n * />\n * \n * // Small spinner for inline loading\n * <LoadingSpinner \n *   size=\"sm\" \n *   text=\"Saving...\" \n *   className=\"py-2\"\n * />\n * \n * // Full screen loading overlay\n * <LoadingSpinner \n *   size=\"lg\"\n *   text=\"Initializing Application\"\n *   className=\"min-h-screen bg-gray-50 dark:bg-dark-bg\"\n * />\n * ```\n * \n * @param props - Component props\n * @returns React functional component rendering the loading spinner\n */\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  text = 'Loading...', \n  subtext,\n  className = '' \n}) => {\n  // Size mapping for spinner dimensions\n  const sizeClasses = {\n    sm: 'h-6 w-6',   // 24x24px for inline/small spaces\n    md: 'h-12 w-12', // 48x48px for standard loading states\n    lg: 'h-16 w-16'  // 64x64px for prominent loading states\n  };\n\n  const spinnerSize = sizeClasses[size];\n\n  return (\n    <div className={`flex items-center justify-center p-4 ${className}`} role=\"status\" aria-live=\"polite\">\n      <div className=\"text-center\">\n        {/* Animated spinner circle */}\n        <div \n          className={`animate-spin rounded-full ${spinnerSize} mx-auto mb-4`}\n          style={{\n            borderWidth: '2px',\n            borderStyle: 'solid',\n            borderColor: 'transparent',\n            borderBottomColor: 'rgba(255, 255, 255, 0.8)'\n          }}\n          aria-hidden=\"true\" // Decorative element, screen readers will use the text\n        />\n        \n        {/* Main loading text */}\n        {text && (\n          <p className=\"font-medium text-sm sm:text-base\" style={{ color: 'rgba(255, 255, 255, 0.9)' }}>\n            {text}\n          </p>\n        )}\n        \n        {/* Optional secondary text for additional context */}\n        {subtext && (\n          <p className=\"text-xs sm:text-sm mt-1 max-w-xs mx-auto\" style={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n            {subtext}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport Header from './Header';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Hospital } from '../types/finance';\nimport { User } from '../types/auth';\n\ninterface DashboardLoadingProps {\n  hospitals: Hospital[];\n  selectedHospitalId: string;\n  selectedYear: number;\n  availableYears: number[];\n  onHospitalChange: (hospitalId: string) => void;\n  onYearChange: (year: number) => void;\n  user: User | null;\n  signOut: () => void;\n}\n\nconst DashboardLoading: React.FC<DashboardLoadingProps> = ({\n  hospitals,\n  selectedHospitalId,\n  selectedYear,\n  availableYears,\n  onHospitalChange,\n  onYearChange,\n}) => {\n  const selectedHospital = hospitals.find(h => h.id === selectedHospitalId);\n\n  return (\n    <div className=\"text-white dark:text-white\">\n      <Header\n        hospitals={hospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={onHospitalChange}\n        onYearChange={onYearChange}\n      />\n      \n      <main>\n        <LoadingSpinner\n          size=\"md\"\n          text=\"Loading dashboard data...\"\n          subtext={selectedHospital ? `${selectedHospital.name} • ${selectedYear}` : ''}\n          className=\"min-h-96\"\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default DashboardLoading;\n","import React from 'react';\nimport Header from './Header';\nimport { Hospital } from '../types/finance';\nimport { User } from '../types/auth';\n\ninterface DashboardNoDataProps {\n  hospitals: Hospital[];\n  selectedHospitalId: string;\n  selectedYear: number;\n  availableYears: number[];\n  onHospitalChange: (hospitalId: string) => void;\n  onYearChange: (year: number) => void;\n  user: User | null;\n  signOut: () => void;\n}\n\n/**\n * Renders the \"no data\" state of the dashboard.\n *\n * @param {DashboardNoDataProps} props The component props.\n * @returns {React.ReactElement} The rendered \"no data\" state.\n */\nconst DashboardNoData: React.FC<DashboardNoDataProps> = ({\n  hospitals,\n  selectedHospitalId,\n  selectedYear,\n  availableYears,\n  onHospitalChange,\n  onYearChange,\n}) => {\n  return (\n    <div className=\"text-white dark:text-white\">\n      <Header\n        hospitals={hospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={onHospitalChange}\n        onYearChange={onYearChange}\n      />\n      \n      <main>\n        <div className=\"text-center py-12\">\n          <div className=\"mb-4\" style={{ color: 'var(--color-text-muted)' }}>\n            <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium mb-2\" style={{ color: 'var(--color-text-primary)' }}>No Data Available</h3>\n          <p style={{ color: 'var(--color-text-secondary)' }}>\n            No financial data found for the selected hospital and year combination.\n          </p>\n          <p className=\"text-sm mt-2\" style={{ color: 'var(--color-text-muted)' }}>\n            Please select a different hospital or year.\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default DashboardNoData;\n","import React, { useState, useEffect, useCallback, useMemo, lazy, Suspense } from 'react';\nimport Header from './Header';\nimport MetricCard from './MetricCard';\nimport { logger } from '../utils/logger';\nimport {\n  hospitals,\n  availableYears,\n  getHospitalData\n} from '../data/mockData';\nimport { HospitalData } from '../types/finance';\nimport { useAuth } from '../hooks/useAuth';\nimport Dropdown from './Dropdown';\nimport DashboardLoading from './DashboardLoading';\nimport DashboardNoData from './DashboardNoData';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst RevenueChart = lazy(() => import('./RevenueChart'));\nconst ExpensePieChart = lazy(() => import('./ExpensePieChart'));\nconst CashFlowChart = lazy(() => import('./CashFlowChart'));\nconst PatientMetricsCard = lazy(() => import('./PatientMetricsCard'));\nconst DepartmentTable = lazy(() => import('./DepartmentTable'));\n\n/**\n * Main dashboard component with modern glassmorphism design\n */\nconst Dashboard: React.FC = () => {\n  // Authentication and access control\n  const { user, signOut, getAccessibleHospitals, canAccessHospital } = useAuth();\n  const accessibleHospitals = getAccessibleHospitals();\n  \n  // Filter hospitals based on user permissions\n  const filteredHospitals = useMemo(() => {\n    return hospitals.filter(h => accessibleHospitals.includes(h.id));\n  }, [accessibleHospitals]);\n  \n  // Dashboard state management\n  const [selectedHospitalId, setSelectedHospitalId] = useState<string>(\n    accessibleHospitals[0] || ''\n  );\n  const [selectedYear, setSelectedYear] = useState<number>(2024);\n  const [currentData, setCurrentData] = useState<HospitalData | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [showFilters, setShowFilters] = useState(false);\n\n  /**\n   * Effect to load dashboard data when hospital or year selection changes.\n   */\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n    \n    if (selectedHospitalId && selectedYear) {\n      setIsLoading(true);\n      logger.info('Loading dashboard data', {\n        context: 'Dashboard',\n        data: { hospitalId: selectedHospitalId, year: selectedYear }\n      });\n      \n      timeout = setTimeout(() => {\n        const data = getHospitalData(selectedHospitalId, selectedYear);\n        if (!data) {\n          logger.warn('No data available for hospital and year', {\n            context: 'Dashboard',\n            data: { hospitalId: selectedHospitalId, year: selectedYear }\n          });\n        }\n        setCurrentData(data || null);\n        setIsLoading(false);\n      }, 500);\n    }\n\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n  }, [selectedHospitalId, selectedYear]);\n\n  /**\n   * Handles hospital selection change with access control validation.\n   */\n  const handleHospitalChange = useCallback((hospitalId: string) => {\n    if (canAccessHospital(hospitalId)) {\n      logger.info('Hospital selection changed', {\n        context: 'Dashboard',\n        data: { hospitalId }\n      });\n      setSelectedHospitalId(hospitalId);\n    } else {\n      logger.warn('Unauthorized hospital access attempt', {\n        context: 'Dashboard',\n        data: { hospitalId, userId: user?.id }\n      });\n    }\n  }, [canAccessHospital, user?.id]);\n\n  /**\n   * Handles year selection change for financial data filtering.\n   */\n  const handleYearChange = useCallback((year: number) => {\n    logger.info('Year selection changed', {\n      context: 'Dashboard',\n      data: { year, previousYear: selectedYear }\n    });\n    setSelectedYear(year);\n  }, [selectedYear]);\n\n  const hospitalOptions = useMemo(() => {\n    return filteredHospitals.map(hospital => ({\n      value: hospital.id,\n      label: hospital.name,\n      subtitle: `${hospital.type} • ${hospital.location}`\n    }));\n  }, [filteredHospitals]);\n\n  const yearOptions = useMemo(() => {\n    return availableYears.map(year => ({\n      value: year.toString(),\n      label: year.toString()\n    }));\n  }, []);\n\n  if (isLoading) {\n    return (\n      <DashboardLoading \n        hospitals={filteredHospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={handleHospitalChange}\n        onYearChange={handleYearChange}\n        user={user}\n        signOut={signOut}\n      />\n    );\n  }\n\n  if (!currentData) {\n    return (\n      <DashboardNoData\n        hospitals={filteredHospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={handleHospitalChange}\n        onYearChange={handleYearChange}\n        user={user}\n        signOut={signOut}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen text-white dark:text-white relative\">\n      <Header\n        hospitals={filteredHospitals}\n        selectedHospitalId={selectedHospitalId}\n        selectedYear={selectedYear}\n        availableYears={availableYears}\n        onHospitalChange={handleHospitalChange}\n        onYearChange={handleYearChange}\n      />\n      \n      <main className=\"mobile-safe-area\">\n        <div className=\"page-container\">\n          {/* Enhanced Mobile Filter Bar */}\n        <div className=\"xl:hidden mb-4 relative z-20\" style={{ overflow: 'visible' }}>\n          <button \n            onClick={() => setShowFilters(!showFilters)}\n            className=\"btn-base btn-primary btn-md w-full flex items-center justify-center gap-3\"\n            aria-expanded={showFilters}\n            aria-controls=\"mobile-filter-panel\"\n          >\n            <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\n            </svg>\n            <span className=\"font-medium\" style={{ lineHeight: 'var(--line-height-snug)' }}>\n              {showFilters ? 'Hide' : 'Show'} Filters\n            </span>\n          </button>\n\n          {showFilters && (\n            <div id=\"mobile-filter-panel\" className=\"mt-4 glass-card-elevated rounded-2xl component-spacing relative z-20\" style={{ overflow: 'visible' }}>\n              <div className=\"flex flex-col gap-6 relative z-20\" style={{ overflow: 'visible' }}>\n                <div className=\"relative z-30\" style={{ overflow: 'visible' }}>\n                  <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\n                    Hospital\n                  </label>\n                  <Dropdown\n                    options={hospitalOptions}\n                    value={selectedHospitalId}\n                    onChange={handleHospitalChange}\n                    placeholder=\"Select Hospital\"\n                    className=\"w-full\"\n                  />\n                </div>\n                \n                <div className=\"relative z-20\" style={{ overflow: 'visible' }}>\n                  <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\n                    Year\n                  </label>\n                  <Dropdown\n                    options={yearOptions}\n                    value={selectedYear.toString()}\n                    onChange={(value) => handleYearChange(parseInt(value))}\n                    placeholder=\"Select Year\"\n                    className=\"w-full\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Enhanced Key Performance Indicators Section */}\n        <section aria-labelledby=\"kpi-heading\" className=\"section-spacing\">\n          <h2 \n            id=\"kpi-heading\"\n            className=\"heading-2 text-center mb-10\"\n          >\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-responsive-md\">\n            {currentData.financialMetrics.map((metric) => (\n              <MetricCard key={metric.id} metric={metric} />\n            ))}\n          </div>\n        </section>\n\n        <Suspense fallback={<LoadingSpinner text=\"Loading charts...\" />}>\n          {/* Enhanced Charts Section */}\n          <section className=\"section-spacing\" aria-labelledby=\"charts-heading\">\n            <h2 id=\"charts-heading\" className=\"sr-only\">Financial Data Visualization</h2>\n            \n            {/* Revenue Chart - Full Width */}\n            <div className=\"w-full mb-8\">\n              <RevenueChart data={currentData.revenueData} availableYears={availableYears} />\n            </div>\n\n            {/* Responsive charts - stacked on mobile, side-by-side on larger screens */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-responsive-md\">\n              <ExpensePieChart data={currentData.expenseBreakdown} />\n              <CashFlowChart data={currentData.cashFlowData} />\n            </div>\n          </section>\n\n          {/* Patient Metrics Section */}\n          <section className=\"section-spacing\" aria-labelledby=\"patient-metrics-heading\">\n            <h2 id=\"patient-metrics-heading\" className=\"sr-only\">Patient Metrics</h2>\n            <PatientMetricsCard metrics={currentData.patientMetrics} />\n          </section>\n\n          {/* Department Performance Section */}\n          <section className=\"section-spacing\" aria-labelledby=\"department-performance-heading\">\n            <h2 id=\"department-performance-heading\" className=\"sr-only\">Department Performance</h2>\n            <DepartmentTable departments={currentData.departmentFinances} />\n          </section>\n        </Suspense>\n\n          {/* Enhanced Footer */}\n          <footer className=\"section-spacing\">\n            <div className=\"chart-container footer-card\" style={{ borderRadius: 'var(--radius-lg)' }}>\n              <div className=\"flex flex-col sm:flex-row items-center justify-center sm:justify-between gap-4 text-center sm:text-left\">\n                <p className=\"text-tertiary font-medium\" style={{ \n                  fontSize: 'var(--text-base)', \n                  lineHeight: '1.4',\n                  margin: 0 \n                }}>\n                  © 2024 Hospital Finance Dashboard.<br />All rights reserved.\n                </p>\n                <p className=\"text-tertiary font-medium sm:text-right sm:whitespace-nowrap\" style={{ \n                  fontSize: 'var(--text-sm)', \n                  lineHeight: '1.4',\n                  margin: 0 \n                }}>\n                  Last updated: {currentData.lastUpdated}\n                </p>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n","/**\r\n * Security utilities for the Hospital Finance Dashboard\r\n * \r\n * This module provides comprehensive security functions including\r\n * password hashing, input validation, XSS prevention, and rate limiting.\r\n * \r\n * @module security\r\n */\r\n\r\nimport bcrypt from 'bcryptjs';\r\nimport { z } from 'zod';\r\n\r\n/**\r\n * Password hashing configuration\r\n */\r\nconst PASSWORD_CONFIG = {\r\n  saltRounds: 12,\r\n  minLength: 8,\r\n  maxLength: 128\r\n} as const;\r\n\r\n/**\r\n * Rate limiting configuration\r\n */\r\nconst RATE_LIMIT_CONFIG = {\r\n  maxAttempts: 5,\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  lockoutMs: 15 * 60 * 1000  // 15 minutes\r\n} as const;\r\n\r\n/**\r\n * Hashes a password using bcrypt\r\n * \r\n * @param password - The plain text password to hash\r\n * @returns Promise<string> - The hashed password\r\n * \r\n * @example\r\n * ```typescript\r\n * const hashedPassword = await hashPassword('MySecurePassword123!');\r\n * console.log(hashedPassword); // $2a$12$...\r\n * ```\r\n */\r\nexport const hashPassword = async (password: string): Promise<string> => {\r\n  if (!password || typeof password !== 'string') {\r\n    throw new Error('Password must be a non-empty string');\r\n  }\r\n  \r\n  if (password.length < PASSWORD_CONFIG.minLength) {\r\n    throw new Error(`Password must be at least ${PASSWORD_CONFIG.minLength} characters long`);\r\n  }\r\n  \r\n  if (password.length > PASSWORD_CONFIG.maxLength) {\r\n    throw new Error(`Password must be no more than ${PASSWORD_CONFIG.maxLength} characters long`);\r\n  }\r\n  \r\n  return bcrypt.hash(password, PASSWORD_CONFIG.saltRounds);\r\n};\r\n\r\n/**\r\n * Verifies a password against its hash\r\n * \r\n * @param password - The plain text password to verify\r\n * @param hash - The hashed password to compare against\r\n * @returns Promise<boolean> - True if password matches, false otherwise\r\n * \r\n * @example\r\n * ```typescript\r\n * const isValid = await verifyPassword('MySecurePassword123!', hashedPassword);\r\n * console.log(isValid); // true or false\r\n * ```\r\n */\r\nexport const verifyPassword = async (password: string, hash: string): Promise<boolean> => {\r\n  if (!password || !hash) {\r\n    return false;\r\n  }\r\n  \r\n  try {\r\n    return bcrypt.compare(password, hash);\r\n  } catch (error) {\r\n    console.error('Password verification error:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Rate limiter class for preventing brute force attacks\r\n */\r\nexport class RateLimiter {\r\n  private attempts: Map<string, { count: number; resetTime: number; lockoutTime?: number }> = new Map();\r\n  \r\n  /**\r\n   * Checks if an action is allowed for a given key\r\n   * \r\n   * @param key - Unique identifier for the rate limit (e.g., email address)\r\n   * @param maxAttempts - Maximum number of attempts allowed (default: 5)\r\n   * @param windowMs - Time window in milliseconds (default: 15 minutes)\r\n   * @returns boolean - True if action is allowed, false if rate limited\r\n   */\r\n  isAllowed(key: string, maxAttempts: number = RATE_LIMIT_CONFIG.maxAttempts, windowMs: number = RATE_LIMIT_CONFIG.windowMs): boolean {\r\n    const now = Date.now();\r\n    const record = this.attempts.get(key);\r\n    \r\n    // Check if key is currently locked out\r\n    if (record?.lockoutTime && now < record.lockoutTime) {\r\n      return false;\r\n    }\r\n    \r\n    // If no record or window has expired, reset\r\n    if (!record || now > record.resetTime) {\r\n      this.attempts.set(key, { count: 1, resetTime: now + windowMs });\r\n      return true;\r\n    }\r\n    \r\n    // If under limit, increment and allow\r\n    if (record.count < maxAttempts) {\r\n      record.count++;\r\n      return true;\r\n    }\r\n    \r\n    // If at limit, start lockout period\r\n    if (record.count >= maxAttempts) {\r\n      record.lockoutTime = now + RATE_LIMIT_CONFIG.lockoutMs;\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Resets the rate limit for a given key\r\n   * \r\n   * @param key - The key to reset\r\n   */\r\n  reset(key: string): void {\r\n    this.attempts.delete(key);\r\n  }\r\n  \r\n  /**\r\n   * Gets the remaining attempts for a key\r\n   * \r\n   * @param key - The key to check\r\n   * @param maxAttempts - Maximum number of attempts allowed\r\n   * @returns number - Remaining attempts (0 if locked out)\r\n   */\r\n  getRemainingAttempts(key: string, maxAttempts: number = RATE_LIMIT_CONFIG.maxAttempts): number {\r\n    const record = this.attempts.get(key);\r\n    if (!record) return maxAttempts;\r\n    \r\n    const now = Date.now();\r\n    if (record.lockoutTime && now < record.lockoutTime) {\r\n      return 0; // Locked out\r\n    }\r\n    \r\n    if (now > record.resetTime) {\r\n      return maxAttempts; // Window expired\r\n    }\r\n    \r\n    return Math.max(0, maxAttempts - record.count);\r\n  }\r\n  \r\n  /**\r\n   * Gets the time until the rate limit resets\r\n   * \r\n   * @param key - The key to check\r\n   * @returns number - Milliseconds until reset (0 if not rate limited)\r\n   */\r\n  getTimeUntilReset(key: string): number {\r\n    const record = this.attempts.get(key);\r\n    if (!record) return 0;\r\n    \r\n    const now = Date.now();\r\n    if (record.lockoutTime && now < record.lockoutTime) {\r\n      return record.lockoutTime - now;\r\n    }\r\n    \r\n    if (now > record.resetTime) {\r\n      return 0;\r\n    }\r\n    \r\n    return record.resetTime - now;\r\n  }\r\n}\r\n\r\n/**\r\n * Global rate limiter instance\r\n */\r\nexport const rateLimiter = new RateLimiter();\r\n\r\n/**\r\n * Sanitizes a string to prevent XSS attacks\r\n * \r\n * @param input - The string to sanitize\r\n * @returns string - The sanitized string\r\n * \r\n * @example\r\n * ```typescript\r\n * const sanitized = sanitizeString('<script>alert(\"xss\")</script>');\r\n * console.log(sanitized); // \"alert(\"xss\")\"\r\n * ```\r\n */\r\nexport const sanitizeString = (input: string): string => {\r\n  if (typeof input !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return input\r\n    .replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n    .replace(/<iframe[^>]*>.*?<\\/iframe>/gi, '')\r\n    .replace(/<object[^>]*>.*?<\\/object>/gi, '')\r\n    .replace(/<embed[^>]*>.*?<\\/embed>/gi, '')\r\n    .replace(/<link[^>]*>.*?<\\/link>/gi, '')\r\n    .replace(/<meta[^>]*>.*?<\\/meta>/gi, '')\r\n    .replace(/javascript:/gi, '')\r\n    .replace(/vbscript:/gi, '')\r\n    .replace(/on\\w+\\s*=/gi, '')\r\n    .replace(/<[^>]*>/g, '')\r\n    .trim();\r\n};\r\n\r\n/**\r\n * Sanitizes an error object for safe display\r\n * \r\n * @param error - The error to sanitize\r\n * @returns object - Sanitized error information\r\n */\r\nexport const sanitizeError = (error: Error): { name: string; message: string; stack?: string | undefined; timestamp: string } => {\r\n  return {\r\n    name: sanitizeString(error.name),\r\n    message: sanitizeString(error.message),\r\n    stack: error.stack ? sanitizeString(error.stack) : undefined,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n};\r\n\r\n/**\r\n * Validation schemas using Zod\r\n */\r\nexport const validationSchemas = {\r\n  email: z.string().email('Invalid email format').min(1).max(255),\r\n  \r\n  password: z.string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .max(128, 'Password must be no more than 128 characters')\r\n    .regex(/[A-Z]/, 'Password must contain at least one uppercase letter')\r\n    .regex(/[a-z]/, 'Password must contain at least one lowercase letter')\r\n    .regex(/[0-9]/, 'Password must contain at least one number')\r\n    .regex(/[^A-Za-z0-9]/, 'Password must contain at least one special character'),\r\n  \r\n  name: z.string().min(1, 'Name is required').max(100, 'Name must be no more than 100 characters'),\r\n  \r\n  userRole: z.enum(['admin', 'hospital_owner', 'branch_owner']),\r\n  \r\n  hospitalId: z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters'),\r\n  \r\n  user: z.object({\r\n    email: z.string().email('Invalid email address'),\r\n    password: z.string()\r\n      .min(8, 'Password must be at least 8 characters long')\r\n      .regex(/[A-Z]/, 'Password must contain at least one uppercase letter')\r\n      .regex(/[a-z]/, 'Password must contain at least one lowercase letter')\r\n      .regex(/\\d/, 'Password must contain at least one number')\r\n      .regex(/[!@#$%^&*(),.?\":{}|<>]/, 'Password must contain at least one special character'),\r\n    name: z.string().min(2, 'Name must be at least 2 characters long').max(100, 'Name must be no more than 100 characters'),\r\n    role: z.enum(['admin', 'hospital_owner', 'branch_owner']),\r\n    hospitalId: z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters').optional(),\r\n    hospitalIds: z.array(z.string().min(1, 'Hospital ID is required').max(50, 'Hospital ID must be no more than 50 characters')).optional()\r\n  }),\r\n  \r\n  signIn: z.object({\r\n    email: z.string().email('Invalid email address'),\r\n    password: z.string().min(1, 'Password is required')\r\n  })\r\n};\r\n\r\n/**\r\n * Validates input data against a schema\r\n * \r\n * @param data - The data to validate\r\n * @param schema - The Zod schema to validate against\r\n * @returns object - Validation result with success flag and data/errors\r\n * \r\n * @example\r\n * ```typescript\r\n * const result = validateInput({ email: 'test@example.com' }, validationSchemas.email);\r\n * if (result.success) {\r\n *   console.log('Valid email:', result.data);\r\n * } else {\r\n *   console.log('Validation errors:', result.errors);\r\n * }\r\n * ```\r\n */\r\nexport const validateInput = <T>(data: unknown, schema: z.ZodSchema<T>): { success: true; data: T } | { success: false; errors: string[] } => {\r\n  try {\r\n    const validatedData = schema.parse(data);\r\n    return { success: true, data: validatedData };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { \r\n        success: false, \r\n        errors: error.errors.map(err => `${err.path.join('.')}: ${err.message}`)\r\n      };\r\n    }\r\n    return { \r\n      success: false, \r\n      errors: ['Unknown validation error'] \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Generates a secure random token\r\n * \r\n * @param length - Length of the token (default: 32)\r\n * @returns string - Secure random token\r\n */\r\nexport const generateSecureToken = (length: number = 32): string => {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let result = '';\r\n  \r\n  for (let i = 0; i < length; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n/**\r\n * Checks if a string contains potentially malicious content\r\n * \r\n * @param input - The string to check\r\n * @returns boolean - True if potentially malicious, false otherwise\r\n */\r\nexport const isPotentiallyMalicious = (input: string): boolean => {\r\n  const maliciousPatterns = [\r\n    /<script[^>]*>/i,\r\n    /javascript:/i,\r\n    /vbscript:/i,\r\n    /on\\w+\\s*=/i,\r\n    /<iframe[^>]*>/i,\r\n    /<object[^>]*>/i,\r\n    /<embed[^>]*>/i\r\n  ];\r\n  \r\n  return maliciousPatterns.some(pattern => pattern.test(input));\r\n};\r\n\r\n/**\r\n * Escapes HTML special characters\r\n * \r\n * @param input - The string to escape\r\n * @returns string - HTML-escaped string\r\n */\r\nexport const escapeHtml = (input: string): string => {\r\n  const htmlEscapes: Record<string, string> = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '/': '&#x2F;'\r\n  };\r\n  \r\n  return input.replace(/[&<>\"'/]/g, (char) => htmlEscapes[char] || char);\r\n};\r\n","import React from 'react';\n\n/**\n * Button variant types defining the visual style and semantic meaning.\n * \n * @type ButtonVariant\n * - `primary`: Main action button with brand colors\n * - `secondary`: Secondary action with muted styling  \n * - `danger`: Destructive actions with red coloring\n * - `ghost`: Minimal styling for subtle actions\n */\nexport type ButtonVariant = 'primary' | 'secondary' | 'danger' | 'ghost';\n\n/**\n * Button size variants for different use cases.\n * \n * @type ButtonSize\n * - `sm`: Small button for compact spaces\n * - `md`: Default medium size for most use cases\n * - `lg`: Large button for prominent actions\n */\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\n/**\n * Props for the Button component extending standard HTML button attributes.\n * \n * @interface ButtonProps\n */\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Visual variant of the button (default: 'primary') */\n  variant?: ButtonVariant;\n  \n  /** Size of the button (default: 'md') */\n  size?: ButtonSize;\n  \n  /** Whether the button is in a loading state with spinner */\n  isLoading?: boolean;\n  \n  /** Whether the button should take full width of its container */\n  fullWidth?: boolean;\n  \n  /** Button content (text, icons, or other React elements) */\n  children: React.ReactNode;\n}\n\n/**\n * Flexible button component with multiple variants, sizes, and states.\n * \n * Features:\n * - Multiple visual variants (primary, secondary, danger, ghost)\n * - Responsive sizing options\n * - Loading state with spinner animation\n * - Full width option\n * - Hover and focus animations\n * - Dark mode support\n * - Accessibility compliant with proper focus states\n * \n * @component\n * @example\n * ```tsx\n * // Primary action button\n * <Button variant=\"primary\" size=\"lg\">\n *   Save Changes\n * </Button>\n * \n * // Secondary button with loading state\n * <Button variant=\"secondary\" isLoading={isSubmitting}>\n *   Cancel\n * </Button>\n * \n * // Danger button for destructive actions\n * <Button variant=\"danger\" onClick={handleDelete}>\n *   Delete Item\n * </Button>\n * \n * // Ghost button with custom styling\n * <Button variant=\"ghost\" className=\"text-purple-600\">\n *   Learn More\n * </Button>\n * \n * // Full width button for forms\n * <Button fullWidth size=\"lg\">\n *   Submit Form\n * </Button>\n * ```\n * \n * @param props - Button component props\n * @returns React functional component\n */\nconst Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  isLoading = false,\n  fullWidth = false,\n  className = '',\n  children,\n  disabled,\n  ...props\n}) => {\n  // Design System Button Implementation\n  const baseClasses = `\n    btn-base\n    focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent\n    disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\n  `;\n  \n  // Design System Variant Classes\n  const variantClasses = {\n    primary: `\n      btn-primary\n      focus:ring-purple-400/50\n    `,\n    secondary: `\n      btn-secondary\n      focus:ring-purple-300/50\n    `,\n    danger: `\n      btn-danger\n      focus:ring-purple-500/50\n    `,\n    ghost: `\n      btn-ghost\n      focus:ring-purple-300/50\n    `\n  };\n\n  // Design System Size Classes\n  const sizeClasses = {\n    sm: 'btn-sm',\n    md: 'btn-md',\n    lg: 'btn-lg'\n  };\n\n  // Optional full width styling with proper responsive behavior\n  const widthClass = fullWidth ? 'w-full' : '';\n\n  // Combine all CSS classes for the button element\n  const combinedClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${widthClass} ${className}`.trim();\n\n  return (\n    <button\n      className={combinedClasses}\n      disabled={disabled || isLoading} // Disable during loading or when explicitly disabled\n      aria-busy={isLoading}\n      aria-disabled={disabled || isLoading}\n      {...props} // Spread remaining HTML button attributes\n    >\n      {isLoading ? (\n        // Enhanced loading state: show improved spinner and loading text\n        <>\n          <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white/30 border-t-white mr-3\" />\n          <span style={{ color: 'white' }}>Loading...</span>\n        </>\n      ) : (\n        // Normal state: show provided children content\n        children\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n","import { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { logger } from '../utils/logger';\r\nimport { sanitizeError } from '../utils/security';\r\nimport Button from './Button';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error?: Error;\r\n  errorInfo?: ErrorInfo;\r\n}\r\n\r\n/**\r\n * A component that catches JavaScript errors anywhere in its child component tree,\r\n * logs those errors, and displays a fallback UI instead of the component tree that crashed.\r\n */\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  public override state: State = {\r\n    hasError: false\r\n  };\r\n\r\n  public static getDerivedStateFromError(error: Error): State {\r\n    // Update state so the next render will show the fallback UI\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  public override componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    const sanitizedError = sanitizeError(error);\r\n    logger.error('Uncaught error in component', {\r\n      context: 'ErrorBoundary',\r\n      data: {\r\n        error: sanitizedError,\r\n        componentStack: errorInfo.componentStack\r\n      }\r\n    });\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  public override render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center\" style={{ \r\n          background: 'linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%)'\r\n        }}>\r\n          {/* Animated Blob Background */}\r\n          <div className=\"animated-blob-bg\">\r\n            <div className=\"blob blob-center\"></div>\r\n          </div>\r\n          \r\n          <div className=\"max-w-md w-full mx-4 relative z-10\">\r\n            <div className=\"glass-card rounded-xl p-8 text-center\" style={{\r\n              background: 'rgba(255, 255, 255, 0.05)',\r\n              backdropFilter: 'blur(20px)',\r\n              WebkitBackdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.1)',\r\n              boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.5)'\r\n            }}>\r\n              <div className=\"w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\" style={{\r\n                background: 'rgba(239, 68, 68, 0.1)',\r\n                border: '1px solid rgba(239, 68, 68, 0.2)'\r\n              }}>\r\n                <svg className=\"w-8 h-8\" style={{ color: '#ef4444' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                </svg>\r\n              </div>\r\n              \r\n              <h2 className=\"text-xl font-bold text-white mb-2\">\r\n                Something went wrong\r\n              </h2>\r\n              \r\n              <p className=\"text-white/70 mb-6\">\r\n                We encountered an unexpected error. Please try refreshing the page or contact support if the problem persists.\r\n              </p>\r\n              \r\n              <div className=\"space-y-3\">\r\n                <Button\r\n                  onClick={() => window.location.reload()}\r\n                  fullWidth\r\n                >\r\n                  Refresh Page\r\n                </Button>\r\n                \r\n                <Button\r\n                  onClick={() => this.setState({ hasError: false })}\r\n                  variant=\"secondary\"\r\n                  fullWidth\r\n                >\r\n                  Try Again\r\n                </Button>\r\n              </div>\r\n\r\n              {import.meta.env.DEV && this.state.error && (\r\n                <details className=\"mt-6 text-left\">\r\n                  <summary className=\"cursor-pointer text-sm text-white/50 mb-2 hover:text-white/70 transition-colors\">\r\n                    Error Details (Development)\r\n                  </summary>\r\n                  <div className=\"rounded-lg p-3 text-xs overflow-auto\" style={{\r\n                    background: 'rgba(0, 0, 0, 0.2)',\r\n                    border: '1px solid rgba(255, 255, 255, 0.1)'\r\n                  }}>\r\n                    <pre className=\"whitespace-pre-wrap text-red-400 font-mono\">\r\n                      {sanitizeError(this.state.error).message}\r\n                      {this.state.errorInfo?.componentStack}\r\n                    </pre>\r\n                  </div>\r\n                </details>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","// NOTE: These credentials are for demo purposes only\r\n// In a real application, these would be managed through a secure backend\r\nexport const demoAccounts = [\r\n  { \r\n    role: 'Admin',\r\n    email: import.meta.env.VITE_DEMO_ADMIN_EMAIL || 'admin@hospitalfinance.com',\r\n    password: import.meta.env.VITE_DEMO_ADMIN_PASSWORD || 'UsamaHF2024!'\r\n  },\r\n  {\r\n    role: 'Hospital Owner',\r\n    email: import.meta.env.VITE_DEMO_OWNER_EMAIL || 'owner@metrogeneral.com',\r\n    password: import.meta.env.VITE_DEMO_OWNER_PASSWORD || 'OwnerMG2024!'\r\n  },\r\n  {\r\n    role: 'Branch Manager',\r\n    email: import.meta.env.VITE_DEMO_MANAGER_EMAIL || 'manager@metrogeneral.com',\r\n    password: import.meta.env.VITE_DEMO_MANAGER_PASSWORD || 'ManagerMG2024!'\r\n  }\r\n];","import React, { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useTheme } from '../../hooks/useTheme';\nimport { validatePassword, formatAuthError } from '../../utils/auth';\nimport { demoAccounts } from '../../config/demo';\nimport { logger } from '../../utils/logger';\n\ninterface SignInPageProps {\n  onSwitchToSignUp: () => void;\n}\n\nconst SignInPage: React.FC<SignInPageProps> = ({ onSwitchToSignUp }: SignInPageProps) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const { signIn, isLoading } = useAuth();\n  const { resolvedTheme } = useTheme();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setErrorMessage('');\n\n    const validation = validatePassword(password);\n    if (!validation.isValid) {\n      setErrorMessage(validation.errors[0] || 'Invalid password');\n      return;\n    }\n\n    try {\n      logger.info('Sign in attempt', { context: 'SignInPage', data: { email } });\n      await signIn(email, password);\n      logger.info('Sign in successful', { context: 'SignInPage', data: { email } });\n    } catch (error) {\n      logger.error('Sign in failed', { context: 'SignInPage', data: { email, error } });\n      setErrorMessage(formatAuthError(error));\n    }\n  };\n\n  const fillDemo = (email: string, password: string) => {\n    setEmail(email);\n    setPassword(password);\n  };\n\n  return (\n    <div className=\"min-h-screen text-white dark:text-white relative flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      {/* Background with glassmorphism */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"blob-container\">\n          <div className=\"blob blob-center\"></div>\n        </div>\n      </div>\n      \n      <div className=\"max-w-md w-full relative z-10\">\n        <div className=\"text-center mb-8 animate-fade-in-down\">\n          <div className=\"flex justify-center mb-4\">\n            <div \n              className=\"w-16 h-16 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\"\n              style={{\n                background: resolvedTheme === 'light' \n                  ? 'white' \n                  : 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.3))',\n                border: resolvedTheme === 'light' \n                  ? '2px solid rgba(139, 92, 246, 0.2)' \n                  : '1px solid rgba(255, 255, 255, 0.2)'\n              }}\n            >\n              <svg className=\"w-8 h-8 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <defs>\n                  <linearGradient id=\"logo-gradient-signin\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#a855f7\" />\n                    <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\n                    <stop offset=\"100%\" stopColor=\"#c084fc\" />\n                  </linearGradient>\n                </defs>\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  stroke={resolvedTheme === 'light' ? \"url(#logo-gradient-signin)\" : \"white\"} \n                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" \n                />\n              </svg>\n            </div>\n          </div>\n          <h2 className=\"text-3xl font-bold tracking-tight\" style={{ color: 'var(--color-text-primary)' }}>Welcome back</h2>\n          <p className=\"mt-2\" style={{ color: 'var(--color-text-secondary)' }}>Sign in to your Hospital Finance Dashboard</p>\n        </div>\n\n        <div className=\"glass-card rounded-xl mb-6 animate-fade-in-up\" style={{ padding: 'var(--space-4)' }}>\n          <h3 className=\"text-sm font-medium mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\n            Quick Demo Access:\n          </h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n            {demoAccounts.map((account, index) => (\n              <button\n                key={index}\n                onClick={() => fillDemo(account.email, account.password)}\n                className=\"btn-base btn-secondary btn-sm text-xs interactive\"\n              >\n                <span className=\"capitalize font-medium\">\n                  {account.role.replace('_', ' ')}\n                </span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"glass-card rounded-xl animate-fade-in-up animation-delay-200 component-spacing-lg\">\n          <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\n            {errorMessage && (\n              <div className=\"glass-card rounded-lg p-4\" style={{ \n                background: 'linear-gradient(145deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1))',\n                border: '1px solid rgba(239, 68, 68, 0.3)',\n                color: 'rgba(239, 68, 68, 0.9)'\n              }}>\n                <div className=\"flex items-center gap-2\">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                  <span className=\"body-small font-medium\">{errorMessage}</span>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"flex flex-col gap-4\">\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Email Address\n                </label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email\"\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                  style={{\n                    border: '1px solid var(--border-secondary)',\n                  }}\n                />\n              </div>\n              \n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Password\n                </label>\n                <div className=\"relative\">\n                  <input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Enter your password\"\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                    style={{\n                      border: '1px solid var(--border-secondary)',\n                    }}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                  >\n                    {showPassword ? (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"btn-base btn-primary btn-lg w-full\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                  <span style={{ color: 'white' }}>Signing In...</span>\n                </div>\n              ) : (\n                'Sign In'\n              )}\n            </button>\n          </form>\n          \n          <div className=\"mt-6\">\n            <div className=\"glass-card rounded-lg p-4\">\n              <p className=\"text-sm mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\n                Don't have an account?\n              </p>\n              <button\n                type=\"button\"\n                onClick={onSwitchToSignUp}\n                className=\"btn-base btn-secondary btn-md w-full interactive\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" />\n                </svg>\n                Create Account\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-center text-xs mt-8 animate-fade-in-up animation-delay-400\" style={{ color: 'var(--color-text-muted)' }}>\n          <p>© 2024 Hospital Finance Dashboard.<br />All rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInPage;\n","import React, { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useTheme } from '../../hooks/useTheme';\nimport { UserRole, SignUpData } from '../../types/auth';\nimport { hospitals } from '../../data/mockData';\nimport { roleDescriptions } from '../../data/mockUsers';\nimport Dropdown from '../Dropdown';\n\ninterface SignUpPageProps {\n  onSwitchToSignIn: () => void;\n}\n\nconst SignUpPage: React.FC<SignUpPageProps> = ({ onSwitchToSignIn }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: 'branch_owner' as UserRole,\n    hospitalId: '',\n    hospitalIds: [] as string[]\n  });\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const { signUp, isLoading } = useAuth();\n  const { resolvedTheme } = useTheme();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    if (formData.password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    if (formData.role === 'branch_owner' && !formData.hospitalId) {\n      setError('Please select a hospital for branch manager role');\n      return;\n    }\n\n    if (formData.role === 'hospital_owner' && formData.hospitalIds.length === 0) {\n      setError('Please select at least one hospital for hospital owner role');\n      return;\n    }\n\n    try {\n      const signUpData: SignUpData = {\n        name: formData.name,\n        email: formData.email,\n        password: formData.password,\n        role: formData.role\n      };\n\n      if (formData.role === 'branch_owner' && formData.hospitalId) {\n        signUpData.hospitalId = formData.hospitalId;\n      }\n      \n      if (formData.role === 'hospital_owner' && formData.hospitalIds.length > 0) {\n        signUpData.hospitalIds = formData.hospitalIds;\n      }\n\n      await signUp(signUpData);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n    }\n  };\n\n  const handleInputChange = (field: string, value: string | string[]) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleHospitalSelection = (hospitalId: string, checked: boolean) => {\n    if (checked) {\n      setFormData(prev => ({\n        ...prev,\n        hospitalIds: [...prev.hospitalIds, hospitalId]\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        hospitalIds: prev.hospitalIds.filter(id => id !== hospitalId)\n      }));\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen text-white dark:text-white relative flex items-center justify-center py-6 sm:py-12 px-4 sm:px-6 lg:px-8\">\n      {/* Background with glassmorphism */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"blob-container\">\n          <div className=\"blob blob-center\"></div>\n        </div>\n      </div>\n      \n      <div className=\"max-w-lg w-full relative z-10\">\n        <div className=\"text-center mb-8 animate-fade-in-down\">\n          <div className=\"flex justify-center mb-4\">\n            <div \n              className=\"w-16 h-16 rounded-xl flex items-center justify-center animate-pulse-glow shadow-lg transition-all duration-300 interactive-element\"\n              style={{\n                background: resolvedTheme === 'light' \n                  ? 'white' \n                  : 'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.3))',\n                border: resolvedTheme === 'light' \n                  ? '2px solid rgba(139, 92, 246, 0.2)' \n                  : '1px solid rgba(255, 255, 255, 0.2)'\n              }}\n            >\n              <svg className=\"w-8 h-8 relative z-10 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <defs>\n                  <linearGradient id=\"logo-gradient-signup\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#a855f7\" />\n                    <stop offset=\"50%\" stopColor=\"#8b5cf6\" />\n                    <stop offset=\"100%\" stopColor=\"#c084fc\" />\n                  </linearGradient>\n                </defs>\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  stroke={resolvedTheme === 'light' ? \"url(#logo-gradient-signup)\" : \"white\"} \n                  d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" \n                />\n              </svg>\n            </div>\n          </div>\n          <h2 className=\"text-3xl font-bold tracking-tight\" style={{ color: 'var(--color-text-primary)' }}>Create an Account</h2>\n          <p className=\"mt-2\" style={{ color: 'var(--color-text-secondary)' }}>Join the Hospital Finance Dashboard</p>\n        </div>\n\n        <div className=\"glass-card rounded-xl animate-fade-in-up component-spacing-lg\">\n          <form onSubmit={handleSubmit} className=\"flex flex-col gap-6\">\n            {error && (\n              <div className=\"glass-card rounded-lg\" style={{ \n                padding: 'var(--space-4)',\n                background: 'linear-gradient(145deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1))',\n                border: '1px solid rgba(239, 68, 68, 0.3)',\n                color: 'rgba(239, 68, 68, 0.9)'\n              }}>\n                <div className=\"flex items-center gap-2\">\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                  <span className=\"body-small font-medium\">{error}</span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Full Name\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  required\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  placeholder=\"Enter your full name\"\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                  style={{\n                    border: '1px solid var(--border-secondary)',\n                  }}\n                />\n              </div>\n\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Email Address\n                </label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  required\n                  value={formData.email}\n                  onChange={(e) => handleInputChange('email', e.target.value)}\n                  placeholder=\"Enter your email\"\n                  className=\"w-full px-4 py-3 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                  style={{\n                    border: '1px solid var(--border-secondary)',\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Password\n                </label>\n                <div className=\"relative\">\n                  <input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    required\n                    value={formData.password}\n                    onChange={(e) => handleInputChange('password', e.target.value)}\n                    placeholder=\"Create a password\"\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                    style={{\n                      border: '1px solid var(--border-secondary)',\n                    }}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                  >\n                    {showPassword ? (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Confirm Password\n                </label>\n                <div className=\"relative\">\n                  <input\n                    id=\"confirmPassword\"\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    required\n                    value={formData.confirmPassword}\n                    onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                    placeholder=\"Confirm your password\"\n                    className=\"w-full px-4 py-3 pr-12 rounded-lg border-0 bg-white/10 backdrop-blur-sm text-white placeholder-white/50 form-input-focus interactive\"\n                    style={{\n                      border: '1px solid var(--border-secondary)',\n                    }}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors\"\n                    aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\n                  >\n                    {showConfirmPassword ? (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\" />\n                      </svg>\n                    ) : (\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-3)', display: 'block' }}>\n                Account Type\n              </label>\n              <div className=\"flex flex-col gap-3\">\n                {(Object.keys(roleDescriptions) as UserRole[]).map((role) => (\n                  <div key={role} className=\"glass-card rounded-lg p-3 interactive\" style={{ \n                    background: formData.role === role ? 'rgba(139, 92, 246, 0.2)' : 'rgba(255, 255, 255, 0.05)',\n                    border: `1px solid ${formData.role === role ? 'var(--brand-primary)' : 'var(--border-secondary)'}`,\n                    opacity: role === 'admin' ? 0.5 : 1\n                  }}>\n                    <div className=\"flex items-start\">\n                      <input\n                        id={role}\n                        type=\"radio\"\n                        name=\"role\"\n                        value={role}\n                        checked={formData.role === role}\n                        onChange={(e) => handleInputChange('role', e.target.value as UserRole)}\n                        className=\"custom-radio mt-1\"\n                        disabled={role === 'admin'}\n                      />\n                      <div className=\"ml-3\">\n                        <label htmlFor={role} className=\"body-base font-medium form-label-interactive\" style={{ color: 'var(--color-text-primary)', display: 'block' }}>\n                          {roleDescriptions[role].title}\n                          {role === 'admin' && <span style={{ color: 'var(--color-text-muted)' }} className=\"ml-2\">(Contact admin)</span>}\n                        </label>\n                        <p className=\"text-xs mt-1\" style={{ color: 'var(--color-text-muted)' }}>\n                          {roleDescriptions[role].description}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {formData.role === 'branch_owner' && (\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Select Hospital\n                </label>\n                <Dropdown\n                  options={hospitals.map(hospital => ({\n                    value: hospital.id,\n                    label: hospital.name,\n                    subtitle: `${hospital.type} • ${hospital.location}`\n                  }))}\n                  value={formData.hospitalId}\n                  onChange={(value) => handleInputChange('hospitalId', value)}\n                  placeholder=\"Choose a hospital...\"\n                  className=\"w-full\"\n                />\n              </div>\n            )}\n\n            {formData.role === 'hospital_owner' && (\n              <div>\n                <label className=\"text-label\" style={{ color: 'var(--color-text-secondary)', marginBottom: 'var(--space-2)', display: 'block' }}>\n                  Select Hospitals (you can select multiple)\n                </label>\n                <div className=\"flex flex-col gap-2 max-h-32 overflow-y-auto glass-card rounded-lg p-3\">\n                  {hospitals.map((hospital) => (\n                    <div key={hospital.id} className=\"flex items-center p-2 rounded hover:bg-white/5 transition-colors\">\n                      <input\n                        id={`hospital-${hospital.id}`}\n                        type=\"checkbox\"\n                        checked={formData.hospitalIds.includes(hospital.id)}\n                        onChange={(e) => handleHospitalSelection(hospital.id, e.target.checked)}\n                        className=\"custom-checkbox\"\n                      />\n                      <label htmlFor={`hospital-${hospital.id}`} className=\"ml-2 text-sm form-label-interactive\" style={{ color: 'var(--color-text-primary)' }}>\n                        {hospital.name}\n                        <span style={{ color: 'var(--color-text-muted)' }} className=\"ml-1\">({hospital.type} • {hospital.location})</span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"btn-base btn-primary btn-lg w-full\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                  <span style={{ color: 'white' }}>Creating Account...</span>\n                </div>\n              ) : (\n                'Create Account'\n              )}\n            </button>\n\n            <div className=\"mt-6\">\n              <div className=\"glass-card rounded-lg p-4\">\n                <p className=\"text-sm mb-3 text-center\" style={{ color: 'var(--color-text-secondary)' }}>\n                  Already have an account?\n                </p>\n                <button\n                  type=\"button\"\n                  onClick={onSwitchToSignIn}\n                  className=\"btn-base btn-secondary btn-md w-full interactive\"\n                >\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                  </svg>\n                  Sign In\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"text-center text-xs mt-8 animate-fade-in-up animation-delay-200\" style={{ color: 'var(--color-text-muted)' }}>\n          <p>© 2024 Hospital Finance Dashboard.<br />All rights reserved.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","import React, { useState } from 'react';\nimport SignInPage from './SignInPage';\nimport SignUpPage from './SignUpPage';\nimport LoadingSpinner from '../LoadingSpinner';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface AuthWrapperProps {\n  children: React.ReactNode;\n}\n\n/**\n * A component that wraps the main application and handles authentication.\n * It displays a loading spinner while checking the user's authentication status,\n * and shows the sign-in or sign-up page if the user is not authenticated.\n *\n * @param {AuthWrapperProps} props The component props.\n * @param {React.ReactNode} props.children The child components to render if the user is authenticated.\n * @returns {React.ReactElement} The rendered component.\n */\nconst AuthWrapper: React.FC<AuthWrapperProps> = ({ children }) => {\n  const [isSignUp, setIsSignUp] = useState(false);\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <LoadingSpinner\n        size=\"md\"\n        text=\"Loading...\"\n        className=\"min-h-screen\"\n      />\n    );\n  }\n\n  if (!isAuthenticated) {\n    return isSignUp ? (\n      <SignUpPage onSwitchToSignIn={() => setIsSignUp(false)} />\n    ) : (\n      <SignInPage onSwitchToSignUp={() => setIsSignUp(true)} />\n    );\n  }\n\n  return <>{children}</>;\n};\n\nexport default AuthWrapper;\n","import { Suspense } from 'react';\nimport Dashboard from './components/Dashboard';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport AuthWrapper from './components/auth/AuthWrapper';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <ThemeProvider>\n        <AuthProvider>\n          <div className=\"App min-h-screen text-white dark:text-white transition-colors duration-300\">\n            {/* Preload theme styles to prevent first-time abrupt changes */}\n            <div className=\"preload-themes absolute opacity-0 pointer-events-none -z-50\" aria-hidden=\"true\">\n              <div className=\"glass-card btn-base btn-primary btn-secondary theme-toggle animate-pulse-glow\">\n                <div className=\"dropdown-button dropdown-options gradient-bg-primary\"></div>\n                <div className=\"logo-container logo-container-inverted\"></div>\n                <div className=\"avatar-gradient-border performance-insight-card\"></div>\n              </div>\n            </div>\n            \n            {/* Animated Blob Background */}\n            <div className=\"animated-blob-bg\">\n              <div className=\"blob blob-center\"></div>\n            </div>\n            \n            <AuthWrapper>\n              <Suspense fallback={<LoadingSpinner text=\"Loading Dashboard...\" className=\"min-h-screen\" />}>\n                <Dashboard />\n              </Suspense>\n            </AuthWrapper>\n          </div>\n        </AuthProvider>\n      </ThemeProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n\r\n"],"file":"assets/main--z0CMa-F.js"}